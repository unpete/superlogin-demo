module.exports = function meta($p) {

$p.wsql.alasql('USE md; CREATE TABLE IF NOT EXISTS `areg_invoice_payments` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `trans` CHAR, `partner` CHAR, `organization` CHAR, `period` Date, `recorder` CHAR, `amount_mutual` FLOAT, `amount_operation` FLOAT); CREATE TABLE IF NOT EXISTS `areg_planning` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `phase` CHAR, `date` Date, `work_center` CHAR, `obj` CHAR, `elm` INT, `specimen` INT, `period` Date, `recorder` CHAR, `quantity` FLOAT, `cost` FLOAT); CREATE TABLE IF NOT EXISTS `ireg_currency_courses` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `currency` CHAR, `period` Date, `course` FLOAT, `multiplicity` INT); CREATE TABLE IF NOT EXISTS `ireg_margin_coefficients` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `price_group` CHAR, `parameters_key` CHAR, `condition_formula` CHAR, `marginality` FLOAT, `marginality_min` FLOAT, `marginality_internal` FLOAT, `price_type_first_cost` CHAR, `price_type_sale` CHAR, `price_type_internal` CHAR, `formula` CHAR, `sale_formula` CHAR, `internal_formula` CHAR, `external_formula` CHAR, `extra_charge_external` FLOAT, `discount_external` FLOAT, `discount` FLOAT, `note` CHAR); CREATE TABLE IF NOT EXISTS `ireg_$log` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `date` INT, `sequence` INT, `class` CHAR, `note` CHAR, `obj` CHAR); CREATE TABLE IF NOT EXISTS `ireg_buyers_order_states` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `invoice` CHAR, `state` CHAR, `event_date` Date, `СуммаОплаты` FLOAT, `ПроцентОплаты` INT, `СуммаОтгрузки` FLOAT, `ПроцентОтгрузки` INT, `СуммаДолга` FLOAT, `ПроцентДолга` INT, `ЕстьРасхожденияОрдерНакладная` BOOLEAN); CREATE TABLE IF NOT EXISTS `doc_planning_event` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `phase` CHAR, `work_center` CHAR, `recipient` CHAR, `calc_order` CHAR, `note` CHAR, `ts_executors` JSON, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_nom_prices_setup` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `price_type` CHAR, `currency` CHAR, `responsible` CHAR, `note` CHAR, `ts_goods` JSON); CREATE TABLE IF NOT EXISTS `doc_selling` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_goods` JSON, `ts_services` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_cash_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `cashbox` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON); CREATE TABLE IF NOT EXISTS `doc_debit_cash_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `cashbox` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_bank_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON); CREATE TABLE IF NOT EXISTS `doc_debit_bank_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON); CREATE TABLE IF NOT EXISTS `doc_work_centers_performance` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `start_date` Date, `expiration_date` Date, `responsible` CHAR, `note` CHAR, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_credit_card_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_payment_details` JSON); CREATE TABLE IF NOT EXISTS `doc_calc_order` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `number_internal` CHAR, `project` CHAR, `organization` CHAR, `partner` CHAR, `client_of_dealer` CHAR, `contract` CHAR, `bank_account` CHAR, `note` CHAR, `manager` CHAR, `leading_manager` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `amount_operation` FLOAT, `amount_internal` FLOAT, `accessory_characteristic` CHAR, `sys_profile` CHAR, `sys_furn` CHAR, `phone` CHAR, `delivery_area` CHAR, `shipping_address` CHAR, `coordinates` CHAR, `address_fields` CHAR, `difficult` BOOLEAN, `vat_consider` BOOLEAN, `vat_included` BOOLEAN, `settlements_course` FLOAT, `settlements_multiplicity` INT, `obj_delivery_state` CHAR, `category` CHAR, `ts_production` JSON, `ts_extra_fields` JSON, `ts_contact_information` JSON, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `doc_work_centers_task` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `work_center` CHAR, `recipient` CHAR, `responsible` CHAR, `note` CHAR, `ts_planning` JSON, `ts_Потребность` JSON, `ts_ПотребностьИтог` JSON, `ts_ОбрезьВход` JSON, `ts_ОбрезьВыход` JSON, `ts_Раскрой` JSON); CREATE TABLE IF NOT EXISTS `doc_purchase` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `organization` CHAR, `partner` CHAR, `department` CHAR, `warehouse` CHAR, `doc_amount` FLOAT, `responsible` CHAR, `note` CHAR, `ts_goods` JSON, `ts_services` JSON); CREATE TABLE IF NOT EXISTS `doc_registers_correction` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `original_doc_type` CHAR, `responsible` CHAR, `note` CHAR, `ts_registers_table` JSON); CREATE TABLE IF NOT EXISTS `cat_planning_keys` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `work_shift` CHAR, `department` CHAR, `work_center` CHAR, `work_center_kind` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_insert_bind` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `inset` CHAR, `zone` INT, `predefined_name` CHAR, `ts_production` JSON); CREATE TABLE IF NOT EXISTS `cat_nom_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `vat_rate` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_price_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `definition` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_characteristics` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `x` FLOAT, `y` FLOAT, `z` FLOAT, `s` FLOAT, `clr` CHAR, `weight` FLOAT, `condition_products` FLOAT, `calc_order` CHAR, `product` INT, `leading_product` CHAR, `leading_elm` INT, `note` CHAR, `partner` CHAR, `sys` CHAR, `predefined_name` CHAR, `owner` CHAR, `ts_constructions` JSON, `ts_coordinates` JSON, `ts_cnn_elmnts` JSON, `ts_params` JSON, `ts_glass_specification` JSON, `ts_extra_fields` JSON, `ts_glasses` JSON, `ts_mosquito` JSON, `ts_specification` JSON); CREATE TABLE IF NOT EXISTS `cat_individuals` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `birth_date` Date, `inn` CHAR, `imns_code` CHAR, `note` CHAR, `pfr_number` CHAR, `sex` CHAR, `birth_place` CHAR, `ОсновноеИзображение` CHAR, `Фамилия` CHAR, `Имя` CHAR, `Отчество` CHAR, `ФамилияРП` CHAR, `ИмяРП` CHAR, `ОтчествоРП` CHAR, `ОснованиеРП` CHAR, `ДолжностьРП` CHAR, `Должность` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON); CREATE TABLE IF NOT EXISTS `cat_nom_prices_types` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `price_currency` CHAR, `discount_percent` FLOAT, `vat_price_included` BOOLEAN, `rounding_order` CHAR, `rounding_in_a_big_way` BOOLEAN, `note` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_cash_flow_articles` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `definition` CHAR, `sorting_field` INT, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_stores` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `note` CHAR, `department` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_projects` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `start` Date, `finish` Date, `launch` Date, `readiness` Date, `finished` BOOLEAN, `responsible` CHAR, `note` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_users` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `invalid` BOOLEAN, `department` CHAR, `individual_person` CHAR, `note` CHAR, `ancillary` BOOLEAN, `user_ib_uid` CHAR, `user_fresh_uid` CHAR, `id` CHAR, `predefined_name` CHAR, `ts_extra_fields` JSON, `ts_contact_information` JSON); CREATE TABLE IF NOT EXISTS `cat_divisions` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `main_project` CHAR, `sorting` INT, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_color_price_groups` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `НазначениеЦветовойГруппы` CHAR, `predefined_name` CHAR, `ts_price_groups` JSON, `ts_clr_conformity` JSON); CREATE TABLE IF NOT EXISTS `cat_clrs` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `ral` CHAR, `machine_tools_clr` CHAR, `clr_str` CHAR, `clr_out` CHAR, `clr_in` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_furns` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `flap_weight_max` INT, `left_right` BOOLEAN, `is_set` BOOLEAN, `is_sliding` BOOLEAN, `furn_set` CHAR, `side_count` INT, `handle_side` INT, `open_type` CHAR, `name_short` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_open_tunes` JSON, `ts_specification` JSON, `ts_selection_params` JSON, `ts_specification_restrictions` JSON, `ts_colors` JSON); CREATE TABLE IF NOT EXISTS `cat_cnns` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `priority` INT, `amin` INT, `amax` INT, `sd1` CHAR, `sd2` CHAR, `sz` FLOAT, `cnn_type` CHAR, `ahmin` INT, `ahmax` INT, `lmin` INT, `lmax` INT, `tmin` INT, `tmax` INT, `var_layers` BOOLEAN, `for_direct_profile_only` INT, `art1vert` BOOLEAN, `art1glass` BOOLEAN, `art2glass` BOOLEAN, `predefined_name` CHAR, `ts_specification` JSON, `ts_cnn_elmnts` JSON, `ts_selection_params` JSON); CREATE TABLE IF NOT EXISTS `cat_delivery_areas` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `country` CHAR, `region` CHAR, `city` CHAR, `latitude` FLOAT, `longitude` FLOAT, `ind` CHAR, `delivery_area` CHAR, `specify_area_by_geocoder` BOOLEAN, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_users_acl` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `prefix` CHAR, `predefined_name` CHAR, `owner` CHAR, `ts_acl_objs` JSON); CREATE TABLE IF NOT EXISTS `cat_production_params` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `default_clr` CHAR, `allow_open_cnn` BOOLEAN, `clr_group` CHAR, `is_drainage` BOOLEAN, `tmin` INT, `tmax` INT, `lay_split_type` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_elmnts` JSON, `ts_production` JSON, `ts_product_params` JSON, `ts_furn_params` JSON, `ts_base_blocks` JSON); CREATE TABLE IF NOT EXISTS `cat_parameters_keys` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `КоличествоПараметров` INT, `predefined_name` CHAR, `ts_params` JSON); CREATE TABLE IF NOT EXISTS `cat_inserts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `insert_type` CHAR, `clr` CHAR, `priority` INT, `lmin` INT, `lmax` INT, `hmin` INT, `hmax` INT, `smin` FLOAT, `smax` FLOAT, `for_direct_profile_only` INT, `ahmin` INT, `ahmax` INT, `mmin` INT, `mmax` INT, `insert_glass_type` CHAR, `impost_fixation` CHAR, `shtulp_fixation` BOOLEAN, `can_rotate` BOOLEAN, `sizeb` FLOAT, `clr_group` CHAR, `predefined_name` CHAR, `ts_specification` JSON, `ts_selection_params` JSON); CREATE TABLE IF NOT EXISTS `cat_organizations` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `prefix` CHAR, `individual_legal` CHAR, `individual_entrepreneur` CHAR, `inn` CHAR, `kpp` CHAR, `main_bank_account` CHAR, `main_cashbox` CHAR, `certificate_series_number` CHAR, `certificate_date_issue` Date, `certificate_authority_name` CHAR, `certificate_authority_code` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_nom` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `article` CHAR, `name_full` CHAR, `base_unit` CHAR, `storage_unit` CHAR, `nom_kind` CHAR, `nom_group` CHAR, `vat_rate` CHAR, `note` CHAR, `price_group` CHAR, `elm_type` CHAR, `len` FLOAT, `width` FLOAT, `thickness` FLOAT, `sizefurn` FLOAT, `sizefaltz` FLOAT, `density` FLOAT, `volume` FLOAT, `arc_elongation` FLOAT, `loss_factor` FLOAT, `rounding_quantity` INT, `clr` CHAR, `cutting_optimization_type` CHAR, `saw_width` FLOAT, `double_cut` INT, `overmeasure` FLOAT, `coloration_area` FLOAT, `pricing` CHAR, `visualization` CHAR, `complete_list_sorting` INT, `is_accessory` BOOLEAN, `is_procedure` BOOLEAN, `is_service` BOOLEAN, `is_pieces` BOOLEAN, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_partners` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `main_bank_account` CHAR, `note` CHAR, `kpp` CHAR, `okpo` CHAR, `inn` CHAR, `individual_legal` CHAR, `main_contract` CHAR, `identification_document` CHAR, `buyer_main_manager` CHAR, `is_buyer` BOOLEAN, `is_supplier` BOOLEAN, `primary_contact` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_units` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `international_short` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_cashboxes` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `funds_currency` CHAR, `department` CHAR, `current_account` CHAR, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_meta_ids` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `full_moniker` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `heft` FLOAT, `ПолноеНаименование` CHAR, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_nom_units` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `qualifier_unit` CHAR, `heft` FLOAT, `volume` FLOAT, `coefficient` FLOAT, `rounding_threshold` INT, `ПредупреждатьОНецелыхМестах` BOOLEAN, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_contracts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `settlements_currency` CHAR, `mutual_settlements` CHAR, `contract_kind` CHAR, `date` Date, `check_days_without_pay` BOOLEAN, `allowable_debts_amount` FLOAT, `allowable_debts_days` INT, `note` CHAR, `check_debts_amount` BOOLEAN, `check_debts_days` BOOLEAN, `number_doc` CHAR, `organization` CHAR, `main_cash_flow_article` CHAR, `main_project` CHAR, `accounting_reflect` BOOLEAN, `tax_accounting_reflect` BOOLEAN, `prepayment_percent` FLOAT, `validity` Date, `vat_included` BOOLEAN, `price_type` CHAR, `vat_consider` BOOLEAN, `days_without_pay` INT, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_nom_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `nom_type` CHAR, `НаборСвойствНоменклатура` CHAR, `НаборСвойствХарактеристика` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_contact_information_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `ВидПоляДругое` CHAR, `Используется` BOOLEAN, `mandatory_fields` BOOLEAN, `type` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_currencies` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `extra_charge` FLOAT, `main_currency` CHAR, `parameters_russian_recipe` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_elm_visualization` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `svg_path` CHAR, `note` CHAR, `attributes` CHAR, `rotate` INT, `offset` INT, `side` CHAR, `elm_side` INT, `cx` INT, `cy` INT, `angle_hor` INT, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_formulas` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `formula` CHAR, `leading_formula` CHAR, `condition_formula` BOOLEAN, `definition` CHAR, `template` CHAR, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `ts_params` JSON); CREATE TABLE IF NOT EXISTS `cat_countries` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `name_full` CHAR, `alpha2` CHAR, `alpha3` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_centers` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `work_center_kind` CHAR, `КоэффициентВремениРаботы` FLOAT, `МаксимальнаяЗагрузка` FLOAT, `calendar` CHAR, `definition` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_destinations` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `КоличествоРеквизитов` CHAR, `КоличествоСведений` CHAR, `Используется` BOOLEAN, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON, `ts_extra_properties` JSON); CREATE TABLE IF NOT EXISTS `cat_banks_qualifier` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `correspondent_account` CHAR, `city` CHAR, `address` CHAR, `phone_numbers` CHAR, `activity_ceased` BOOLEAN, `swift` CHAR, `inn` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_property_values_hierarchy` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `heft` FLOAT, `ПолноеНаименование` CHAR, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_center_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_organization_bank_accounts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `bank` CHAR, `bank_bic` CHAR, `funds_currency` CHAR, `account_number` CHAR, `settlements_bank` CHAR, `settlements_bank_bic` CHAR, `department` CHAR, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_partner_bank_accounts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `account_number` CHAR, `bank` CHAR, `settlements_bank` CHAR, `correspondent_text` CHAR, `appointments_text` CHAR, `funds_currency` CHAR, `bank_bic` CHAR, `bank_name` CHAR, `bank_correspondent_account` CHAR, `bank_city` CHAR, `bank_address` CHAR, `bank_phone_numbers` CHAR, `settlements_bank_bic` CHAR, `settlements_bank_correspondent_account` CHAR, `settlements_bank_city` CHAR, `predefined_name` CHAR, `owner` CHAR); CREATE TABLE IF NOT EXISTS `cat_params_links` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `master` CHAR, `slave` CHAR, `zone` INT, `predefined_name` CHAR, `ts_values` JSON); CREATE TABLE IF NOT EXISTS `cch_properties` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `shown` BOOLEAN, `extra_values_owner` CHAR, `available` BOOLEAN, `caption` CHAR, `mandatory` BOOLEAN, `note` CHAR, `destination` CHAR, `tooltip` CHAR, `is_extra_property` BOOLEAN, `list` BOOLEAN, `predefined_name` CHAR, `type` JSON, `ts_extra_fields_dependencies` JSON); CREATE TABLE IF NOT EXISTS `cch_predefined_elmnts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `value` CHAR, `definition` CHAR, `synonym` CHAR, `list` INT, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `type` CHAR, `ts_elmnts` JSON); CREATE TABLE IF NOT EXISTS `enm_individual_legal` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_nom_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contact_information_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_vat_rates` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_buyers_order_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_gender` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_positions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_elm_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_sz_line_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cutting_optimization_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_lay_split_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_glass_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_sides` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_specification_installation_methods` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_angle_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_count_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_simple_complex_all` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_orientations` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_plan_limit` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_directions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_text_aligns` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contraction_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_offset_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_transfer_operations_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_НазначенияЦветовыхГрупп` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_order_categories` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_caching_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_obj_delivery_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contract_kinds` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_mutual_contract_settlements` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_impost_mount_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inset_attrs_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_accumulation_record_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); ', []);

$p.md.init({"enm":{"accumulation_record_type":[{"order":0,"name":"debit","synonym":"Приход"},{"order":1,"name":"credit","synonym":"Расход"}],"inset_attrs_options":[{"order":0,"name":"НеПоперечина","synonym":"Не поперечина"},{"order":1,"name":"ОбаНаправления","synonym":"Оба направления"},{"order":2,"name":"ОтключитьВтороеНаправление","synonym":"Отключить второе направление"},{"order":3,"name":"ОтключитьШагиВторогоНаправления","synonym":"Отключить шаги второго направления"},{"order":4,"name":"ОтключитьПервоеНаправление","synonym":"Отключить первое направление"},{"order":5,"name":"ОтключитьШагиПервогоНаправления","synonym":"Отключить шаги первого направления"}],"impost_mount_options":[{"order":0,"name":"НетКрепленийИмпостовИРам","synonym":"Нет креплений импостов и рам"},{"order":1,"name":"МогутКрепитьсяИмпосты","synonym":"Могут крепиться импосты"},{"order":2,"name":"ДолжныБытьКрепленияИмпостов","synonym":"Должны быть крепления импостов"}],"mutual_contract_settlements":[{"order":0,"name":"ПоДоговоруВЦелом","synonym":"По договору в целом"},{"order":1,"name":"ПоЗаказам","synonym":"По заказам"},{"order":2,"name":"ПоСчетам","synonym":"По счетам"}],"contract_kinds":[{"order":0,"name":"СПоставщиком","synonym":"С поставщиком"},{"order":1,"name":"СПокупателем","synonym":"С покупателем"},{"order":2,"name":"СКомитентом","synonym":"С комитентом"},{"order":3,"name":"СКомиссионером","synonym":"С комиссионером"},{"order":4,"name":"Прочее","synonym":"Прочее"}],"obj_delivery_states":[{"order":0,"name":"Черновик","synonym":"Черновик"},{"order":1,"name":"Отправлен","synonym":"Отправлен"},{"order":2,"name":"Подтвержден","synonym":"Подтвержден"},{"order":3,"name":"Отклонен","synonym":"Отклонен"},{"order":4,"name":"Отозван","synonym":"Отозван"},{"order":5,"name":"Архив","synonym":"Перенесён в архив"},{"order":6,"name":"Шаблон","synonym":"Шаблон"}],"caching_type":[{"order":0,"name":"ram","synonym":"ram"},{"order":1,"name":"doc","synonym":"doc"},{"order":2,"name":"doc_remote","synonym":"doc_remote"},{"order":3,"name":"remote","synonym":"remote"},{"order":4,"name":"user","synonym":"user"},{"order":5,"name":"meta","synonym":"meta"},{"order":6,"name":"e1cib","synonym":"e1cib"},{"order":7,"name":"pgsql","synonym":"pgsql"}],"order_categories":[{"order":0,"name":"РасчетЗаказ","synonym":"Расчет заказ"},{"order":1,"name":"Сервис","synonym":"Сервис"},{"order":2,"name":"Рекламация","synonym":"Рекламация"}],"НазначенияЦветовыхГрупп":[{"order":0,"name":"ДляЦенообразования","synonym":"Для ценообразования"},{"order":1,"name":"ДляХарактеристик","synonym":"Для характеристик"},{"order":2,"name":"ДляГруппировкиВПараметрах","synonym":"Для группировки в параметрах"},{"order":3,"name":"ДляОграниченияДоступности","synonym":"Для ограничения доступности"}],"transfer_operations_options":[{"order":0,"name":"НетПереноса","synonym":"Нет переноса"},{"order":1,"name":"НаПримыкающий","synonym":"На примыкающий"}],"offset_options":[{"order":0,"name":"ОтНачалаСтороны","synonym":"От начала стороны"},{"order":1,"name":"ОтКонцаСтороны","synonym":"От конца стороны"},{"order":2,"name":"ОтРучки","synonym":"От ручки"},{"order":3,"name":"РазмерПоФальцу","synonym":"Размер по фальцу"},{"order":4,"name":"Формула","synonym":"Формула"}],"contraction_options":[{"order":0,"name":"ОтДлиныСтороны","synonym":"От длины стороны"},{"order":1,"name":"ОтВысотыРучки","synonym":"От высоты ручки"},{"order":2,"name":"ОтДлиныСтороныМинусВысотыРучки","synonym":"От длины стороны минус высота ручки"},{"order":3,"name":"ФиксированнаяДлина","synonym":"Фиксированная длина"}],"text_aligns":[{"order":0,"name":"left","synonym":"Лево"},{"order":1,"name":"right","synonym":"Право"},{"order":2,"name":"center","synonym":"Центр"}],"open_directions":[{"order":0,"name":"Левое","synonym":"Левое"},{"order":1,"name":"Правое","synonym":"Правое"},{"order":2,"name":"Откидное","synonym":"Откидное"}],"plan_limit":[{"order":0,"name":"ПоУО","synonym":"По условным изделиям"},{"order":1,"name":"ПоПлощади","synonym":"По площади изделий"},{"order":2,"name":"ПоКоличеству","synonym":"По количеству изделий или элементов"},{"order":3,"name":"ПоКоличествуОпераций","synonym":"По количеству технологических операций"},{"order":4,"name":"НеОграничивать","synonym":"Не ограничивать"}],"orientations":[{"order":0,"name":"Горизонтальная","synonym":"Горизонтальная"},{"order":1,"name":"Вертикальная","synonym":"Вертикальная"},{"order":2,"name":"Наклонная","synonym":"Наклонная"}],"simple_complex_all":[{"order":0,"name":"Простые","synonym":"Простые"},{"order":1,"name":"Сложные","synonym":"Сложные"},{"order":2,"name":"Все","synonym":"Все"}],"count_calculating_ways":[{"order":0,"name":"ПоПериметру","synonym":"По периметру"},{"order":1,"name":"ПоПлощади","synonym":"По площади"},{"order":2,"name":"ДляЭлемента","synonym":"Для элемента"},{"order":3,"name":"ПоШагам","synonym":"По шагам"},{"order":4,"name":"ПоФормуле","synonym":"По формуле"}],"angle_calculating_ways":[{"order":0,"name":"Основной","synonym":"Основной"},{"order":1,"name":"СварнойШов","synonym":"Сварной шов"},{"order":2,"name":"СоединениеПополам","synonym":"Соед./2"},{"order":3,"name":"Соединение","synonym":"Соединение"},{"order":4,"name":"_90","synonym":"90"},{"order":5,"name":"НеСчитать","synonym":"Не считать"}],"specification_installation_methods":[{"order":0,"name":"Всегда","synonym":"Всегда"},{"order":1,"name":"САртикулом1","synonym":"с Арт1"},{"order":2,"name":"САртикулом2","synonym":"с Арт2"}],"cnn_sides":[{"order":0,"name":"Изнутри","synonym":"Изнутри"},{"order":1,"name":"Снаружи","synonym":"Снаружи"},{"order":2,"name":"Любая","synonym":"Любая"}],"inserts_types":[{"order":0,"name":"Профиль","synonym":"Профиль"},{"order":1,"name":"Заполнение","synonym":"Заполнение"},{"order":2,"name":"Стеклопакет","synonym":"Стеклопакет"},{"order":3,"name":"ТиповойСтеклопакет","synonym":"Типовой стеклопакет"},{"order":4,"name":"МоскитнаяСетка","synonym":"Москитная сетка"},{"order":5,"name":"Раскладка","synonym":"Раскладка"},{"order":6,"name":"Набор","synonym":"Набор"},{"order":7,"name":"Аксессуар","synonym":"Аксессуар"},{"order":8,"name":"Монтаж","synonym":"Монтаж"},{"order":9,"name":"Контур","synonym":"Контур"},{"order":10,"name":"Изделие","synonym":"Изделие"}],"inserts_glass_types":[{"order":0,"name":"Стекло","synonym":"Стекло"},{"order":1,"name":"Рамка","synonym":"Рамка"},{"order":2,"name":"Газозаполнение","synonym":"Газозаполнение"}],"lay_split_types":[{"order":0,"name":"ДелениеГоризонтальных","synonym":"Деление горизонтальных"},{"order":1,"name":"ДелениеВертикальных","synonym":"Деление вертикальных"},{"order":2,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":3,"name":"КрестПересечение","synonym":"Крест пересечение"}],"cutting_optimization_types":[{"order":0,"name":"Нет","synonym":"Нет"},{"order":1,"name":"РасчетНарезки","synonym":"Расчет нарезки"},{"order":2,"name":"НельзяВращатьПереворачивать","synonym":"Нельзя вращать переворачивать"},{"order":3,"name":"ТолькоНомераЯчеек","synonym":"Только номера ячеек"}],"open_types":[{"order":0,"name":"Глухое","synonym":"Глухое"},{"order":1,"name":"Поворотное","synonym":"Поворотное"},{"order":2,"name":"Откидное","synonym":"Откидное"},{"order":3,"name":"ПоворотноОткидное","synonym":"Поворотно-откидное"},{"order":4,"name":"Раздвижное","synonym":"Раздвижное"},{"order":5,"name":"Неподвижное","synonym":"Неподвижное"}],"sz_line_types":[{"order":0,"name":"Обычные","synonym":"Обычные"},{"order":1,"name":"ТолькоГабаритные","synonym":"Только габаритные"},{"order":2,"name":"РазмерыПоСтворкам","synonym":"Размеры по створкам"},{"order":3,"name":"БезРазмеров","synonym":"Без размеров"},{"order":4,"name":"Сокращенные","synonym":"Сокращенные"}],"cnn_types":[{"order":0,"name":"УгловоеДиагональное","synonym":"Угловое диагональное"},{"order":1,"name":"УгловоеКВертикальной","synonym":"Угловое к вертикальной"},{"order":2,"name":"УгловоеКГоризонтальной","synonym":"Угловое к горизонтальной"},{"order":3,"name":"ТОбразное","synonym":"Т-образное"},{"order":4,"name":"Наложение","synonym":"Наложение"},{"order":5,"name":"НезамкнутыйКонтур","synonym":"Незамкнутый контур"},{"order":6,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":7,"name":"КрестПересечение","synonym":"Крест пересечение"}],"elm_types":[{"order":0,"name":"Рама","synonym":"Рама"},{"order":1,"name":"Створка","synonym":"Створка"},{"order":2,"name":"Импост","synonym":"Импост"},{"order":3,"name":"Штульп","synonym":"Штульп"},{"order":4,"name":"Стекло","synonym":"Стекло - стеклопакет"},{"order":5,"name":"Заполнение","synonym":"Заполнение - сэндвич"},{"order":6,"name":"Раскладка","synonym":"Раскладка - фальшпереплет"},{"order":7,"name":"Текст","synonym":"Текст"},{"order":8,"name":"Линия","synonym":"Линия"},{"order":9,"name":"Размер","synonym":"Размер"},{"order":10,"name":"Добор","synonym":"Доборный проф."},{"order":11,"name":"Соединитель","synonym":"Соединит. профиль"},{"order":12,"name":"Москитка","synonym":"Москитн. сетка"},{"order":13,"name":"Фурнитура","synonym":"Фурнитура"},{"order":14,"name":"Макрос","synonym":"Макрос обр центра"},{"order":15,"name":"Подоконник","synonym":"Подоконник"},{"order":16,"name":"Водоотлив","synonym":"Водоотлив"},{"order":17,"name":"ОшибкаКритическая","synonym":"Ошибка критическая"},{"order":18,"name":"ОшибкаИнфо","synonym":"Ошибка инфо"},{"order":19,"name":"Визуализация","synonym":"Визуализация"},{"order":20,"name":"Прочее","synonym":"Прочее"},{"order":21,"name":"Продукция","synonym":"Продукция"},{"order":22,"name":"Доставка","synonym":"Доставка"},{"order":23,"name":"РаботыЦеха","synonym":"Работы цеха"},{"order":24,"name":"РаботыМонтажа","synonym":"Работы монтажа"},{"order":25,"name":"Монтаж","synonym":"Монтаж"},{"order":26,"name":"Уплотнение","synonym":"Уплотнение"},{"order":27,"name":"Арматура","synonym":"Армирование"},{"order":28,"name":"Штапик","synonym":"Штапик"},{"order":29,"name":"Порог","synonym":"Порог"},{"order":30,"name":"Подставочник","synonym":"Подставочн. профиль"}],"positions":[{"order":0,"name":"Любое","synonym":"Любое"},{"order":1,"name":"Верх","synonym":"Верх"},{"order":2,"name":"Низ","synonym":"Низ"},{"order":3,"name":"Лев","synonym":"Лев"},{"order":4,"name":"Прав","synonym":"Прав"},{"order":5,"name":"ЦентрВертикаль","synonym":"Центр вертикаль"},{"order":6,"name":"ЦентрГоризонталь","synonym":"Центр горизонталь"},{"order":7,"name":"Центр","synonym":"Центр"},{"order":8,"name":"ЛевВерх","synonym":"Лев верх"},{"order":9,"name":"ЛевНиз","synonym":"Лев низ"},{"order":10,"name":"ПравВерх","synonym":"Прав верх"},{"order":11,"name":"ПравНиз","synonym":"Прав низ"}],"gender":[{"order":0,"name":"Мужской","synonym":"Мужской"},{"order":1,"name":"Женский","synonym":"Женский"}],"buyers_order_states":[{"order":0,"name":"ОжидаетсяСогласование","synonym":"Ожидается согласование"},{"order":1,"name":"ОжидаетсяАвансДоОбеспечения","synonym":"Ожидается аванс (до обеспечения)"},{"order":2,"name":"ГотовКОбеспечению","synonym":"Готов к обеспечению"},{"order":3,"name":"ОжидаетсяПредоплатаДоОтгрузки","synonym":"Ожидается предоплата (до отгрузки)"},{"order":4,"name":"ОжидаетсяОбеспечение","synonym":"Ожидается обеспечение"},{"order":5,"name":"ГотовКОтгрузке","synonym":"Готов к отгрузке"},{"order":6,"name":"ВПроцессеОтгрузки","synonym":"В процессе отгрузки"},{"order":7,"name":"ОжидаетсяОплатаПослеОтгрузки","synonym":"Ожидается оплата (после отгрузки)"},{"order":8,"name":"ГотовКЗакрытию","synonym":"Готов к закрытию"},{"order":9,"name":"Закрыт","synonym":"Закрыт"}],"vat_rates":[{"order":0,"name":"НДС18","synonym":"18%"},{"order":1,"name":"НДС18_118","synonym":"18% / 118%"},{"order":2,"name":"НДС10","synonym":"10%"},{"order":3,"name":"НДС10_110","synonym":"10% / 110%"},{"order":4,"name":"НДС0","synonym":"0%"},{"order":5,"name":"БезНДС","synonym":"Без НДС"},{"order":6,"name":"НДС20","synonym":"20%"},{"order":7,"name":"НДС20_120","synonym":"20% / 120%"}],"contact_information_types":[{"order":0,"name":"Адрес","synonym":"Адрес"},{"order":1,"name":"Телефон","synonym":"Телефон"},{"order":2,"name":"АдресЭлектроннойПочты","synonym":"Адрес электронной почты"},{"order":3,"name":"ВебСтраница","synonym":"Веб страница"},{"order":4,"name":"Факс","synonym":"Факс"},{"order":5,"name":"Другое","synonym":"Другое"},{"order":6,"name":"Skype","synonym":"Skype"}],"nom_types":[{"order":0,"name":"Товар","synonym":"Товар, материал"},{"order":1,"name":"Услуга","synonym":"Услуга"},{"order":2,"name":"Работа","synonym":"Работа, техоперация"}],"individual_legal":[{"order":0,"name":"ЮрЛицо","synonym":"Юрлицо"},{"order":1,"name":"ФизЛицо","synonym":"Физлицо"}]},"cat":{"params_links":{"name":"пзСвязиПараметров","splitted":true,"synonym":"Связи параметров","illustration":"Подчиненные параметры","obj_presentation":"Связь параметров","list_presentation":"Связи параметров","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"master":{"synonym":"Ведущий","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"slave":{"synonym":"Ведомый","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"values":{"name":"Значения","synonym":"Значения","tooltip":"","fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["slave"]}],"choice_groups_elm":"elm","choice_type":{"path":["slave"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"ram"},"partner_bank_accounts":{"name":"БанковскиеСчетаКонтрагентов","splitted":true,"synonym":"Банковские счета","illustration":"Банковские счета сторонних контрагентов и физических лиц.","obj_presentation":"Банковский счет","list_presentation":"Банковские счета","input_by_string":["name","account_number"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"account_number":{"synonym":"Номер счета","multiline_mode":false,"tooltip":"Номер расчетного счета организации","mandatory":true,"type":{"types":["string"],"str_len":20}},"bank":{"synonym":"Банк","multiline_mode":false,"tooltip":"Банк, в котором открыт расчетный счет организации","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"settlements_bank":{"synonym":"Банк для расчетов","multiline_mode":false,"tooltip":"Банк, в случае непрямых расчетов","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"correspondent_text":{"synonym":"Текст корреспондента","multiline_mode":false,"tooltip":"Текст \"Плательщик\\Получатель\" в платежных документах","type":{"types":["string"],"str_len":250}},"appointments_text":{"synonym":"Текст назначения","multiline_mode":false,"tooltip":"Текст назначения платежа","type":{"types":["string"],"str_len":250}},"funds_currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"bank_bic":{"synonym":"БИКБанка","multiline_mode":false,"tooltip":"БИК банка, в котором открыт счет","type":{"types":["string"],"str_len":9}},"bank_name":{"synonym":"Наименование банка","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"bank_correspondent_account":{"synonym":"Корр. счет банк","multiline_mode":false,"tooltip":"Корр.счет банка","type":{"types":["string"],"str_len":20}},"bank_city":{"synonym":"Город банка","multiline_mode":false,"tooltip":"Город банка","type":{"types":["string"],"str_len":50}},"bank_address":{"synonym":"Адрес банка","multiline_mode":false,"tooltip":"Адрес банка","type":{"types":["string"],"str_len":0}},"bank_phone_numbers":{"synonym":"Телефоны банка","multiline_mode":false,"tooltip":"Телефоны банка","type":{"types":["string"],"str_len":0}},"settlements_bank_bic":{"synonym":"БИК банка для расчетов","multiline_mode":false,"tooltip":"БИК банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":9}},"settlements_bank_correspondent_account":{"synonym":"Корр. счет банка для расчетов","multiline_mode":false,"tooltip":"Корр.счет банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":20}},"settlements_bank_city":{"synonym":"Город банка для расчетов","multiline_mode":false,"tooltip":"Город банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"Контрагент или физическое лицо, являющиеся владельцем банковского счета","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.individuals","cat.partners"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","hide":true,"form":{"obj":{"head":{" ":["name","owner","account_number","funds_currency","bank_bic","bank","settlements_bank_bic","settlements_bank"]}}}},"organization_bank_accounts":{"name":"БанковскиеСчетаОрганизаций","splitted":true,"synonym":"Банковские счета организаций","illustration":"Банковские счета собственных организаций. ","obj_presentation":"Банковский счет организации","list_presentation":"Банковские счета","input_by_string":["name","account_number"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"bank":{"synonym":"Банк","multiline_mode":false,"tooltip":"Банк, в котором открыт расчетный счет организации","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"bank_bic":{"synonym":"БИКБанка","multiline_mode":false,"tooltip":"БИК банка, в котором открыт счет","type":{"types":["string"],"str_len":9}},"funds_currency":{"synonym":"Валюта денежных средств","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"account_number":{"synonym":"Номер счета","multiline_mode":false,"tooltip":"Номер расчетного счета организации","mandatory":true,"type":{"types":["string"],"str_len":20}},"settlements_bank":{"synonym":"Банк для расчетов","multiline_mode":false,"tooltip":"Банк, в случае непрямых расчетов","choice_groups_elm":"elm","type":{"types":["cat.banks_qualifier"],"is_ref":true}},"settlements_bank_bic":{"synonym":"БИК банка для расчетов","multiline_mode":false,"tooltip":"БИК банка, в случае непрямых расчетов","type":{"types":["string"],"str_len":9}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, отвечающее за банковский счет.","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Организация","multiline_mode":false,"tooltip":"Организация, являющиеся владельцем банковского счета","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","hide":true,"form":{"obj":{"head":{" ":["name","owner","account_number","funds_currency","bank_bic","bank","settlements_bank_bic","settlements_bank"]}}}},"work_center_kinds":{"name":"ВидыРабочихЦентров","splitted":true,"synonym":"Виды рабочих центров","illustration":"","obj_presentation":"Вид рабочего центра","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа видов рабочих центров","multiline_mode":false,"tooltip":"Группа, в которую входит данный вид рабочего центра","type":{"types":["cat.work_center_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"property_values_hierarchy":{"name":"ЗначенияСвойствОбъектовИерархия","splitted":true,"synonym":"Дополнительные значения (иерархия)","illustration":"","obj_presentation":"Дополнительное значение (иерархия)","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":true,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"heft":{"synonym":"Весовой коэффициент","multiline_mode":false,"tooltip":"Относительный вес дополнительного значения (значимость).","type":{"types":["number"],"digits":10,"fraction_figits":2}},"ПолноеНаименование":{"synonym":"Полное наименование","multiline_mode":true,"tooltip":"Подробное описание значения дополнительного реквизита","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит или сведение.","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Вышестоящее дополнительное значение свойства.","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"type":{"types":["cat.property_values_hierarchy"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"banks_qualifier":{"name":"КлассификаторБанковРФ","splitted":false,"synonym":"Классификатор банков РФ","illustration":"","obj_presentation":"Банк","list_presentation":"Банки","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"correspondent_account":{"synonym":"Корр. счет","multiline_mode":false,"tooltip":"Корреспондентский счет банка","type":{"types":["string"],"str_len":20}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город банка","type":{"types":["string"],"str_len":50}},"address":{"synonym":"Адрес","multiline_mode":false,"tooltip":"Адрес банка","type":{"types":["string"],"str_len":500}},"phone_numbers":{"synonym":"Телефоны","multiline_mode":false,"tooltip":"Телефоны банка","type":{"types":["string"],"str_len":250}},"activity_ceased":{"synonym":"Деятельность прекращена","multiline_mode":false,"tooltip":"Банк по каким-либо причинам прекратил свою деятельность","type":{"types":["boolean"]}},"swift":{"synonym":"СВИФТ БИК","multiline_mode":false,"tooltip":"Международный банковский идентификационный код (SWIFT BIC)","type":{"types":["string"],"str_len":11}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"Идентификационный номер налогоплательщика","type":{"types":["string"],"str_len":12}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа банков","multiline_mode":false,"tooltip":"Группа банков, в которую входит данный банк","type":{"types":["cat.banks_qualifier"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","hide":true},"destinations":{"name":"НаборыДополнительныхРеквизитовИСведений","splitted":true,"synonym":"Наборы дополнительных реквизитов и сведений","illustration":"","obj_presentation":"Набор дополнительных реквизитов и сведений","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"КоличествоРеквизитов":{"synonym":"Количество реквизитов","multiline_mode":false,"tooltip":"Количество реквизитов в наборе не помеченных на удаление.","type":{"types":["string"],"str_len":5}},"КоличествоСведений":{"synonym":"Количество сведений","multiline_mode":false,"tooltip":"Количество сведений в наборе не помеченных на удаление.","type":{"types":["string"],"str_len":5}},"Используется":{"synonym":"Используется","multiline_mode":false,"tooltip":"Набор свойств отображается в форме списка","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа, к которой относится набор.","type":{"types":["cat.destinations"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Дополнительный реквизит","multiline_mode":false,"tooltip":"Дополнительный реквизит этого набора","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"_deleted":{"synonym":"Пометка удаления","multiline_mode":false,"tooltip":"Устанавливается при исключении дополнительного реквизита из набора,\nчтобы можно было вернуть связь с уникальным дополнительным реквизитом.","type":{"types":["boolean"]}}}},"extra_properties":{"name":"ДополнительныеСведения","synonym":"Дополнительные сведения","tooltip":"","fields":{"property":{"synonym":"Дополнительное сведение","multiline_mode":false,"tooltip":"Дополнительное сведение этого набора","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"_deleted":{"synonym":"Пометка удаления","multiline_mode":false,"tooltip":"Устанавливается при исключении дополнительного сведения из набора,\nчтобы можно было вернуть связь с уникальным дополнительным сведением.","type":{"types":["boolean"]}}}}},"cachable":"ram","grouping":"array"},"work_centers":{"name":"РабочиеЦентры","splitted":true,"synonym":"Рабочие центры","illustration":"","obj_presentation":"Рабочий центр","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"work_center_kind":{"synonym":"Вид рабочего центра","multiline_mode":false,"tooltip":"Вид, к которому относится данный рабочий центр для планирования","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.work_center_kinds"],"is_ref":true}},"КоэффициентВремениРаботы":{"synonym":"Коэффициент времени работы","multiline_mode":false,"tooltip":"Определяет коэффициент изменения нормативного времени работы","mandatory":true,"type":{"types":["number"],"digits":5,"fraction_figits":2}},"МаксимальнаяЗагрузка":{"synonym":"Максимальная загрузка","multiline_mode":false,"tooltip":"Максимальная загрузка рабочего центра","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"calendar":{"synonym":"График работы","multiline_mode":false,"tooltip":"График работы рабочего центра.","choice_groups_elm":"elm","type":{"types":["cat.calendars"],"is_ref":true}},"definition":{"synonym":"Описание","multiline_mode":false,"tooltip":"Произвольный комментарий","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа, в которую входит рабочий центр","type":{"types":["cat.work_centers"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"countries":{"name":"СтраныМира","splitted":true,"synonym":"Страны мира","illustration":"","obj_presentation":"Страна мира","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Наименование полное","multiline_mode":false,"tooltip":"Полное наименование страны мира","type":{"types":["string"],"str_len":100}},"alpha2":{"synonym":"Код альфа-2","multiline_mode":false,"tooltip":"Двузначный буквенный код альфа-2 страны по ОКСМ","type":{"types":["string"],"str_len":2}},"alpha3":{"synonym":"Код альфа-3","multiline_mode":false,"tooltip":"Трехзначный буквенный код альфа-3 страны по ОКСМ","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"formulas":{"name":"Формулы","splitted":true,"synonym":"Формулы","illustration":"Формулы пользователя, для выполнения при расчете спецификаций в справочниках Вставки, Соединения, Фурнитура и регистре Корректировки спецификации","obj_presentation":"Формула","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"Текст функции на языке javascript","type":{"types":["string"],"str_len":0}},"leading_formula":{"synonym":"Ведущая формула","multiline_mode":false,"tooltip":"Если указано, выполняется код ведущей формулы с параметрами, заданными для текущей формулы","choice_params":[{"name":"leading_formula","path":{"ref":"00000000-0000-0000-0000-000000000000","presentation":"","type":"cat.formulas"}}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"condition_formula":{"synonym":"Это формула условия","multiline_mode":false,"tooltip":"Формула используется, как фильтр, а не как алгоритм расчета количества.\nЕсли возвращает не Истина, строка в спецификацию не добавляется","type":{"types":["boolean"]}},"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"Описание в формате html","type":{"types":["string"],"str_len":0}},"template":{"synonym":"Шаблон","multiline_mode":true,"tooltip":"html шаблон отчета","type":{"types":["string"],"str_len":0}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа формул","type":{"types":["cat.formulas"],"is_ref":true}}},"tabular_sections":{"params":{"name":"Параметры","synonym":"Параметры","tooltip":"","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["string","cch.properties"],"str_len":50,"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["param"],"path":["params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}}},"cachable":"doc"},"elm_visualization":{"name":"пзВизуализацияЭлементов","splitted":true,"synonym":"Визуализация элементов","illustration":"Строки svg для рисования петель, ручек и графических примитивов","obj_presentation":"Визуализация элемента","list_presentation":"Визуализация элементов","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"svg_path":{"synonym":"Путь SVG","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"attributes":{"synonym":"Атрибуты","multiline_mode":false,"tooltip":"Дополнительные атрибуты svg path","type":{"types":["string"],"str_len":0}},"rotate":{"synonym":"Поворачивать","multiline_mode":false,"tooltip":"правила поворота эскиза параллельно касательной профиля в точке визуализации\n0 - поворачивать\n1 - ручка","type":{"types":["number"],"digits":1,"fraction_figits":0}},"offset":{"synonym":"Смещение","multiline_mode":false,"tooltip":"Смещение в мм относительно внещнего ребра элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона соедин.","multiline_mode":false,"tooltip":"имеет смысл только для импостов","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"elm_side":{"synonym":"Сторона элем.","multiline_mode":false,"tooltip":"(0) - изнутри, (1) - снаружи, (-1) - в середине элемента","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cx":{"synonym":"cx","multiline_mode":false,"tooltip":"Координата точки привязки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"cy":{"synonym":"cy","multiline_mode":false,"tooltip":"Координата точки привязки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"angle_hor":{"synonym":"Угол к горизонту","multiline_mode":false,"tooltip":"Угол к к горизонту элемента по умолчанию","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"currencies":{"name":"Валюты","splitted":true,"synonym":"Валюты","illustration":"Валюты, используемые при расчетах","obj_presentation":"Валюта","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Наименование валюты","multiline_mode":false,"tooltip":"Полное наименование валюты","mandatory":true,"type":{"types":["string"],"str_len":50}},"extra_charge":{"synonym":"Наценка","multiline_mode":false,"tooltip":"Коэффициент, который применяется к курсу основной валюты для вычисления курса текущей валюты.","type":{"types":["number"],"digits":10,"fraction_figits":2}},"main_currency":{"synonym":"Основная валюта","multiline_mode":false,"tooltip":"Валюта, на основании курса которой рассчитывается курс текущей валюты","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"parameters_russian_recipe":{"synonym":"Параметры прописи на русском","multiline_mode":false,"tooltip":"Параметры прописи валюты на русском языке","type":{"types":["string"],"str_len":200}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","grouping":"array","form":{"selection":{"fields":["ref","_deleted","id","name as presentation","name_full"],"cols":[{"id":"id","width":"120","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Обозначение"},{"id":"name_full","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]},"obj":{"head":{" ":["id","name","name_full","parameters_russian_recipe"],"Дополнительно":["main_currency","extra_charge"]},"tabular_sections":{},"tabular_sections_order":[]}}},"contact_information_kinds":{"name":"ВидыКонтактнойИнформации","splitted":true,"synonym":"Виды контактной информации","illustration":"","obj_presentation":"Вид контактной информации","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"ВидПоляДругое":{"synonym":"Вид поля другое","multiline_mode":false,"tooltip":"Внешний вид поля другое на форме","type":{"types":["string"],"str_len":20}},"Используется":{"synonym":"Используется","multiline_mode":false,"tooltip":"Вид контактной информации используется","type":{"types":["boolean"]}},"mandatory_fields":{"synonym":"Обязательное заполнение","multiline_mode":false,"tooltip":"Вид контактной информации обязателен к заполнению","type":{"types":["boolean"]}},"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (адрес, телефон и т.д.)","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.contact_information_types"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа вида контактной информации","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"nom_kinds":{"name":"ВидыНоменклатуры","splitted":true,"synonym":"Виды номенклатуры","illustration":"","obj_presentation":"Вид номенклатуры","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"nom_type":{"synonym":"Тип номенклатуры","multiline_mode":false,"tooltip":"Указывается тип, к которому относится номенклатура данного вида.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.nom_types"],"is_ref":true}},"НаборСвойствНоменклатура":{"synonym":"Набор свойств номенклатура","multiline_mode":false,"tooltip":"Набор свойств, которым будет обладать номенклатура с этим видом","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"НаборСвойствХарактеристика":{"synonym":"Набор свойств характеристика","multiline_mode":false,"tooltip":"Набор свойств, которым будет обладать характеристика с этим видом","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.nom_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"contracts":{"name":"ДоговорыКонтрагентов","splitted":true,"synonym":"Договоры контрагентов","illustration":"Перечень договоров, заключенных с контрагентами","obj_presentation":"Договор контрагента","list_presentation":"Договоры контрагентов","input_by_string":["name","id"],"hierarchical":true,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"settlements_currency":{"synonym":"Валюта взаиморасчетов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"mutual_settlements":{"synonym":"Ведение взаиморасчетов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.mutual_contract_settlements"],"is_ref":true}},"contract_kind":{"synonym":"Вид договора","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.contract_kinds"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"check_days_without_pay":{"synonym":"Держать резерв без оплаты ограниченное время","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"allowable_debts_amount":{"synonym":"Допустимая сумма дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"allowable_debts_days":{"synonym":"Допустимое число дней дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"check_debts_amount":{"synonym":"Контролировать сумму дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"check_debts_days":{"synonym":"Контролировать число дней дебиторской задолженности","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"number_doc":{"synonym":"Номер","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"main_cash_flow_article":{"synonym":"Основная статья движения денежных средств","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"main_project":{"synonym":"Основной проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"accounting_reflect":{"synonym":"Отражать в бухгалтерском учете","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"tax_accounting_reflect":{"synonym":"Отражать в налоговом учете","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"prepayment_percent":{"synonym":"Процент предоплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"validity":{"synonym":"Срок действия договора","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"vat_included":{"synonym":"Сумма включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"price_type":{"synonym":"Тип цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"vat_consider":{"synonym":"Учитывать НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"days_without_pay":{"synonym":"Число дней резерва без оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"parent":{"synonym":"Группа договоров","multiline_mode":false,"tooltip":"","type":{"types":["cat.contracts"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","form":{"selection":{"fields":["is_folder","id","_t_.name as presentation","enm_contract_kinds.synonym as contract_kind","enm_mutual_settlements.synonym as mutual_settlements","cat_organizations.name as organization","cat_partners.name as partner"],"cols":[{"id":"partner","width":"180","type":"ro","align":"left","sort":"server","caption":"Контрагент"},{"id":"organization","width":"180","type":"ro","align":"left","sort":"server","caption":"Организация"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"},{"id":"contract_kind","width":"150","type":"ro","align":"left","sort":"server","caption":"Вид договора"},{"id":"mutual_settlements","width":"150","type":"ro","align":"left","sort":"server","caption":"Ведение расчетов"}]},"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"parent","name","number_doc","date","validity","owner","organization","contract_kind","mutual_settlements","settlements_currency"],"Дополнительно":["accounting_reflect","tax_accounting_reflect","vat_consider","vat_included","price_type","main_project","main_cash_flow_article","check_debts_amount","check_debts_days","check_days_without_pay","prepayment_percent","allowable_debts_amount","allowable_debts_days","note"]}}}},"nom_units":{"name":"ЕдиницыИзмерения","splitted":true,"synonym":"Единицы измерения","illustration":"Перечень единиц измерения номенклатуры и номенклатурных групп","obj_presentation":"Единица измерения","list_presentation":"Единицы измерения","input_by_string":["name","id"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"qualifier_unit":{"synonym":"Единица по классификатору","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.units"],"is_ref":true}},"heft":{"synonym":"Вес","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":3}},"volume":{"synonym":"Объем","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":3}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"rounding_threshold":{"synonym":"Порог округления","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"ПредупреждатьОНецелыхМестах":{"synonym":"При округлении предупреждать о нецелых местах","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.nom_groups","cat.nom"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"property_values":{"name":"ЗначенияСвойствОбъектов","splitted":true,"synonym":"Дополнительные значения","illustration":"","obj_presentation":"Дополнительное значение","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"heft":{"synonym":"Весовой коэффициент","multiline_mode":false,"tooltip":"Относительный вес дополнительного значения (значимость).","type":{"types":["number"],"digits":10,"fraction_figits":2}},"ПолноеНаименование":{"synonym":"Полное наименование","multiline_mode":true,"tooltip":"Подробное описание значения дополнительного реквизита","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит или сведение.","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа дополнительных значений свойства.","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"type":{"types":["cat.property_values"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"meta_ids":{"name":"ИдентификаторыОбъектовМетаданных","splitted":false,"synonym":"Идентификаторы объектов метаданных","illustration":"Идентификаторы объектов метаданных для использования в базе данных.","obj_presentation":"Идентификатор объекта метаданных","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"full_moniker":{"synonym":"Полное имя","multiline_mode":false,"tooltip":"Полное имя объекта метаданных","type":{"types":["string"],"str_len":430}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа объектов","multiline_mode":false,"tooltip":"Группа объектов метаданных.","type":{"types":["cat.meta_ids"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram"},"cashboxes":{"name":"Кассы","splitted":true,"synonym":"Кассы","illustration":"Список мест фактического хранения и движения наличных денежных средств предприятия. Кассы разделены по организациям и валютам денежных средств. ","obj_presentation":"Касса","list_presentation":"Кассы предприятия","input_by_string":["name","id"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"funds_currency":{"synonym":"Валюта денежных средств","multiline_mode":false,"tooltip":"Валюта учета денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, отвечающее за кассу.","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"current_account":{"synonym":"Расчетный счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"name","owner","funds_currency"]}}}},"units":{"name":"КлассификаторЕдиницИзмерения","splitted":true,"synonym":"Классификатор единиц измерения","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":3,"fields":{"name_full":{"synonym":"Полное наименование","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"international_short":{"synonym":"Международное сокращение","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram"},"partners":{"name":"Контрагенты","splitted":true,"synonym":"Контрагенты","illustration":"Список юридических или физических лиц клиентов (поставщиков, покупателей).","obj_presentation":"Контрагент","list_presentation":"Контрагенты","input_by_string":["name","id","inn"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"name_full":{"synonym":"Полное наименование","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"main_bank_account":{"synonym":"Основной банковский счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.partner_bank_accounts"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"kpp":{"synonym":"КПП","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":9}},"okpo":{"synonym":"Код по ОКПО","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"individual_legal":{"synonym":"Юр. / физ. лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.individual_legal"],"is_ref":true}},"main_contract":{"synonym":"Основной договор контрагента","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.contracts"],"is_ref":true}},"identification_document":{"synonym":"Документ, удостоверяющий личность","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"buyer_main_manager":{"synonym":"Основной менеджер покупателя","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"is_buyer":{"synonym":"Покупатель","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_supplier":{"synonym":"Поставщик","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"primary_contact":{"synonym":"Основное контактное лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа контрагентов","multiline_mode":false,"tooltip":"","type":{"types":["cat.partners"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"139d49b9-5301-45f3-b851-4488420d7d15","presentation":"Справочник \"Контрагенты\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0},"hide":true},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100},"hide":true},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100},"hide":true},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100},"hide":true},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20},"hide":true},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20},"hide":true}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"ram","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"parent","name","name_full","is_buyer","is_supplier","individual_legal","inn","kpp","okpo","main_bank_account","main_contract","primary_contact","buyer_main_manager"],"Дополнительные реквизиты":[]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"nom":{"name":"Номенклатура","splitted":true,"synonym":"Номенклатура","illustration":"Перечень товаров, продукции, материалов, полуфабрикатов, тары, услуг","obj_presentation":"Позиция номенклатуры","list_presentation":"","input_by_string":["name","id","article"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":11,"fields":{"article":{"synonym":"Артикул ","multiline_mode":false,"tooltip":"Артикул номенклатуры.","type":{"types":["string"],"str_len":25}},"name_full":{"synonym":"Наименование для печати","multiline_mode":true,"tooltip":"Наименование номенклатуры, которое будет печататься во всех документах.","type":{"types":["string"],"str_len":1024}},"base_unit":{"synonym":"Базовая единица измерения","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.units"],"is_ref":true}},"storage_unit":{"synonym":"Единица хранения остатков","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_units"],"is_ref":true}},"nom_kind":{"synonym":"Вид номенклатуры","multiline_mode":false,"tooltip":"Указывается вид, к которому следует отнести данную позицию номенклатуры.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_kinds"],"is_ref":true}},"nom_group":{"synonym":"Номенклатурная группа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_groups"],"is_ref":true}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"Определяется ставка НДС товара или услуги","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.vat_rates"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"price_group":{"synonym":"Ценовая группа","multiline_mode":false,"tooltip":"Определяет ценовую группу, к которой относится номенклатурная позиция.","choice_groups_elm":"elm","type":{"types":["cat.price_groups"],"is_ref":true}},"elm_type":{"synonym":"Тип элемента: рама, створка и т.п.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"Длина стандартной загатовки, мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина - A","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"thickness":{"synonym":"Толщина - T","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"sizefurn":{"synonym":"Размер фурн. паза - D","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"sizefaltz":{"synonym":"Размер фальца - F","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"density":{"synonym":"Плотность, кг / ед. хранения","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"volume":{"synonym":"Объем, м³ / ед. хранения","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"arc_elongation":{"synonym":"Удлинение арки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"loss_factor":{"synonym":"Коэффициент потерь","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":4}},"rounding_quantity":{"synonym":"Округлять количество","multiline_mode":false,"tooltip":"При расчете спецификации построителя, как в функции Окр(). 1: до десятых долей,  0: до целых, -1: до десятков","type":{"types":["number"],"digits":1,"fraction_figits":0}},"clr":{"synonym":"Цвет по умолчанию","multiline_mode":false,"tooltip":"Цвет материала по умолчанию. Актуально для заполнений, которые берём НЕ из системы","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"cutting_optimization_type":{"synonym":"Тип оптимизации","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.cutting_optimization_types"],"is_ref":true}},"saw_width":{"synonym":"Ширина пилы, мм.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"double_cut":{"synonym":"Парный раскрой","multiline_mode":false,"tooltip":"0, 1 - одиночный.\n2 - парный","type":{"types":["number"],"digits":1,"fraction_figits":0}},"overmeasure":{"synonym":"Припуск в раскрое, мм","multiline_mode":false,"tooltip":"Оставлять на хлысте припуск (мм) для захвата станком","type":{"types":["number"],"digits":8,"fraction_figits":1}},"coloration_area":{"synonym":"Площадь окраски","multiline_mode":false,"tooltip":"Площадь окраски в м² на  единицу хранения","type":{"types":["number"],"digits":10,"fraction_figits":4}},"pricing":{"synonym":"","multiline_mode":false,"tooltip":"Расценка операций с данной номенклатурой либо формула визуализации","choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"visualization":{"synonym":"Визуализация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.elm_visualization"],"is_ref":true}},"complete_list_sorting":{"synonym":"Сортировка в листе комплектации","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"is_accessory":{"synonym":"Это аксессуар","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_procedure":{"synonym":"Это техоперация","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_service":{"synonym":"Это услуга","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_pieces":{"synonym":"Штуки","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"Группа, в которую входит данная позиция номенклатуры.","type":{"types":["cat.nom"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"article","width":"150","type":"ro","align":"left","sort":"server","caption":"Артикул"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"},{"id":"nom_unit","width":"70","type":"ro","align":"left","sort":"server","caption":"Ед"},{"id":"thickness","width":"70","type":"ro","align":"left","sort":"server","caption":"Толщина"}]}}},"organizations":{"name":"Организации","splitted":true,"synonym":"Организации","illustration":"","obj_presentation":"Организация","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"prefix":{"synonym":"Префикс","multiline_mode":false,"tooltip":"Используется при нумерации документов. В начало каждого номера документов данной организации добавляется два символа префикса.","type":{"types":["string"],"str_len":2}},"individual_legal":{"synonym":"Юр. / физ. лицо","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.individual_legal"],"is_ref":true}},"individual_entrepreneur":{"synonym":"Индивидуальный предприниматель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"kpp":{"synonym":"КПП","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":9}},"main_bank_account":{"synonym":"Основной банковский счет","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"main_cashbox":{"synonym":"Основноая касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"certificate_series_number":{"synonym":"Серия и номер свидетельства о постановке на учет","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":25}},"certificate_date_issue":{"synonym":"Дата выдачи свидетельства о постановке на учет","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"certificate_authority_name":{"synonym":"Наименование налогового органа, выдавшего свидетельство","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":254}},"certificate_authority_code":{"synonym":"Код налогового органа, выдавшего свидетельство","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":4}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.organizations"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"c34c4e9d-c7c5-42bb-8def-93ecfe7b1977","presentation":"Справочник \"Организации\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0},"hide":true},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100},"hide":true},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50},"hide":true},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100},"hide":true},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100},"hide":true},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20},"hide":true},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20},"hide":true},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"ДействуетС":{"synonym":"Действует С","multiline_mode":false,"tooltip":"Дата актуальности контактная информация","type":{"types":["date"],"date_part":"date"}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0},"hide":true}}}},"cachable":"ram","grouping":"array","form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},{"id":"prefix","path":"o.prefix","synonym":"Префикс","type":"ro"},"name","individual_legal","individual_entrepreneur","main_bank_account","main_cashbox"],"Коды":["inn","kpp","certificate_series_number","certificate_date_issue","certificate_authority_name","certificate_authority_code"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"inserts":{"name":"пзВставки","splitted":true,"synonym":"Вставки","illustration":"Армирование, пленки, вставки - дополнение спецификации, которое зависит от одного элемента","obj_presentation":"Вставка","list_presentation":"Вставки","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"insert_type":{"synonym":"Тип вставки","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.inserts_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"Вставку можно использовать для элементов с этим цветом","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.clrs"],"is_ref":true}},"priority":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"lmin":{"synonym":"X min","multiline_mode":false,"tooltip":"X min (длина или ширина)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max","multiline_mode":false,"tooltip":"X max (длина или ширина)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"hmin":{"synonym":"Y min","multiline_mode":false,"tooltip":"Y min (высота)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"hmax":{"synonym":"Y max","multiline_mode":false,"tooltip":"Y max (высота)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"smin":{"synonym":"S min","multiline_mode":false,"tooltip":"Площадь min","type":{"types":["number"],"digits":8,"fraction_figits":3}},"smax":{"synonym":"S max","multiline_mode":false,"tooltip":"Площадь max","type":{"types":["number"],"digits":8,"fraction_figits":3}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"ahmin":{"synonym":"α min","multiline_mode":false,"tooltip":"AH min (угол к горизонтали)","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"α max","multiline_mode":false,"tooltip":"AH max (угол к горизонтали)","type":{"types":["number"],"digits":3,"fraction_figits":0}},"mmin":{"synonym":"Масса min","multiline_mode":false,"tooltip":"M min (масса)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"mmax":{"synonym":"Масса max","multiline_mode":false,"tooltip":"M max (масса)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"insert_glass_type":{"synonym":"Тип вставки стп","multiline_mode":false,"tooltip":"Тип вставки стеклопакета","choice_groups_elm":"elm","type":{"types":["enm.inserts_glass_types"],"is_ref":true}},"impost_fixation":{"synonym":"Крепление импостов","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.impost_mount_options"],"is_ref":true}},"shtulp_fixation":{"synonym":"Крепление штульпа","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"can_rotate":{"synonym":"Можно поворачивать","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"sizeb":{"synonym":"Размер \"B\"","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"clr_group":{"synonym":"Доступность цветов","multiline_mode":false,"tooltip":"","choice_params":[{"name":"НазначениеЦветовойГруппы","path":{"name":"ДляОграниченияДоступности","presentation":"Для ограничения доступности","type":"enm.НазначенияЦветовыхГрупп"}}],"choice_groups_elm":"elm","type":{"types":["cat.color_price_groups"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts","cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"coefficient":{"synonym":"Коэфф.","multiline_mode":false,"tooltip":"коэффициент (кол-во комплектующего на 1мм профиля или 1м² заполнения)","type":{"types":["number"],"digits":10,"fraction_figits":6}},"angle_calc_method":{"synonym":"Расчет угла","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.angle_calculating_ways"],"is_ref":true}},"count_calc_method":{"synonym":"Расчет колич.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.count_calculating_ways"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":[{"ref":"3220e24b-ffcd-11e5-8303-e67fda7f6b46","presentation":"Вставки","type":"cat.formulas"},{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"lmin":{"synonym":"X min","multiline_mode":false,"tooltip":"Минимальная длина или ширина","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max","multiline_mode":false,"tooltip":"Максимальная длина или ширина","type":{"types":["number"],"digits":6,"fraction_figits":0}},"ahmin":{"synonym":"α min","multiline_mode":false,"tooltip":"Минимальный угол к горизонтали","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"α max","multiline_mode":false,"tooltip":"Максимальный угол к горизонтали","type":{"types":["number"],"digits":3,"fraction_figits":0}},"smin":{"synonym":"Площадь min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"smax":{"synonym":"Площадь max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"step":{"synonym":"Шаг","multiline_mode":false,"tooltip":"Шаг (по умолчанию, в горизонтальном направлении)","type":{"types":["number"],"digits":10,"fraction_figits":3}},"УголШага":{"synonym":"Угол шага","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"offsets":{"synonym":"Отступы шага","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"do_center":{"synonym":"Центрировать","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"attrs_option":{"synonym":"Направления","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.inset_attrs_options"],"is_ref":true}},"end_mount":{"synonym":"Концевые крепления","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}},"is_main_elm":{"synonym":"Это основной элемент","multiline_mode":false,"tooltip":"Для профильных вставок определяет номенклатуру, размеры которой будут использованы при построении эскиза","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["selection_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["selection_params","param"],"elm":0},"mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}}},"cachable":"ram"},"parameters_keys":{"name":"пзКлючиПараметров","splitted":true,"synonym":"Ключи параметров","illustration":"Списки пар {Параметр:Значение} для фильтрации в подсистемах корректировки спецификации и ценообразования\n","obj_presentation":"Ключ параметров","list_presentation":"Ключи параметров","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"КоличествоПараметров":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"params":{"name":"Параметры","synonym":"Параметры","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["string","cch.properties"],"str_len":50,"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["params","property"]}],"choice_type":{"path":["params","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}}},"cachable":"ram"},"production_params":{"name":"пзПараметрыПродукции","splitted":true,"synonym":"Параметры продукции","illustration":"Настройки системы профилей и фурнитуры","obj_presentation":"Система","list_presentation":"Параметры продукции","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"default_clr":{"synonym":"Осн цвет","multiline_mode":false,"tooltip":"Основной цвет изделия","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"allow_open_cnn":{"synonym":"Допускаются незамкн. контуры","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"clr_group":{"synonym":"Доступность цветов","multiline_mode":false,"tooltip":"","choice_params":[{"name":"НазначениеЦветовойГруппы","path":{"name":"ДляОграниченияДоступности","presentation":"Для ограничения доступности","type":"enm.НазначенияЦветовыхГрупп"}}],"choice_groups_elm":"elm","type":{"types":["cat.color_price_groups"],"is_ref":true}},"is_drainage":{"synonym":"Это водоотлив","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"tmin":{"synonym":"Толщина заполнения min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmax":{"synonym":"Толщина заполнения max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lay_split_type":{"synonym":"Тип деления раскладки","multiline_mode":false,"tooltip":"Тип деления раскладки по умолчанию","choice_groups_elm":"elm","type":{"types":["enm.lay_split_types"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params"],"is_ref":true}}},"tabular_sections":{"elmnts":{"name":"Элементы","synonym":"Элементы","tooltip":"Типовые рама, створка, импост и заполнение для данной системы","fields":{"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Рама","presentation":"Рама","type":"enm.elm_types"},{"name":"Створка","presentation":"Створка","type":"enm.elm_types"},{"name":"Импост","presentation":"Импост","type":"enm.elm_types"},{"name":"Штульп","presentation":"Штульп","type":"enm.elm_types"},{"name":"Стекло","presentation":"Стекло - стеклопакет","type":"enm.elm_types"},{"name":"Заполнение","presentation":"Заполнение - сэндвич","type":"enm.elm_types"},{"name":"Раскладка","presentation":"Раскладка - фальшпереплет","type":"enm.elm_types"},{"name":"Добор","presentation":"Доборный проф.","type":"enm.elm_types"},{"name":"Соединитель","presentation":"Соединит. профиль","type":"enm.elm_types"},{"name":"Москитка","presentation":"Москитн. сетка","type":"enm.elm_types"}]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.elm_types"],"is_ref":true}},"nom":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"pos":{"synonym":"Положение","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Лев","presentation":"Лев","type":"enm.positions"},{"name":"Прав","presentation":"Прав","type":"enm.positions"},{"name":"Верх","presentation":"Верх","type":"enm.positions"},{"name":"Низ","presentation":"Низ","type":"enm.positions"},{"name":"ЦентрВертикаль","presentation":"Центр вертикаль","type":"enm.positions"},{"name":"ЦентрГоризонталь","presentation":"Центр горизонталь","type":"enm.positions"},{"name":"Центр","presentation":"Центр","type":"enm.positions"},{"name":"Любое","presentation":"Любое","type":"enm.positions"}]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}}}},"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["production","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}},"product_params":{"name":"ПараметрыИзделия","synonym":"Параметры изделия","tooltip":"Значения параметров изделия по умолчанию","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["product_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["product_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"Не показывать строку параметра в диалоге свойств изделия","type":{"types":["boolean"]}},"forcibly":{"synonym":"Принудительно","multiline_mode":false,"tooltip":"Замещать установленное ранее значение при перевыборе системы","type":{"types":["boolean"]}}}},"furn_params":{"name":"ПараметрыФурнитуры","synonym":"Параметры фурнитуры","tooltip":"Значения параметров фурнитуры по умолчанию","fields":{"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["furn_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["furn_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"forcibly":{"synonym":"Принудительно","multiline_mode":false,"tooltip":"Замещать установленное ранее значение при перевыборе системы","type":{"types":["boolean"]}}}},"base_blocks":{"name":"ТиповыеБлоки","synonym":"Шаблоны","tooltip":"","fields":{"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_params":[{"name":"obj_delivery_state","path":{"name":"Шаблон","presentation":"Шаблон","type":"enm.obj_delivery_states"}}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["doc.calc_order"],"is_ref":true}}}}},"cachable":"ram"},"users_acl":{"name":"ИнтеграцияПраваПользователей","splitted":true,"synonym":"Права внешних пользователей","illustration":"","obj_presentation":"Права внешних пользователей","list_presentation":"Права внешних пользователей","input_by_string":[],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":false,"code_length":0,"fields":{"prefix":{"synonym":"Префикс нумерации документов","multiline_mode":false,"tooltip":"Префикс номеров документов текущего пользователя","type":{"types":["string"],"str_len":2}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Пользователь","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}}},"tabular_sections":{"acl_objs":{"name":"ОбъектыДоступа","synonym":"Объекты доступа","tooltip":"","fields":{"acl_obj":{"synonym":"Объект доступа","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals","cat.users","cat.divisions","cat.partners","cat.organizations","cat.cashboxes","cat.meta_ids","cat.stores"],"is_ref":true}},"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"ram","hide":true},"delivery_areas":{"name":"пзРайоныДоставки","splitted":true,"synonym":"Районы доставки","illustration":"","obj_presentation":"Район доставки","list_presentation":"Районы доставки","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.countries"],"is_ref":true}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион, край, область","mandatory":true,"type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город (населенный пункт)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"latitude":{"synonym":"Гео. коорд. Широта","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":12}},"longitude":{"synonym":"Гео. коорд. Долгота","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":12}},"ind":{"synonym":"Индекс","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":6}},"delivery_area":{"synonym":"Район (внутри города)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"specify_area_by_geocoder":{"synonym":"Уточнять район геокодером","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"cnns":{"name":"пзСоединения","splitted":true,"synonym":"Соединения элементов","illustration":"Спецификации соединений элементов","obj_presentation":"Соединение","list_presentation":"Соединения","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"priority":{"synonym":"Приоритет","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amin":{"synonym":"Угол минимальный","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол максимальный","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"sd1":{"synonym":"Сторона1","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.cnn_sides"],"is_ref":true}},"sd2":{"synonym":"Сторона2","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.cnn_sides"],"is_ref":true}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"cnn_type":{"synonym":"Тип соединения","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.cnn_types"],"is_ref":true}},"ahmin":{"synonym":"AH min (угол к горизонтали)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ahmax":{"synonym":"AH max (угол к горизонтали)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"lmin":{"synonym":"Длина шва min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"Длина шва max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmin":{"synonym":"Толщина min ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"tmax":{"synonym":"Толщина max ","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"var_layers":{"synonym":"Створки в разн. плоск.","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"art1vert":{"synonym":"Арт1 верт.","multiline_mode":false,"tooltip":"Соединение используется только в том случае, если Артикул1 - вертикальный","type":{"types":["boolean"]}},"art1glass":{"synonym":"Арт1 - стеклопакет","multiline_mode":false,"tooltip":"Артикул1 может быть составным стеклопакетом","type":{"types":["boolean"]}},"art2glass":{"synonym":"Арт2 - стеклопакет","multiline_mode":false,"tooltip":"Артикул2 может быть составным стеклопакетом","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.inserts","cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"коэффициент (кол-во комплектующего на 1мм профиля)","type":{"types":["number"],"digits":10,"fraction_figits":6}},"sz":{"synonym":"Размер","multiline_mode":false,"tooltip":"размер (в мм, на которое компл. заходит на Артикул 2)","type":{"types":["number"],"digits":10,"fraction_figits":3}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":[{"ref":"3220e259-ffcd-11e5-8303-e67fda7f6b46","presentation":"Соединения","type":"cat.formulas"},{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"sz_min":{"synonym":"Размер мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"sz_max":{"synonym":"Размер макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amax":{"synonym":"Угол макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"set_specification":{"synonym":"Устанавливать","multiline_mode":false,"tooltip":"Устанавливать спецификацию","choice_groups_elm":"elm","type":{"types":["enm.specification_installation_methods"],"is_ref":true}},"for_direct_profile_only":{"synonym":"Для прямых","multiline_mode":false,"tooltip":"Использовать только для прямых профилей (1), только для кривых (-1) или всегда(0)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"by_contour":{"synonym":"По контуру","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"contraction_by_contour":{"synonym":"Укорочение по контуру","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"on_aperture":{"synonym":"На проем","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"angle_calc_method":{"synonym":"Способ расч. угла","multiline_mode":false,"tooltip":"Способ расчета угла","choice_groups_elm":"elm","type":{"types":["enm.angle_calculating_ways"],"is_ref":true}},"contour_number":{"synonym":"Контур №","multiline_mode":false,"tooltip":"Номер контура (доп)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}}}},"cnn_elmnts":{"name":"СоединяемыеЭлементы","synonym":"Соединяемые элементы","tooltip":"","fields":{"nom1":{"synonym":"Номенклатура1","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr1":{"synonym":"Цвет1","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"nom2":{"synonym":"Номенклатура2","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr2":{"synonym":"Цвет2","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"varclr":{"synonym":"Разные цвета","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_nom_combinations_row":{"synonym":"Это строка сочетания номенклатур","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["selection_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["selection_params","param"],"elm":0},"mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"cnn_type","width":"150","type":"ro","align":"left","sort":"server","caption":"Тип"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]}}},"furns":{"name":"пзФурнитура","splitted":true,"synonym":"Фурнитура","illustration":"Описывает ограничения и правила формирования спецификаций фурнитуры","obj_presentation":"Фурнитура","list_presentation":"Фурнитура","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"flap_weight_max":{"synonym":"Масса створки макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"left_right":{"synonym":"Левая правая","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"is_set":{"synonym":"Это набор","multiline_mode":false,"tooltip":"Определяет, является элемент набором для построения спецификации или комплектом фурнитуры для выбора в построителе","type":{"types":["boolean"]}},"is_sliding":{"synonym":"Это раздвижка","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"furn_set":{"synonym":"Набор фурнитуры","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.furns"],"is_ref":true}},"side_count":{"synonym":"Количество сторон","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"handle_side":{"synonym":"Ручка на стороне","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"open_type":{"synonym":"Тип открывания","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.open_types"],"is_ref":true}},"name_short":{"synonym":"Наименование сокращенное","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":3}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.furns"],"is_ref":true}}},"tabular_sections":{"open_tunes":{"name":"НастройкиОткрывания","synonym":"Настройки открывания","tooltip":"","fields":{"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"lmin":{"synonym":"X min (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"arc_available":{"synonym":"Выпуклая дуга","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"shtulp_available":{"synonym":"Штульп безимп соед","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"shtulp_fix_here":{"synonym":"Крепится штульп","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"rotation_axis":{"synonym":"Ось поворота","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"partial_opening":{"synonym":"Неполн. откр.","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"outline":{"synonym":"Эскиз","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"№ доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom_set":{"synonym":"Номенклатура/Набор","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.nom","cat.furns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"handle_height_base":{"synonym":"Выс. ручк.","multiline_mode":false,"tooltip":"Стандартная высота ручки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_min":{"synonym":"Выс. ручк. min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_max":{"synonym":"Выс. ручк. max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"contraction":{"synonym":"Укорочение","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"contraction_option":{"synonym":"Укороч. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.contraction_options"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"flap_weight_min":{"synonym":"Масса створки min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"flap_weight_max":{"synonym":"Масса створки max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"Сторона фурнитуры, на которую устанавливается элемент или на которой выполняется операция","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cnn_side":{"synonym":"Сторона соед.","multiline_mode":false,"tooltip":"Фильтр: выполнять операцию, если примыкающий элемент примыкает с заданной стороны","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"offset_option":{"synonym":"Смещ. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.offset_options"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_params":[{"name":"parent","path":[{"ref":"3220e25a-ffcd-11e5-8303-e67fda7f6b46","presentation":"Фурнитура","type":"cat.formulas"},{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"transfer_option":{"synonym":"Перенос опер.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.transfer_operations_options"],"is_ref":true}},"is_main_specification_row":{"synonym":"Это строка основной спецификации","multiline_mode":false,"tooltip":"Интерфейсное поле (доп=0) для редактирования без кода","type":{"types":["boolean"]}},"is_set_row":{"synonym":"Это строка набора","multiline_mode":false,"tooltip":"Интерфейсное поле (НоменклатураНабор=Фурнитура) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_procedure_row":{"synonym":"Это строка операции","multiline_mode":false,"tooltip":"Интерфейсное поле (НоменклатураНабор=Номенклатура И ТипНоменклатуры = Техоперация) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}}}},"selection_params":{"name":"ПараметрыОтбора","synonym":"Параметры отбора","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["selection_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["selection_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}}},"specification_restrictions":{"name":"ОграниченияСпецификации","synonym":"Ограничения спецификации","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"lmin":{"synonym":"X min (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"lmax":{"synonym":"X max (длина или ширина)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"amin":{"synonym":"Угол мин","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"amax":{"synonym":"Угол макс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}}}},"colors":{"name":"Цвета","synonym":"Цвета","tooltip":"Цаета, доступные для данной фурнитуры","fields":{"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","type":{"types":["cat.clrs"],"is_ref":true}}}}},"cachable":"ram","form":{"selection":{"fields":[],"cols":[{"id":"id","width":"140","type":"ro","align":"left","sort":"server","caption":"Код"},{"id":"open_type","width":"150","type":"ro","align":"left","sort":"server","caption":"Тип открывания"},{"id":"presentation","width":"*","type":"ro","align":"left","sort":"server","caption":"Наименование"}]}}},"clrs":{"name":"пзЦвета","splitted":true,"synonym":"Цвета","illustration":"","obj_presentation":"Цвет","list_presentation":"Цвета","input_by_string":["name","id","ral"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"ral":{"synonym":"Цвет RAL","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"machine_tools_clr":{"synonym":"Код для станка","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"clr_str":{"synonym":"Цвет в построителе","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":36}},"clr_out":{"synonym":"Цвет снаружи","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"clr_in":{"synonym":"Цвет изнутри","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.clrs"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"color_price_groups":{"name":"ЦветоЦеновыеГруппы","splitted":true,"synonym":"Цвето-ценовые группы","illustration":"","obj_presentation":"Цвето-ценовая группа","list_presentation":"Цвето-ценовые группы","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"НазначениеЦветовойГруппы":{"synonym":"Назначение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.НазначенияЦветовыхГрупп"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"price_groups":{"name":"ЦеновыеГруппы","synonym":"Ценовые группы","tooltip":"","fields":{"price_group":{"synonym":"Ценовая гр. или номенклатура","multiline_mode":false,"tooltip":"Ссылка на ценовую группу или номенклатуру или папку (родитель - первый уровень иерархии) номенклатуры, для которой действует соответствие цветов","type":{"types":["cat.price_groups","cat.nom"],"is_ref":true}}}},"clr_conformity":{"name":"СоответствиеЦветов","synonym":"Соответствие цветов","tooltip":"","fields":{"clr1":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","type":{"types":["cat.clrs"],"is_ref":true}},"clr2":{"synonym":"Соответствие","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}}},"cachable":"ram","grouping":"array"},"divisions":{"name":"Подразделения","splitted":true,"synonym":"Подразделения","illustration":"Перечень подразделений предприятия","obj_presentation":"Подразделение","list_presentation":"Подразделения","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":9,"fields":{"main_project":{"synonym":"Основной проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"sorting":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в подразделение","multiline_mode":false,"tooltip":"","type":{"types":["cat.divisions"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","grouping":"array"},"users":{"name":"Пользователи","splitted":true,"synonym":"Пользователи","illustration":"","obj_presentation":"Пользователь","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"invalid":{"synonym":"Недействителен","multiline_mode":false,"tooltip":"Пользователь больше не работает в программе, но сведения о нем сохранены.\nНедействительные пользователи скрываются из всех списков\nпри выборе или подборе в документах и других местах программы.","type":{"types":["boolean"]}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, в котором работает пользователь","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"individual_person":{"synonym":"Физическое лицо","multiline_mode":false,"tooltip":"Физическое лицо, с которым связан пользователь","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":0}},"ancillary":{"synonym":"Служебный","multiline_mode":false,"tooltip":"Неразделенный или разделенный служебный пользователь, права к которому устанавливаются непосредственно и программно.","type":{"types":["boolean"]}},"user_ib_uid":{"synonym":"Идентификатор пользователя ИБ","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя информационной базы, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"user_fresh_uid":{"synonym":"Идентификатор пользователя сервиса","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя сервиса, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"id":{"synonym":"Логин","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Дополнительные реквизиты объекта","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"8cbaa30d-faab-45ad-880e-84f8b421f448","presentation":"Справочник \"Пользователи\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}}},"cachable":"ram","form":{"obj":{"head":{" ":["id","name","individual_person"],"Дополнительно":["ancillary","invalid",{"id":"user_ib_uid","path":"o.user_ib_uid","synonym":"Идентификатор пользователя ИБ","type":"ro"},{"id":"user_fresh_uid","path":"o.user_fresh_uid","synonym":"Идентификатор пользователя сервиса","type":"ro"},"note"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"projects":{"name":"Проекты","splitted":true,"synonym":"Проекты","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":11,"fields":{"start":{"synonym":"Старт","multiline_mode":false,"tooltip":"Плановая дата начала работ по проекту.","type":{"types":["date"],"date_part":"date"}},"finish":{"synonym":"Финиш","multiline_mode":false,"tooltip":"Плановая дата окончания работ по проекту.","type":{"types":["date"],"date_part":"date"}},"launch":{"synonym":"Запуск","multiline_mode":false,"tooltip":"Фактическая дата начала работ по проекту.","type":{"types":["date"],"date_part":"date_time"}},"readiness":{"synonym":"Готовность","multiline_mode":false,"tooltip":"Фактическая дата окончания  работ по проекту.","type":{"types":["date"],"date_part":"date_time"}},"finished":{"synonym":"Завершен","multiline_mode":false,"tooltip":"Признак, указывающий на то, что работы по проекту завершены.","type":{"types":["boolean"]}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Ответственный за реализацию проекта.","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Любые комментарии по проекту","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.projects"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","grouping":"array"},"stores":{"name":"Склады","splitted":true,"synonym":"Склады (места хранения)","illustration":"Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад","obj_presentation":"Склад","list_presentation":"Склады","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.stores"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","grouping":"array"},"cash_flow_articles":{"name":"СтатьиДвиженияДенежныхСредств","splitted":true,"synonym":"Статьи движения денежных средств","illustration":"Перечень статей движения денежных средств (ДДС), используемых в предприятии для проведения анализа поступлений и расходов в разрезе статей движения денежных средств. ","obj_presentation":"Статья движения денежных средств","list_presentation":"Статьи движения денежных средств","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"Рекомендации по выбору статьи движения денежных средств в документах","type":{"types":["string"],"str_len":0}},"sorting_field":{"synonym":"Порядок","multiline_mode":false,"tooltip":"Определяет порядок вывода вариантов анализа в мониторе целевых показателей при группировке по категориям целей.","type":{"types":["number"],"digits":5,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"В группе статей","multiline_mode":false,"tooltip":"Группа статей движения денежных средств","type":{"types":["cat.cash_flow_articles"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"nom_prices_types":{"name":"ТипыЦенНоменклатуры","splitted":true,"synonym":"Типы цен номенклатуры","illustration":"Перечень типов отпускных цен предприятия","obj_presentation":"Тип цен номенклатуры","list_presentation":"Типы цен номенклатуры","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"price_currency":{"synonym":"Валюта цены по умолчанию","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}},"discount_percent":{"synonym":"Процент скидки или наценки по умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"vat_price_included":{"synonym":"Цена включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"rounding_order":{"synonym":"Порядок округления","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"rounding_in_a_big_way":{"synonym":"Округлять в большую сторону","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"individuals":{"name":"ФизическиеЛица","splitted":true,"synonym":"Физические лица","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":10,"fields":{"birth_date":{"synonym":"Дата рождения","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"imns_code":{"synonym":"Код ИФНС","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":4}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"pfr_number":{"synonym":"Страховой номер ПФР","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":14}},"sex":{"synonym":"Пол","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.gender"],"is_ref":true}},"birth_place":{"synonym":"Место рождения","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":240}},"ОсновноеИзображение":{"synonym":"Основное изображение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.Файлы"],"is_ref":true}},"Фамилия":{"synonym":"Фамилия","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Имя":{"synonym":"Имя","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Отчество":{"synonym":"Отчество","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ФамилияРП":{"synonym":"Фамилия (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ИмяРП":{"synonym":"Имя (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОтчествоРП":{"synonym":"Отчество (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОснованиеРП":{"synonym":"Основание (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ДолжностьРП":{"synonym":"Должность (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Должность":{"synonym":"Должность","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"822f19bc-09ab-4913-b283-b5461382a75d","presentation":"Справочник \"Физические лица\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}}},"cachable":"ram","hide":true,"form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"name","sex","birth_date",{"id":"parent","path":"o.parent","synonym":"Группа","type":"ref"}],"Коды":["inn","imns_code","pfr_number"],"Для печатных форм":["Фамилия","Имя","Отчество","ФамилияРП","ИмяРП","ОтчествоРП","Должность","ДолжностьРП","ОснованиеРП"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"characteristics":{"name":"ХарактеристикиНоменклатуры","splitted":true,"synonym":"Характеристики номенклатуры","illustration":"Дополнительные характеристики элементов номенклатуры: цвет, размер и т.п.","obj_presentation":"Характеристика номенклатуры","list_presentation":"Характеристики номенклатуры","input_by_string":["name"],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"x":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"y":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"z":{"synonym":"Толщина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"weight":{"synonym":"Масса, кг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"condition_products":{"synonym":"Условных изд.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"product":{"synonym":"Изделие","multiline_mode":false,"tooltip":"Для продукции - номер строки заказа, для характеристики стеклопакета - номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"leading_product":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"leading_elm":{"synonym":"Ведущий элемент","multiline_mode":false,"tooltip":"Для москиток и стеклопакетов - номер элемента ведущей продукции","type":{"types":["number"],"digits":6,"fraction_figits":0}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"Для целей RLS","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"sys":{"synonym":"Система","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.production_params"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}}},"tabular_sections":{"constructions":{"name":"Конструкции","synonym":"Конструкции","tooltip":"Конструкции изделия. Они же - слои или контуры","fields":{"cnstr":{"synonym":"№ Конструкции","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"parent":{"synonym":"Внешн. констр.","multiline_mode":false,"tooltip":"№ внешней конструкции","type":{"types":["number"],"digits":6,"fraction_figits":0}},"x":{"synonym":"Ширина, м","multiline_mode":false,"tooltip":"Габаритная ширина контура","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y":{"synonym":"Высота, м","multiline_mode":false,"tooltip":"Габаритная высота контура","type":{"types":["number"],"digits":8,"fraction_figits":1}},"z":{"synonym":"Глубина","multiline_mode":false,"tooltip":"Z-координата плоскости (z-index) длч многослойных конструкций","type":{"types":["number"],"digits":8,"fraction_figits":1}},"w":{"synonym":"Ширина фурн","multiline_mode":false,"tooltip":"Ширина фурнитуры (по фальцу)","type":{"types":["number"],"digits":8,"fraction_figits":1}},"h":{"synonym":"Высота фурн","multiline_mode":false,"tooltip":"Высота фурнитуры (по фальцу)","type":{"types":["number"],"digits":8,"fraction_figits":1}},"furn":{"synonym":"Фурнитура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false},{"name":"is_set","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.furns"],"is_ref":true}},"clr_furn":{"synonym":"Цвет фурнитуры","multiline_mode":false,"tooltip":"Цвет москитной сетки","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"direction":{"synonym":"Направл. откр.","multiline_mode":false,"tooltip":"Направление открывания","choice_params":[{"name":"ref","path":[{"name":"Левое","presentation":"Левое","type":"enm.open_directions"},{"name":"Правое","presentation":"Правое","type":"enm.open_directions"}]}],"choice_groups_elm":"elm","type":{"types":["enm.open_directions"],"is_ref":true}},"mskt":{"synonym":"Москитка","multiline_mode":false,"tooltip":"Номенклатура москитной сетки","choice_params":[{"name":"insert_type","path":{"name":"МоскитнаяСетка","presentation":"Москитная сетка","type":"enm.inserts_types"}}],"choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.nom"],"is_ref":true}},"clr_mskt":{"synonym":"Цвет москитки","multiline_mode":false,"tooltip":"Цвет москитной сетки","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"h_ruch":{"synonym":"Высота ручки","multiline_mode":false,"tooltip":"Высота ручки в координатах контура (от габарита створки)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"fix_ruch":{"synonym":"Высота ручки фиксирована","multiline_mode":false,"tooltip":"Вычисляется по свойствам фурнитуры","type":{"types":["boolean"]}},"is_rectangular":{"synonym":"Есть кривые","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"coordinates":{"name":"Координаты","synonym":"Координаты","tooltip":"Координаты элементов","fields":{"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"Номер конструкции (слоя)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"parent":{"synonym":"Родитель","multiline_mode":false,"tooltip":"Дополнительная иерархия. Например, номер стеклопакета для раскладки или внешняя примыкающая палка для створки или доборного профиля","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"path_data":{"synonym":"Путь SVG","multiline_mode":false,"tooltip":"Данные пути образующей в терминах svg или json элемента","type":{"types":["string"],"str_len":1000}},"x1":{"synonym":"X1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y1":{"synonym":"Y1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"x2":{"synonym":"X2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y2":{"synonym":"Y2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"r":{"synonym":"Радиус","multiline_mode":false,"tooltip":"Вспомогательное поле - частный случай криволинейного элемента","type":{"types":["number"],"digits":8,"fraction_figits":1}},"arc_ccw":{"synonym":"Против часов.","multiline_mode":false,"tooltip":"Вспомогательное поле - частный случай криволинейного элемента - дуга против часовой стрелки","type":{"types":["boolean"]}},"s":{"synonym":"Площадь","multiline_mode":false,"tooltip":"Вычисляемое","type":{"types":["number"],"digits":14,"fraction_figits":6}},"angle_hor":{"synonym":"Угол к горизонту","multiline_mode":false,"tooltip":"Вычисляется для прямой, проходящей через узлы","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp1":{"synonym":"Угол 1, °","multiline_mode":false,"tooltip":"Вычисляемое - угол реза в первом узле","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp2":{"synonym":"Угол 2, °","multiline_mode":false,"tooltip":"Вычисляемое - угол реза во втором узле","type":{"types":["number"],"digits":8,"fraction_figits":1}},"len":{"synonym":"Длина, м","multiline_mode":false,"tooltip":"Вычисляется по координатам и соединениям","type":{"types":["number"],"digits":8,"fraction_figits":1}},"pos":{"synonym":"Положение","multiline_mode":false,"tooltip":"Вычисляется во соседним элементам","choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"orientation":{"synonym":"Ориентация","multiline_mode":false,"tooltip":"Вычисляется по углу к горизонту","choice_groups_elm":"elm","type":{"types":["enm.orientations"],"is_ref":true}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"Вычисляется по вставке, геометрии и параметрам","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}}}},"cnn_elmnts":{"name":"СоединяемыеЭлементы","synonym":"Соединяемые элементы","tooltip":"Соединения элементов","fields":{"elm1":{"synonym":"Элем 1","multiline_mode":false,"tooltip":"Номер первого элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"node1":{"synonym":"Узел 1","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1}},"elm2":{"synonym":"Элем 2","multiline_mode":false,"tooltip":"Номер второго элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"node2":{"synonym":"Узел 2","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1}},"cnn":{"synonym":"Соединение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.cnns"],"is_ref":true}},"aperture_len":{"synonym":"Длина шва/проема","multiline_mode":false,"tooltip":"Для соединений с заполнениями: длина светового проема примыкающего элемента","type":{"types":["number"],"digits":8,"fraction_figits":1}}}},"params":{"name":"Параметры","synonym":"Параметры","tooltip":"Параметры изделий и фурнитуры","fields":{"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"Если 0, параметр относится к изделию. Иначе к фурнитуре створки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"glass_specification":{"name":"СпецификацияЗаполнений","synonym":"Спецификация заполнений (ORDGLP)","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"gno":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"glasses":{"name":"Заполнения","synonym":"Заполнения","tooltip":"Стеклопакеты и сэндвичи - вычисляемая табличная часть (кеш) для упрощения отчетов","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"№ элемента","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["string","cat.nom"],"str_len":50,"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics","string"],"is_ref":true,"str_len":50}},"width":{"synonym":"Ширина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"s":{"synonym":"Площадь, м ²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"is_rectangular":{"synonym":"Прямоуг.","multiline_mode":false,"tooltip":"Прямоугольное заполнение","type":{"types":["boolean"]}},"is_sandwich":{"synonym":"Листовые","multiline_mode":false,"tooltip":"Непрозрачное заполнение - сэндвич","type":{"types":["boolean"]}},"thickness":{"synonym":"Толщина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"coffer":{"synonym":"Камеры","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}}}},"mosquito":{"name":"Москитки","synonym":"Москитки","tooltip":"Москитные сетки - вычисляемая табличная часть (кеш) для упрощения отчетов","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["string","cat.nom"],"str_len":50,"is_ref":true}},"width":{"synonym":"Ширина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"s":{"synonym":"Площадь, м ²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":3}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"Номер элемента, если значение > 0, либо номер конструкции, если значение < 0","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["specification","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"qty":{"synonym":"Количество (шт)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"len":{"synonym":"Длина, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"width":{"synonym":"Ширина, м","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":6}},"alp1":{"synonym":"Угол 1, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"alp2":{"synonym":"Угол 2, °","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"totqty":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"totqty1":{"synonym":"Количество (+%)","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":4}},"price":{"synonym":"Себест.план","multiline_mode":false,"tooltip":"Цена плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма себест.","multiline_mode":false,"tooltip":"Сумма плановой себестоимости строки спецификации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_marged":{"synonym":"Сумма с наценкой","multiline_mode":false,"tooltip":"Вклад строки спецификации в стоимость изделия для сценария КМАРЖ_В_СПЕЦИФИКАЦИИ","type":{"types":["number"],"digits":15,"fraction_figits":2}},"origin":{"synonym":"Происхождение","multiline_mode":false,"tooltip":"Ссылка на настройки построителя, из которых возникла строка спецификации","choice_groups_elm":"elm","type":{"types":["cat.inserts","number","cat.cnns","cat.furns"],"is_ref":true,"digits":6,"fraction_figits":0}},"changed":{"synonym":"Запись изменена","multiline_mode":false,"tooltip":"Запись изменена оператором (1) или добавлена корректировкой спецификации (-1)","type":{"types":["number"],"digits":1,"fraction_figits":0}},"dop":{"synonym":"Это акс. или визуализ.","multiline_mode":false,"tooltip":"Содержит (1) для строк аксессуаров и (-1) для строк с визуализацией","type":{"types":["number"],"digits":1,"fraction_figits":0}}}}},"cachable":"doc","form":{"obj":{"head":{" ":["name","owner","calc_order","product","leading_product","leading_elm"],"Дополнительно":["x","y","z","s","clr","weight","condition_products"]},"tabular_sections":{"specification":{"fields":["elm","nom","clr","characteristic","qty","len","width","s","alp1","alp2","totqty1","price","amount","amount_marged"],"headers":"Эл.,Номенклатура,Цвет,Характеристика,Колич.,Длина,Высота,Площадь,Угол1,Угол2,Колич++,Цена,Сумма,Сумма++","widths":"50,*,70,*,50,70,70,70,70,70,70,70,70,80","min_widths":"50,180,70,180,50,70,70,70,70,70,70,70,70,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ron,ref,ref,ref,calck,calck,calck,calck,calck,calck,ron,ron,ron,ron"},"constructions":{"fields":["cnstr","parent","x","y","w","h","furn","clr_furn","direction","h_ruch","mskt","clr_mskt"],"headers":"Констр.,Внешн.,Ширина,Высота,Ширина фурн.,Высота фурн.,Фурнитура,Цвет фурн.,Открывание,Высота ручки,Москитка,Цвет москитки","widths":"50,50,70,70,70,70,*,80,80,70,*,70","min_widths":"50,50,70,70,70,70,120,80,80,70,120,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na","types":"ron,ron,ron,ron,ron,ron,ref,ro,ro,ro,ref,ro"},"coordinates":{"fields":["cnstr","parent","elm","elm_type","clr","inset","path_data","x1","y1","x2","y2","len","alp1","alp2","angle_hor","s","pos","orientation"],"headers":"Констр.,Внешн.,Эл.,Тип,Цвет,Вставка,Путь,x1,y1,x2,y2,Длина,Угол1,Угол2,Горизонт,Площадь,Положение,Ориентация","widths":"50,50,50,70,80,*,70,70,70,70,70,70,70,70,70,70,70,70","min_widths":"50,50,50,70,80,120,70,70,70,70,70,70,70,70,70,70,70,70","aligns":"","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":"ron,ron,ron,ref,ref,ref,ro,ron,ron,ron,ron,ron,ron,ron,ron,ron,ro,ro"},"cnn_elmnts":{"fields":["elm1","elm2","node1","node2","aperture_len","cnn"],"headers":"Эл1,Эл2,Узел1,Узел2,Длина,Соединение","widths":"50,50,50,50,160,*","min_widths":"50,50,50,50,100,200","aligns":"","sortings":"na,na,na,na,na,na","types":"ron,ron,ro,ro,ron,ref"},"params":{"fields":["cnstr","param","value","hide"],"headers":"Констр.,Параметр,Значение,Скрыть","widths":"50,*,*,50","min_widths":"50,200,200,50","aligns":"","sortings":"na,na,na,na","types":"ron,ref,ref,ch"}},"tabular_sections_order":["specification","constructions","coordinates","cnn_elmnts","params"]}}},"price_groups":{"name":"ЦеновыеГруппы","splitted":true,"synonym":"Ценовые группы","illustration":"","obj_presentation":"Ценовая группа","list_presentation":"Ценовые группы","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"definition":{"synonym":"Описание","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":1024}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"nom_groups":{"name":"ГруппыФинансовогоУчетаНоменклатуры","splitted":true,"synonym":"Группы фин. учета номенклатуры","illustration":"Перечень номенклатурных групп для учета затрат и укрупненного планирования продаж, закупок и производства","obj_presentation":"Номенклатурная группа","list_presentation":"Номенклатурные группы","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Раздел","multiline_mode":false,"tooltip":"","type":{"types":["cat.nom_groups"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"insert_bind":{"name":"ПривязкиВставок","splitted":true,"synonym":"Привязки вставок","illustration":"Замена регистра \"Корректировка спецификации\"","obj_presentation":"Привязка вставки","list_presentation":"Привязки вставок","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.formulas","cat.furns"],"is_ref":true}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","type":{"types":["cat.nom"],"is_ref":true}}}}},"cachable":"ram"},"planning_keys":{"name":"КлючиПланирования","splitted":true,"synonym":"Ключи планирования","illustration":"Смена + Подразделение + Участок","obj_presentation":"Ключ планирования","list_presentation":"Ключи планирования","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"work_shift":{"synonym":"Смена","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_shifts"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_centers"],"is_ref":true}},"work_center_kind":{"synonym":"Вид рабочего центра","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_center_kinds"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"doc"}},"doc":{"registers_correction":{"name":"КорректировкаРегистров","splitted":true,"synonym":"Корректировка регистров","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"original_doc_type":{"synonym":"Тип исходного документа","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Произвольный комментарий. ","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"registers_table":{"name":"ТаблицаРегистров","synonym":"Таблица регистров","tooltip":"","fields":{"Имя":{"synonym":"Имя","multiline_mode":false,"tooltip":"Имя регистра, которому скорректированы записи.","mandatory":true,"type":{"types":["string"],"str_len":255}}}}},"cachable":"doc_remote","hide":true},"purchase":{"name":"ПоступлениеТоваровУслуг","splitted":true,"synonym":"Поступление товаров и услуг","illustration":"Документы отражают поступление товаров и услуг","obj_presentation":"Поступление товаров и услуг","list_presentation":"Поступление товаров и услуг","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_supplier","path":true}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":false},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"unit":{"synonym":"Единица измерения","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_units"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Заказ резерв","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"services":{"name":"Услуги","synonym":"Услуги","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":true},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"content":{"synonym":"Содержание услуги, доп. сведения","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["string"],"str_len":0}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"nom_group":{"synonym":"Номенклатурная группа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_groups"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"cost_item":{"synonym":"Статья затрат","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":10}},"project":{"synonym":"Проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"buyers_order":{"synonym":"Заказ затрат","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}}},"cachable":"doc_remote","hide":true},"work_centers_task":{"name":"НарядРЦ","splitted":true,"synonym":"Задание рабочему центру","illustration":"","obj_presentation":"Наряд","list_presentation":"Задания рабочим центрам","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"Участок или станок в подразделении производства","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"recipient":{"synonym":"Получатель","multiline_mode":false,"tooltip":"СГП или следующий передел","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}},"Потребность":{"name":"Потребность","synonym":"Потребность","tooltip":"","fields":{"production":{"synonym":"Продукция","multiline_mode":false,"tooltip":"Ссылка на характеристику продукции или объект планирования. Указывает, к чему относится материал текущей строки","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"НоменклатураСП":{"synonym":"Номенклатура СП","multiline_mode":false,"tooltip":"Номенклатура из спецификации продукции","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"ХарактеристикаСП":{"synonym":"Характеристика СП","multiline_mode":false,"tooltip":"Характеристика из спецификации продукции","choice_links":[{"name":["selection","owner"],"path":["Потребность","НоменклатураСП"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"Номенклатура потребности. По умолчанию, совпадает с номенклатурой спецификации, но может содержать аналог","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"Характеристика потребности. По умолчанию, совпадает с характеристикой спецификации, но может содержать аналог","choice_links":[{"name":["selection","owner"],"path":["Потребность","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"ОстатокПотребности":{"synonym":"Остаток потребности","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"Закрыть":{"synonym":"Закрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"ИзОбрези":{"synonym":"Из обрези","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":4}}}},"ПотребностьИтог":{"name":"ПотребностьИтог","synonym":"Потребность итог","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ПотребностьИтог","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"Потребность":{"synonym":"Потребность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}}}},"ОбрезьВход":{"name":"ОбрезьВход","synonym":"Обрезь вход","tooltip":"","fields":{"Хлыст":{"synonym":"Хлыст","multiline_mode":false,"tooltip":"№ листа (хлыста, заготовки)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"НомерПары":{"synonym":"Номер пары","multiline_mode":false,"tooltip":"№ парной заготовки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["ОбрезьВход","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"длина в мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина","multiline_mode":false,"tooltip":"ширина в мм","type":{"types":["number"],"digits":8,"fraction_figits":1}},"ПорядокПечати":{"synonym":"Порядок печати","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"Использовано":{"synonym":"Использовано","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"Остаток":{"synonym":"Остаток","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"cell":{"synonym":"Ячейка","multiline_mode":false,"tooltip":"№ ячейки (откуда брать заготовку)","type":{"types":["number"],"digits":10,"fraction_figits":0}},"ЯчейкаНов":{"synonym":"Ячейка нов","multiline_mode":false,"tooltip":"№ ячейки (куда помещать деловой обрезок)","type":{"types":["number"],"digits":10,"fraction_figits":0}}}},"ОбрезьВыход":{"name":"ОбрезьВыход","synonym":"Обрезь выход","tooltip":"","fields":{"Хлыст":{"synonym":"Хлыст","multiline_mode":false,"tooltip":"№ листа (хлыста, заготовки)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаX":{"synonym":"Координата X","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаY":{"synonym":"Координата Y","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"ЯчейкаНов":{"synonym":"Ячейка нов","multiline_mode":false,"tooltip":"№ ячейки (куда помещать деловой обрезок)","type":{"types":["number"],"digits":10,"fraction_figits":0}}}},"Раскрой":{"name":"Раскрой","synonym":"Раскрой","tooltip":"","fields":{"production":{"synonym":"Продукция","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"cnstr":{"synonym":"Конструкция","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["Раскрой","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"len":{"synonym":"Длина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"width":{"synonym":"Ширина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"Хлыст":{"synonym":"Хлыст","multiline_mode":false,"tooltip":"№ листа (заготовки), на котором размещать изделие","type":{"types":["number"],"digits":6,"fraction_figits":0}},"НомерПары":{"synonym":"Номер пары","multiline_mode":false,"tooltip":"№ парного изделия","type":{"types":["number"],"digits":6,"fraction_figits":0}},"orientation":{"synonym":"Ориентация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.orientations"],"is_ref":true}},"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"Угол1":{"synonym":"Угол1","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":2}},"Угол2":{"synonym":"Угол2","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":2}},"cell":{"synonym":"Ячейка","multiline_mode":false,"tooltip":"№ ячейки (куда помещать изделие)","type":{"types":["number"],"digits":10,"fraction_figits":0}},"Партия":{"synonym":"Партия","multiline_mode":false,"tooltip":"Партия (такт, группа раскроя)","type":{"types":["number"],"digits":6,"fraction_figits":0}},"КоординатаX":{"synonym":"Координата X","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"КоординатаY":{"synonym":"Координата Y","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"Поворот":{"synonym":"Поворот","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"ЭтоНестандарт":{"synonym":"Это нестандарт","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"doc_remote"},"calc_order":{"name":"Расчет","splitted":true,"synonym":"Расчет-заказ","illustration":"Аналог заказа покупателя типовых конфигураций.\nСодержит инструменты для формирования спецификаций и подготовки данных производства и диспетчеризации","obj_presentation":"Расчет-заказ","list_presentation":"Расчеты-заказы","input_by_string":["number_doc","number_internal"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"number_internal":{"synonym":"Номер внутр","multiline_mode":false,"tooltip":"Дополнительный (внутренний) номер документа","type":{"types":["string"],"str_len":20}},"project":{"synonym":"Проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_folder","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_buyer","path":true},{"name":"is_folder","path":false}],"choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"client_of_dealer":{"synonym":"Клиент дилера","multiline_mode":false,"tooltip":"Наименование конечного клиента в дилерских заказах","type":{"types":["string"],"str_len":255}},"contract":{"synonym":"Договор контрагента","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.contracts"],"is_ref":true}},"bank_account":{"synonym":"Банковский счет","multiline_mode":false,"tooltip":"Банковский счет организации, на который планируется поступление денежных средств","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.organization_bank_accounts"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Дополнительная информация","type":{"types":["string"],"str_len":255}},"manager":{"synonym":"Менеджер","multiline_mode":false,"tooltip":"Менеджер, оформивший заказ","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"leading_manager":{"synonym":"Ведущий менеджер","multiline_mode":false,"tooltip":"Куратор, ведущий менеджер","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"department":{"synonym":"Офис продаж","multiline_mode":false,"tooltip":"Подразделение продаж","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"Склад отгрузки товаров по заказу","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_operation":{"synonym":"Сумма упр","multiline_mode":false,"tooltip":"Сумма в валюте управленческого учета","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации","type":{"types":["number"],"digits":15,"fraction_figits":2}},"accessory_characteristic":{"synonym":"Характеристика аксессуаров","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"sys_profile":{"synonym":"Профиль","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"sys_furn":{"synonym":"Фурнитура","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"phone":{"synonym":"Телефон","multiline_mode":false,"tooltip":"Телефон по адресу доставки","type":{"types":["string"],"str_len":100}},"delivery_area":{"synonym":"Район","multiline_mode":false,"tooltip":"Район (зона, направление) доставки для группировки при планировании и оптимизации маршрута геокодером","choice_groups_elm":"elm","type":{"types":["cat.delivery_areas"],"is_ref":true}},"shipping_address":{"synonym":"Адрес доставки","multiline_mode":false,"tooltip":"Адрес доставки изделий заказа","type":{"types":["string"],"str_len":255}},"coordinates":{"synonym":"Координаты","multiline_mode":false,"tooltip":"Гео - координаты адреса доставки","type":{"types":["string"],"str_len":50}},"address_fields":{"synonym":"Значения полей адреса","multiline_mode":false,"tooltip":"Служебный реквизит","type":{"types":["string"],"str_len":0}},"difficult":{"synonym":"Сложный","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"vat_consider":{"synonym":"Учитывать НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"vat_included":{"synonym":"Сумма включает НДС","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}},"settlements_course":{"synonym":"Курс взаиморасчетов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"settlements_multiplicity":{"synonym":"Кратность взаиморасчетов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"obj_delivery_state":{"synonym":"Этап согласования","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Подтвержден","presentation":"Подтвержден","type":"enm.obj_delivery_states"},{"name":"Отклонен","presentation":"Отклонен","type":"enm.obj_delivery_states"},{"name":"Архив","presentation":"Перенесён в архив","type":"enm.obj_delivery_states"},{"name":"Шаблон","presentation":"Шаблон","type":"enm.obj_delivery_states"},{"name":"Черновик","presentation":"Черновик","type":"enm.obj_delivery_states"}]}],"choice_groups_elm":"elm","type":{"types":["enm.obj_delivery_states"],"is_ref":true}},"category":{"synonym":"Категория заказа","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.order_categories"],"is_ref":true}}},"tabular_sections":{"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"unit":{"synonym":"Ед.","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_units"],"is_ref":true}},"qty":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"len":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":1}},"width":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":1}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"Площадь изделия","type":{"types":["number"],"digits":10,"fraction_figits":4}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":2}},"marginality":{"synonym":"К. марж","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_percent_internal":{"synonym":"Скидка внутр. %","multiline_mode":false,"tooltip":"Процент скидки для внутренней перепродажи (холдинг) или внешней (дилеры)","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"margin":{"synonym":"Маржа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price_internal":{"synonym":"Цена внутр.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации (холдинг) или внешней (от дилера конечному клиенту)","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ordn":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"ссылка на продукциию, к которой относится материал","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"changed":{"synonym":"Запись изменена","multiline_mode":false,"tooltip":"Запись изменена оператором (1, -2) или добавлена корректировкой спецификации (-1)","type":{"types":["number"],"digits":1,"fraction_figits":0}}}},"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}}}},"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","calc_order"],"path":["ref"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}}},"cachable":"doc","hide":true,"form":{"selection":{"fields":["posted","date","number_doc","number_internal","partner","client_of_dealer","doc_amount","obj_delivery_state","sys_profile","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"number_internal","width":"100","type":"ro","align":"left","sort":"na","caption":"№ внутр"},{"id":"partner","width":"170","type":"ro","align":"left","sort":"na","caption":"Контрагент"},{"id":"client_of_dealer","width":"170","type":"ro","align":"left","sort":"na","caption":"Клиент"},{"id":"doc_amount","width":"120","type":"ron","align":"right","sort":"na","caption":"Сумма"},{"id":"obj_delivery_state","width":"120","type":"ro","align":"left","sort":"na","caption":"Статус"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"},{"id":"sys_profile","width":"120","type":"ro","align":"left","sort":"na","caption":"Профиль"}]},"obj":{"head":{" ":["name","owner","calc_order","product","leading_product","leading_elm"]},"tabular_sections":{"production":{"fields":["row","nom","characteristic","note","qty","len","width","s","quantity","unit","discount_percent","price","amount","discount_percent_internal","price_internal","amount_internal"],"aligns":"center,left,left,left,right,right,right,right,right,left,right,right,right,right,right,right","sortings":"na,na,na,na,na,na,na,na,na,na,na,na,na,na,na,na","types":""},"planning":{"fields":["obj","elm","specimen","work_center","date","performance"],"aligns":"left,right,right,left,left,right","sortings":"na,na,na,na,na,na","headers":"Продукция,Элемент,Экземпляр,Рабочий центр,Дата,Мощность","widths":"*,70,70,*,120,90","min_widths":"180,60,60,180,110,80","types":"ref,calck,calck,ref,dhxCalendar,calck"}},"tabular_sections_order":["production","planning"]}}},"credit_card_order":{"name":"ОплатаОтПокупателяПлатежнойКартой","splitted":true,"synonym":"Оплата от покупателя платежной картой","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"doc_remote","hide":true},"work_centers_performance":{"name":"МощностиРЦ","splitted":true,"synonym":"Мощности рабочих центров","illustration":"","obj_presentation":"Мощность рабочих центров","list_presentation":"Мощности рабочих центров","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"start_date":{"synonym":"Дата начала","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"expiration_date":{"synonym":"Дата окончания","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}}}},"cachable":"doc_remote"},"debit_bank_order":{"name":"ПлатежноеПоручениеВходящее","splitted":true,"synonym":"Платежное поручение входящее","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Плательщик","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"doc_remote","hide":true},"credit_bank_order":{"name":"ПлатежноеПоручениеИсходящее","splitted":true,"synonym":"Платежное поручение исходящее","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Получатель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"doc_remote","hide":true},"debit_cash_order":{"name":"ПриходныйКассовыйОрдер","splitted":true,"synonym":"Приходный кассовый ордер","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"cashbox":{"synonym":"Касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"doc_remote","hide":true},"credit_cash_order":{"name":"РасходныйКассовыйОрдер","splitted":true,"synonym":"Расходный кассовый ордер","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент, подотчетник, Касса ККМ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"cashbox":{"synonym":"Касса","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["cat.cashboxes"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"payment_details":{"name":"РасшифровкаПлатежа","synonym":"Расшифровка платежа","tooltip":"","fields":{"cash_flow_article":{"synonym":"Статья движения денежных средств","multiline_mode":false,"tooltip":"Статья движения денежных средств","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.cash_flow_articles"],"is_ref":true}},"trans":{"synonym":"Объект расчетов","multiline_mode":false,"tooltip":"Документ расчетов с партнером","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order","cat.contracts"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"Сумма платежа","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":2}}}}},"cachable":"doc_remote","hide":true},"selling":{"name":"РеализацияТоваровУслуг","splitted":true,"synonym":"Реализация товаров и услуг","illustration":"Документы отражают факт реализации (отгрузки) товаров","obj_presentation":"Реализация товаров и услуг","list_presentation":"Реализация товаров и услуг","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.organizations"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_buyer","path":true}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.partners"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"warehouse":{"synonym":"Склад","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.stores"],"is_ref":true}},"doc_amount":{"synonym":"Сумма документа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"Пользователь, ответственный за  документ.","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":false},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"unit":{"synonym":"Единица измерения","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_units"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Процент скидки или наценки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Сделка","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","partner"],"path":["partner"]},{"name":["selection","organization"],"path":["organization"]}],"choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}},"services":{"name":"Услуги","synonym":"Услуги","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_params":[{"name":"Услуга","path":true},{"name":"set","path":false}],"choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"content":{"synonym":"Содержание услуги, доп. сведения","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["string"],"str_len":0}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Процент скидки или наценки","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"vat_rate":{"synonym":"Ставка НДС","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.vat_rates"],"is_ref":true}},"vat_amount":{"synonym":"Сумма НДС","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"trans":{"synonym":"Сделка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}}}}},"cachable":"doc_remote"},"nom_prices_setup":{"name":"УстановкаЦенНоменклатуры","splitted":true,"synonym":"Установка цен номенклатуры","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.currencies"],"is_ref":true}},"responsible":{"synonym":"Ответственный","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.users"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Товары","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["goods","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}}}}},"cachable":"doc","form":{"selection":{"fields":["posted","date","number_doc","price_type","currency","note"],"cols":[{"id":"date","width":"160","type":"ro","align":"left","sort":"server","caption":"Дата"},{"id":"number_doc","width":"120","type":"ro","align":"left","sort":"na","caption":"№"},{"id":"price_type","width":"*","type":"ro","align":"left","sort":"na","caption":"Тип цен"},{"id":"currency","width":"120","type":"ro","align":"left","sort":"na","caption":"Валюта"},{"id":"note","width":"*","type":"ro","align":"left","sort":"na","caption":"Комментарий"}]},"obj":{"head":{" ":[{"id":"number_doc","path":"o.number_doc","type":"ro","synonym":"Номер"},"date","responsible","note","price_type","currency"]},"tabular_sections":{"goods":{"fields":["row","nom","nom_characteristic","price_type","price"],"headers":"№,Номенклатура,Характеристика,Тип цен,Цена","aligns":"center,left,left,left,right","sortings":"na,na,na,na,na","types":"cntr,ref,ref,ref,calck","widths":"50,*,*,80,90","min_widths":"40,200,140,0,80"}}}}},"planning_event":{"name":"СобытиеПланирования","splitted":true,"synonym":"Событие планирования","illustration":"","obj_presentation":"Событие планирования","list_presentation":"События планирования","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"phase":{"synonym":"Фаза","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.ФазыПланирования"],"is_ref":true}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"recipient":{"synonym":"Получатель","multiline_mode":false,"tooltip":"СГП или следующий передел","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"executors":{"name":"Исполнители","synonym":"Исполнители","tooltip":"","fields":{"executor":{"synonym":"Исполнитель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}}}},"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"event_time":{"synonym":"Время события","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date_time"}}}}},"cachable":"doc"}},"ireg":{"buyers_order_states":{"name":"СостоянияЗаказовКлиентов","splitted":true,"note":"","synonym":"Состояния заказов клиентов","dimensions":{"invoice":{"synonym":"Заказ","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["doc.calc_order"],"is_ref":true}}},"resources":{"state":{"synonym":"Состояние","multiline_mode":false,"tooltip":"Текущее состояние заказа","choice_groups_elm":"elm","mandatory":true,"type":{"types":["enm.buyers_order_states"],"is_ref":true}},"event_date":{"synonym":"Дата события","multiline_mode":false,"tooltip":"Дата, на которую заказ считается просроченным","type":{"types":["date"],"date_part":"date"}}},"attributes":{"СуммаОплаты":{"synonym":"Сумма оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентОплаты":{"synonym":"Процент оплаты","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"СуммаОтгрузки":{"synonym":"Сумма отгрузки заказа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентОтгрузки":{"synonym":"Процент отгрузки заказа","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"СуммаДолга":{"synonym":"Сумма долга","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ПроцентДолга":{"synonym":"Процент долга","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":3,"fraction_figits":0}},"ЕстьРасхожденияОрдерНакладная":{"synonym":"Есть расхождения ордер накладная","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}},"cachable":"doc","grouping":"record","hide":true},"$log":{"name":"$log","note":"","synonym":"Журнал событий","dimensions":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"Время события","type":{"types":["number"],"digits":15,"fraction_figits":0}},"sequence":{"synonym":"Порядок","multiline_mode":false,"tooltip":"Порядок следования","type":{"types":["number"],"digits":6,"fraction_figits":0}}},"resources":{"class":{"synonym":"Класс","multiline_mode":false,"tooltip":"Класс события","type":{"types":["string"],"str_len":100}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Текст события","type":{"types":["string"],"str_len":0}},"obj":{"synonym":"Объект","multiline_mode":true,"tooltip":"Объект, к которому относится событие","type":{"types":["string"],"str_len":0}}}},"margin_coefficients":{"name":"пзМаржинальныеКоэффициентыИСкидки","splitted":true,"note":"","synonym":"Маржинальные коэффициенты","dimensions":{"price_group":{"synonym":"Ценовая группа","multiline_mode":false,"tooltip":"Если указано, правило распространяется только на продукцию данной ценовой группы","choice_groups_elm":"elm","type":{"types":["cat.price_groups"],"is_ref":true}},"parameters_key":{"synonym":"Ключ параметров","multiline_mode":false,"tooltip":"Если указано, правило распространяется только на продукцию, параметры документа Расчет, Договора, Организации и Контрагента которой совпадают с параметрами ключа параметров","choice_groups_elm":"elm","type":{"types":["cat.parameters_keys"],"is_ref":true}},"condition_formula":{"synonym":"Формула условия","multiline_mode":false,"tooltip":"В этом поле можно указать дополнительное условие на языке 1С. Например, применять строку только к аркам или непрямоугольным изделиям","choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}}},"resources":{"marginality":{"synonym":"К марж","multiline_mode":false,"tooltip":"На этот коэффициент будет умножена плановая себестоимость для получения отпускной цены. Имеет смысл, если \"тип цен прайс\" не указан и константа КМАРЖ_В_СПЕЦИФИКАЦИИ сброшена","type":{"types":["number"],"digits":10,"fraction_figits":4}},"marginality_min":{"synonym":"К марж мин.","multiline_mode":false,"tooltip":"Не позволяет установить в документе расчет скидку, при которой маржинальность строки опустится ниже указанного значения","type":{"types":["number"],"digits":10,"fraction_figits":4}},"marginality_internal":{"synonym":"К марж внутр.","multiline_mode":false,"tooltip":"Маржинальный коэффициент внутренней продажи","type":{"types":["number"],"digits":10,"fraction_figits":4}},"price_type_first_cost":{"synonym":"Тип цен плановой себестоимости","multiline_mode":false,"tooltip":"Этот тип цен будет использован для расчета плановой себестоимости продукции","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price_type_sale":{"synonym":"Тип прайсовых цен","multiline_mode":false,"tooltip":"Этот тип цен будет использован для расчета отпускной цены продукции. Если указано, значения КМарж и КМарж.мин игнорируются","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"price_type_internal":{"synonym":"Тип цен внутренней продажи","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета (корректировки) себестоимости","choice_params":[{"name":"parent","path":[{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"},{"ref":"3220e25b-ffcd-11e5-8303-e67fda7f6b46","presentation":"Ценообразование","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"sale_formula":{"synonym":"Формула продажа","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета (корректировки) цены продажи","choice_params":[{"name":"parent","path":[{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"},{"ref":"3220e25b-ffcd-11e5-8303-e67fda7f6b46","presentation":"Ценообразование","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"internal_formula":{"synonym":"Формула внутр","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета цены внутренней продажи или заказа поставщику","choice_params":[{"name":"parent","path":[{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"},{"ref":"3220e25b-ffcd-11e5-8303-e67fda7f6b46","presentation":"Ценообразование","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"external_formula":{"synonym":"Формула внешн.","multiline_mode":false,"tooltip":"В этом поле можно указать произвольный код на языке 1С для расчета внешней (дилерской) цены","choice_params":[{"name":"parent","path":[{"ref":"3220e251-ffcd-11e5-8303-e67fda7f6b46","presentation":"Общее","type":"cat.formulas"},{"ref":"3220e25b-ffcd-11e5-8303-e67fda7f6b46","presentation":"Ценообразование","type":"cat.formulas"}]}],"choice_groups_elm":"elm","type":{"types":["cat.formulas"],"is_ref":true}},"extra_charge_external":{"synonym":"Наценка внешн.","multiline_mode":false,"tooltip":"Наценка внешней (дилерской) продажи по отношению к цене производителя, %. Перекрывается, если указан в лёгклм клиенте","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_external":{"synonym":"Скидка внешн.","multiline_mode":false,"tooltip":"Скидка по умолчанию для внешней (дилерской) продажи по отношению к дилерской цене, %. Перекрывается, если указан в лёгклм клиенте","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"Скидка по умолчанию, %","type":{"types":["number"],"digits":5,"fraction_figits":2}}},"attributes":{"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":200}}},"cachable":"ram","grouping":"record","form":{"selection":{"fields":["cat_price_groups.name as price_group","cat_parameters_keys.name as parameters_key","cat_formulas.name as condition_formula"],"cols":[{"id":"price_group","width":"*","type":"ro","align":"left","sort":"server","caption":"Ценовая группа"},{"id":"parameters_key","width":"*","type":"ro","align":"left","sort":"server","caption":"Ключ параметров"},{"id":"condition_formula","width":"*","type":"ro","align":"left","sort":"server","caption":"Формула условия"}]}}},"currency_courses":{"name":"КурсыВалют","splitted":true,"note":"","synonym":"Курсы валют","dimensions":{"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"Ссылка на валюты","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}},"period":{"synonym":"Дата курса","multiline_mode":false,"tooltip":"Дата курса валюты","mandatory":true,"type":{"types":["date"],"date_part":"date"}}},"resources":{"course":{"synonym":"Курс","multiline_mode":false,"tooltip":"Курс валюты","mandatory":true,"type":{"types":["number"],"digits":10,"fraction_figits":4}},"multiplicity":{"synonym":"Кратность","multiline_mode":false,"tooltip":"Кратность валюты","mandatory":true,"type":{"types":["number"],"digits":10,"fraction_figits":0}}},"attributes":{},"cachable":"ram","grouping":"record","form":{"selection":{"fields":["cat_currencies.name as currency","period","course"],"cols":[{"id":"currency","width":"*","type":"ro","align":"left","sort":"server","caption":"Валюта"},{"id":"period","width":"*","type":"ro","align":"left","sort":"server","caption":"Дата курса"},{"id":"course","width":"*","type":"ron","align":"right","sort":"server","caption":"Курс"}]}}}},"areg":{"planning":{"name":"Планирование","splitted":true,"note":"","synonym":"Планирование","dimensions":{"phase":{"synonym":"Фаза","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.ФазыПланирования"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics","doc.work_centers_task","doc.calc_order"],"is_ref":true}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"period":{"synonym":"","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["date"],"date_part":"date_time"}},"recorder":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["doc.work_centers_performance","doc.planning_event","doc.registers_correction","doc.work_centers_task","doc.calc_order"],"is_ref":true}}},"resources":{"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":2}},"cost":{"synonym":"Стоимость","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}}},"attributes":{},"cachable":"e1cib","grouping":"balances","hide":true},"invoice_payments":{"name":"РасчетыСКонтрагентами","splitted":true,"note":"(Упр)","synonym":"Расчеты с контрагентами","dimensions":{"trans":{"synonym":"Сделка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"partner":{"synonym":"Контрагент","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.partners"],"is_ref":true}},"organization":{"synonym":"Организация","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.organizations"],"is_ref":true}},"period":{"synonym":"","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["date"],"date_part":"date_time"}},"recorder":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["doc.credit_card_order","doc.debit_bank_order","doc.registers_correction","doc.credit_cash_order","doc.selling","doc.purchase","doc.debit_cash_order","doc.credit_bank_order"],"is_ref":true}}},"resources":{"amount_mutual":{"synonym":"Сумма взаиморасчетов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_operation":{"synonym":"Сумма упр. учета","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}}},"attributes":{},"cachable":"e1cib","grouping":"balances","hide":true}},"dp":{"builder_price":{"name":"builder_price","splitted":false,"synonym":"Цены номенклатуры","illustration":"Метаданные карточки цен номенклатуры","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}}},"tabular_sections":{"goods":{"name":"Товары","synonym":"Цены","tooltip":"","fields":{"price_type":{"synonym":"Тип Цен","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom_prices_types"],"is_ref":true}},"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"nom_characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"currency":{"synonym":"Валюта","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.currencies"],"is_ref":true}}}}},"cachable":"e1cib","hide":true},"buyers_order":{"name":"ЗаказПокупателя","splitted":false,"synonym":"УПзП: Заказ покупателя","illustration":"","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"sys":{"synonym":"Система","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.production_params"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"len":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"depth":{"synonym":"Глубина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"quantity":{"synonym":"Колич., шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":150}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount_percent_internal":{"synonym":"Скидка внутр. %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"discount":{"synonym":"Скидка","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"shipping_date":{"synonym":"Дата доставки","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"client_number":{"synonym":"Номер клиента","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"inn":{"synonym":"ИНН Клиента","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":20}},"shipping_address":{"synonym":"Адрес доставки","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":255}},"phone":{"synonym":"Телефон","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":100}},"price_internal":{"synonym":"Цена внутр.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"amount_internal":{"synonym":"Сумма внутр.","multiline_mode":false,"tooltip":"Сумма внутренней реализации (холдинг) или внешней (от дилера конечному клиенту)","type":{"types":["number"],"digits":15,"fraction_figits":2}},"base_block":{"synonym":"Типовой блок","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}}},"tabular_sections":{"product_params":{"name":"ПараметрыИзделия","synonym":"Параметры продукции","tooltip":"","fields":{"ind":{"synonym":"Индекс","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":0}},"param":{"synonym":"Параметр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["product_params","param"]}],"choice_groups_elm":"elm","choice_type":{"path":["product_params","param"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"hide":{"synonym":"Скрыть","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}},"production":{"name":"Продукция","synonym":"Продукция","tooltip":"","fields":{"nom":{"synonym":"Номенклатура","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.nom"],"is_ref":true}},"characteristic":{"synonym":"Характеристика","multiline_mode":false,"tooltip":"","choice_links":[{"name":["selection","owner"],"path":["production","nom"]}],"choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"len":{"synonym":"Длина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"height":{"synonym":"Высота, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"depth":{"synonym":"Глубина, мм","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"s":{"synonym":"Площадь, м²","multiline_mode":false,"tooltip":"Площадь изделия","type":{"types":["number"],"digits":10,"fraction_figits":4}},"quantity":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":150}},"first_cost":{"synonym":"Себест. ед.","multiline_mode":false,"tooltip":"Плановая себестоимость единицы продукции","type":{"types":["number"],"digits":15,"fraction_figits":2}},"price":{"synonym":"Цена","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"discount_percent":{"synonym":"Скидка %","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":5,"fraction_figits":2}},"amount":{"synonym":"Сумма","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":15,"fraction_figits":2}},"ordn":{"synonym":"Ведущая продукция","multiline_mode":false,"tooltip":"ссылка на продукциию, к которой относится материал","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"qty":{"synonym":"Количество, шт","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":14,"fraction_figits":3}}}},"glass_specification":{"name":"СпецификацияЗаполнений","synonym":"Спецификация заполнений (ORDGLP)","tooltip":"","fields":{"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"sorting":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"inset":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}}}},"specification":{"name":"Спецификация","synonym":"Спецификация","tooltip":"","fields":{"elm":{"synonym":"№","multiline_mode":false,"tooltip":"Идентификатор строки спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"dop":{"synonym":"Доп","multiline_mode":false,"tooltip":"Элемент дополнительной спецификации","type":{"types":["number"],"digits":6,"fraction_figits":0}},"nom_set":{"synonym":"Номенклатура/Набор","multiline_mode":false,"tooltip":"","choice_params":[{"name":"is_set","path":true}],"choice_groups_elm":"elm","type":{"types":["cat.inserts","cat.nom","cat.furns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"quantity":{"synonym":"Количество","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"handle_height_base":{"synonym":"Выс. ручк.","multiline_mode":false,"tooltip":"Стандартная высота ручки","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_min":{"synonym":"Выс. ручк. min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"handle_height_max":{"synonym":"Выс. ручк. max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"contraction":{"synonym":"Укорочение","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"contraction_option":{"synonym":"Укороч. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.contraction_options"],"is_ref":true}},"coefficient":{"synonym":"Коэффициент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":10,"fraction_figits":4}},"flap_weight_min":{"synonym":"Масса створки min","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"flap_weight_max":{"synonym":"Масса створки max","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"side":{"synonym":"Сторона","multiline_mode":false,"tooltip":"Сторона фурнитуры, на которую устанавливается элемент или на которой выполняется операция","type":{"types":["number"],"digits":1,"fraction_figits":0}},"cnn_side":{"synonym":"Сторона соед.","multiline_mode":false,"tooltip":"Фильтр: выполнять операцию, если примыкающий элемент примыкает с заданной стороны","choice_groups_elm":"elm","type":{"types":["enm.cnn_sides"],"is_ref":true}},"offset_option":{"synonym":"Смещ. от","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.offset_options"],"is_ref":true}},"formula":{"synonym":"Формула","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"transfer_option":{"synonym":"Перенос опер.","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.transfer_operations_options"],"is_ref":true}},"is_main_specification_row":{"synonym":"Это строка основной спецификации","multiline_mode":false,"tooltip":"Интерфейсное поле (доп=0) для редактирования без кода","type":{"types":["boolean"]}},"is_set_row":{"synonym":"Это строка набора","multiline_mode":false,"tooltip":"Интерфейсное поле (НоменклатураНабор=Фурнитура) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_procedure_row":{"synonym":"Это строка операции","multiline_mode":false,"tooltip":"Интерфейсное поле (НоменклатураНабор=Номенклатура И ТипНоменклатуры = Техоперация) для редактирования без кода","type":{"types":["number"],"digits":1,"fraction_figits":0}},"is_order_row":{"synonym":"Это строка заказа","multiline_mode":false,"tooltip":"Если \"Истина\", строка будет добавлена в заказ, а не в спецификацию текущей продукции","type":{"types":["boolean"]}},"origin":{"synonym":"Происхождение","multiline_mode":false,"tooltip":"Ссылка на настройки построителя, из которых возникла строка спецификации","choice_groups_elm":"elm","type":{"types":["cat.inserts","number","cat.cnns","cat.furns"],"is_ref":true,"digits":6,"fraction_figits":0}}}}},"cachable":"e1cib","hide":true,"form":{"obj":{"head":{" ":["calc_order"]},"tabular_sections":{"production":{"fields":["row","nom","clr","len","height","s","quantity","note"],"headers":"№,Номенклатура,Цвет,Длина,Высота,Площадь,Колич.,Комментарий","widths":"40,*,120,70,70,70,70,*","min_widths":"30,200,100,70,70,70,70,80","aligns":"center,left,left,right,right,right,right,left","sortings":"na,na,na,na,na,na,na,na","types":"cntr,ref,ref,calck,calck,calck,calck,txt"}}}}},"builder_lay_impost":{"name":"builder_lay_impost","splitted":false,"synonym":"Импосты и раскладки","illustration":"","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Импост","presentation":"Импост","type":"enm.elm_types"},{"name":"Раскладка","presentation":"Раскладка - фальшпереплет","type":"enm.elm_types"},{"name":"Рама","presentation":"Рама","type":"enm.elm_types"}]}],"choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"split":{"synonym":"Тип деления","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.lay_split_types"],"is_ref":true}},"elm_by_y":{"synonym":"Элементов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"step_by_y":{"synonym":"Шаг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":4,"fraction_figits":0}},"align_by_y":{"synonym":"Опора","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Низ","presentation":"Низ","type":"enm.positions"},{"name":"Верх","presentation":"Верх","type":"enm.positions"},{"name":"Центр","presentation":"Центр","type":"enm.positions"}]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"inset_by_y":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"elm_by_x":{"synonym":"Элементов","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":2,"fraction_figits":0}},"step_by_x":{"synonym":"Шаг","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":4,"fraction_figits":0}},"align_by_x":{"synonym":"Опора","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Лев","presentation":"Лев","type":"enm.positions"},{"name":"Прав","presentation":"Прав","type":"enm.positions"},{"name":"Центр","presentation":"Центр","type":"enm.positions"}]}],"choice_groups_elm":"elm","type":{"types":["enm.positions"],"is_ref":true}},"inset_by_x":{"synonym":"Вставка","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"w":{"synonym":"Ширина","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"h":{"synonym":"Высота","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}},"tabular_sections":{},"cachable":"e1cib","hide":true,"form":{"obj":{"head":{" ":["elm_type","clr","split"],"Деление Y":["inset_by_y","elm_by_y","step_by_y","align_by_y"],"Деление X":["inset_by_x","elm_by_x","step_by_x","align_by_x"],"Габариты":["w","h"]}}}},"builder_pen":{"name":"builder_pen","splitted":false,"synonym":"Рисование","illustration":"Метаданные инструмента pen (рисование профилей) графического построителя","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"elm_type":{"synonym":"Тип элемента","multiline_mode":false,"tooltip":"","choice_params":[{"name":"ref","path":[{"name":"Рама","presentation":"Рама","type":"enm.elm_types"},{"name":"Импост","presentation":"Импост","type":"enm.elm_types"},{"name":"Раскладка","presentation":"Раскладка - фальшпереплет","type":"enm.elm_types"},{"name":"Добор","presentation":"Доборный проф.","type":"enm.elm_types"},{"name":"Соединитель","presentation":"Соединит. профиль","type":"enm.elm_types"}]}],"choice_groups_elm":"elm","type":{"types":["enm.elm_types"],"is_ref":true}},"inset":{"synonym":"Материал профиля","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.inserts"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"bind_generatrix":{"synonym":"Магнит к профилю","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}},"bind_node":{"synonym":"Магнит к узлам","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}}},"tabular_sections":{},"cachable":"e1cib","hide":true},"builder_text":{"name":"builder_text","splitted":false,"synonym":"Произвольный текст","illustration":"Метаданные инструмента text графического построителя","obj_presentation":"","list_presentation":"","hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":0,"fields":{"text":{"synonym":"Текст","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"font_family":{"synonym":"Шрифт","multiline_mode":true,"tooltip":"Имя шрифта","type":{"types":["string"],"str_len":50}},"bold":{"synonym":"Жирный","multiline_mode":true,"tooltip":"","type":{"types":["boolean"]}},"font_size":{"synonym":"Размер","multiline_mode":true,"tooltip":"Размер шрифта","type":{"types":["number"],"digits":3,"fraction_figits":0}},"angle":{"synonym":"Поворот","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"align":{"synonym":"Выравнивание","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.text_aligns"],"is_ref":true}},"clr":{"synonym":"Цвет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.clrs"],"is_ref":true}},"x":{"synonym":"X коорд.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"y":{"synonym":"Y коорд.","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}}},"tabular_sections":{},"cachable":"e1cib","hide":true}},"rep":{},"cch":{"predefined_elmnts":{"name":"ПредопределенныеЭлементы","splitted":true,"synonym":"Константы и списки","illustration":"Хранит значения настроек и параметров подсистем","obj_presentation":"Значение настроек","list_presentation":"","input_by_string":[],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"synonym":{"synonym":"Синоним","multiline_mode":false,"tooltip":"Синоним предопределенного элемента","mandatory":true,"type":{"types":["string"],"str_len":50}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cch.predefined_elmnts"],"is_ref":true}},"type":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}},"tabular_sections":{"elmnts":{"name":"Элементы","synonym":"Элементы","tooltip":"","fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}}}},"cachable":"doc","form":{"obj":{"head":{" ":[{"id":"name","path":"o.name","synonym":"Наименование","type":"ro"},{"id":"synonym","path":"o.synonym","synonym":"Синоним","type":"ro"},"list","zone","value"]},"tabular_sections":{"elmnts":{"fields":["elm","value"],"headers":"Элемент,Значение","widths":"*,*","min_widths":"150,150","aligns":"","sortings":"na,na","types":"ref,ref"}}}}},"properties":{"name":"ДополнительныеРеквизитыИСведения","splitted":true,"synonym":"Дополнительные реквизиты и сведения","illustration":"","obj_presentation":"Дополнительный реквизит / сведение","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"shown":{"synonym":"Виден","multiline_mode":false,"tooltip":"Настройка видимости дополнительного реквизита","type":{"types":["boolean"]}},"extra_values_owner":{"synonym":"Владелец дополнительных значений","multiline_mode":false,"tooltip":"Свойство-образец, с которым у этого свойства одинаковый список дополнительных значений","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"available":{"synonym":"Доступен","multiline_mode":false,"tooltip":"Настройка доступности дополнительного реквизита","type":{"types":["boolean"]}},"caption":{"synonym":"Наименование","multiline_mode":false,"tooltip":"Краткое представление свойства, которое\nвыводится в формах редактирования его значения","mandatory":true,"type":{"types":["string"],"str_len":75}},"mandatory":{"synonym":"Заполнять обязательно","multiline_mode":false,"tooltip":"Настройка проверки заполненности дополнительного реквизита","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Поясняет назначение свойства","type":{"types":["string"],"str_len":0}},"destination":{"synonym":"Набор свойств","multiline_mode":false,"tooltip":"Набор свойств, которому принадлежит уникальное свойство. Если не задан, значит свойство общее.","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"tooltip":{"synonym":"Подсказка","multiline_mode":false,"tooltip":"Показывается пользователю при редактировании свойства в форме объекта","type":{"types":["string"],"str_len":0}},"is_extra_property":{"synonym":"Это дополнительное сведение","multiline_mode":false,"tooltip":"Свойство является дополнительным сведением, а не дополнительным реквизитом","type":{"types":["boolean"]}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"Значение представляет собой список опций","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"type":{"synonym":"","multiline_mode":false,"tooltip":"Типы значения, которое можно ввести при заполнении свойства.","mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}},"tabular_sections":{"extra_fields_dependencies":{"name":"ЗависимостиДополнительныхРеквизитов","synonym":"Зависимости дополнительных реквизитов","tooltip":"","fields":{"ЗависимоеСвойство":{"synonym":"Зависимое свойство","multiline_mode":false,"tooltip":"Имя свойства дополнительного реквизита, для которого настроена зависимость.","type":{"types":["string"],"str_len":0}},"field":{"synonym":"Реквизит","multiline_mode":false,"tooltip":"Имя реквизита формы или ссылка на дополнительный реквизит, от которого зависит текущий дополнительный реквизит.","choice_groups_elm":"elm","type":{"types":["string","cch.properties"],"str_len":99,"is_ref":true}},"condition":{"synonym":"Условие","multiline_mode":false,"tooltip":"Вид зависимости. \"Равно\", \"Не равно\", \"Заполнено\" или \"Не заполнено\".","type":{"types":["string"],"str_len":20}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение реквизита в условии.","choice_groups_elm":"elm","type":{"types":["cat.ПапкиЭлектронныхПисем","enm.caching_type","doc.work_centers_performance","enm.contact_information_types","enm.individual_legal","cat.nom_groups","enm.count_calculating_ways","enm.text_aligns","cat.production_params","cat.inserts","cat.price_groups","doc.credit_card_order","cat.nom_units","doc.planning_event","cch.predefined_elmnts","cat.currencies","enm.simple_complex_all","enm.offset_options","enm.open_directions","doc.nom_prices_setup","enm.lay_split_types","cat.characteristics","cat.projects","cat.individuals","cat.users","cat.insert_bind","enm.cutting_optimization_types","enm.angle_calculating_ways","cat.partner_bank_accounts","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","doc.debit_bank_order","cat.planning_keys","enm.specification_installation_methods","doc.registers_correction","cat.property_values_hierarchy","cat.formulas","enm.contract_kinds","cat.property_values","boolean","enm.buyers_order_states","cat.banks_qualifier","doc.credit_cash_order","doc.selling","enm.order_categories","cat.nom_prices_types","cat.organization_bank_accounts","cat.divisions","cat.destinations","enm.elm_types","enm.НазначенияЦветовыхГрупп","cat.parameters_keys","doc.purchase","enm.nom_types","cat.contact_information_kinds","cat.params_links","enm.contraction_options","cat.partners","enm.transfer_operations_options","doc.debit_cash_order","string","enm.inserts_types","enm.sz_line_types","cat.nom_kinds","enm.orientations","cat.organizations","date","cat.countries","enm.mutual_contract_settlements","enm.inset_attrs_options","cat.units","number","cat.work_centers","enm.gender","doc.work_centers_task","enm.impost_mount_options","cat.work_center_kinds","enm.plan_limit","doc.calc_order","enm.positions","doc.credit_bank_order","cat.cashboxes","enm.open_types","enm.cnn_types","cat.nom","enm.obj_delivery_states","cat.cnns","cat.furns","enm.inserts_glass_types","cat.cash_flow_articles","enm.vat_rates","enm.cnn_sides","cat.meta_ids","cat.contracts","cat.stores","cch.properties","cat.clrs","cat.users_acl"],"is_ref":true,"str_len":50,"date_part":"date","digits":10,"fraction_figits":0}}}}},"cachable":"ram"}},"cacc":{},"bp":{},"tsk":{},"syns_1с":["arcCCW","CH","RADIUS","Автор","АвтоУравнивание","Адрес","АдресБанка","АдресДоставки","АдресЭП","Аксессуар","Активная","Арт1Стеклопакет","Арт1ТолькоВертикальный","Арт2Стеклопакет","Арт2ТолькоВертикальный","Артикул","Атрибуты","БазоваяЕдиницаИзмерения","Банк","БанкДляРасчетов","Банки","БанковскиеСчета","БанковскиеСчетаКонтрагентов","БанковскиеСчетаОрганизаций","БанковскийСчет","БизнесПроцесс","БИКБанка","БИКБанкаДляРасчетов","Булево","Валюта","ВалютаВзаиморасчетов","ВалютаДенежныхСредств","ВалютаДокумента","ВалютаЦены","Валюты","ВариантАтрибутов","ВариантПереноса","ВариантСмещения","ВариантУкорочения","ВариантыАтрибутовВставок","ВариантыКрепленияИмпостов","ВводПоСтроке","ВедениеВзаиморасчетов","ВедениеВзаиморасчетовПоДоговорам","Ведомый","ВедущаяБаза","ВедущаяЗадача","ВедущаяПродукция","ВедущаяФормула","Ведущий","ВедущийМенеджер","ВедущийЭлемент","ВерсияДанных","Вес","Вид","ВидДоговора","Виден","ВидЗатрат","ВидНоменклатуры","ВидОперации","ВидРабот","ВидРабочегоЦентра","ВидСкидкиНаценки","ВидСчета","ВидТранспортногоСредства","ВидыДоговоровКонтрагентов","ВидыЗатрат","ВидыКонтактнойИнформации","ВидыНачисленийИУдержаний","ВидыНоменклатуры","ВидыОперацийЗаказПокупателя","ВидыОперацийЗаказПоставщику","ВидыОперацийПеремещениеЗапасов","ВидыРабочихЦентров","ВидыСкидокНаценок","ВидыТранспортныхСредств","Визуализация","Владелец","ВладелецДополнительныхЗначений","Владельцы","ВнутренниеЗаказы","ВремяИзменения","ВремяНачала","ВремяОкончания","ВремяСобытия","Всего","Вставка","ВходящееИсходящееСобытие","ВыборГруппИЭлементов","Выполнена","ВыпуклаяДуга","Высота","ВысотаМакс","ВысотаМин","ВысотаРучки","ВысотаРучкиМакс","ВысотаРучкиМин","ВысотаРучкиФиксирована","Глубина","Город","ГородБанка","ГородБанкаДляРасчетов","Готовность","ГрафикиРаботников","ГрафикРаботы","ГруппыФинансовогоУчетаНоменклатуры","ДаНет","Дата","ДатаДоставки","ДатаИзменения","ДатаНачала","ДатаОкончания","ДатаРождения","ДатаСобытия","ДебетКредит","Действие","ДержатьРезервБезОплатыОграниченноеВремя","ДеятельностьПрекращена","Длина","ДлинаКода","ДлинаМакс","ДлинаМин","ДлинаНомера","ДлинаПроема","ДниНедели","ДоговорКонтрагента","ДоговорыКонтрагентов","Документ.Расчет","ДокументУдостоверяющийЛичность","Долгота","ДоменноеИмяСервера","Доп","ДополнительныеРеквизиты","ДополнительныеРеквизитыИСведения","ДополнительныеСведения","ДопускаютсяНезамкнутыеКонтуры","ДопустимаяСуммаЗадолженности","ДопустимоеЧислоДнейЗадолженности","Доступен","ЕдиницаИзмерения","ЕдиницаПоКлассификатору","ЕдиницаХраненияОстатков","ЕдиницыИзмерения","Завершен","Завершение","ЗависимостиДополнительныхРеквизитов","Заголовок","Заказ","ЗаказПокупателя","ЗаказПоставщику","Закрыт","Запасы","Заполнения","ЗаполнятьОбязательно","Запуск","Значение","ЗначениеЗаполнения","Значения","ЗначенияПолей","ЗначенияПолейАдреса","ЗначенияСвойствОбъектов","ЗначенияСвойствОбъектовИерархия","Идентификатор","ИдентификаторПользователяИБ","ИдентификаторПользователяСервиса","ИдентификаторыОбъектовМетаданных","Иерархический","ИерархияГруппИЭлементов","Изделие","ИзмененЗдесь","ИмяПредопределенныхДанных","Инд","Индекс","ИндивидуальныйПредприниматель","ИНН","ИнтеграцияКешСсылок","ИнтеграцияПраваПользователей","ИнтеграцияСостоянияТранспорта","ИнтеграцияТипВыгрузки","ИнтеграцияТипКеширования","ИнтеграцияТипСвёртки","Исполнители","Исполнитель","ИспользоватьТовары","ИтогСебестоимость","Календари","КалендариGoogle","Календарь","Камеры","Касса","Кассы","КатегорииЗаказов","Категория","КлассификаторБанковРФ","КлассификаторЕдиницИзмерения","КлиентДилера","КлючиПланирования","КлючПараметров","КМарж","КМаржВнутр","КМаржМин","Код","КодАльфа2","КодАльфа3","КодИМНС","КодПоОКПО","КодЦветаДляСтанка","Количество","КоличествоСторон","Комментарий","Конструкции","Конструкция","КонтактнаяИнформация","КонтактныеЛица","КонтактныеЛицаКонтрагентов","Контрагент","Контрагенты","КонтролироватьСуммуЗадолженности","КонтролироватьЧислоДнейЗадолженности","КонцевыеКрепления","Координата","Координаты","КоординатыЗаполнений","КорректировкаРегистров","КоррСчет","КоррСчетБанка","КоррСчетБанкаДляРасчетов","Коэффициент","КоэффициентПотерь","КПП","Кратность","КратностьВзаиморасчетов","КрепитсяШтульп","КреплениеИмпостов","КреплениеШтульпа","Курс","КурсВзаиморасчетов","КурсыВалют","ЛеваяПравая","Листовые","Маржа","Марка","Масса","МассаМакс","МассаМин","МассаСтворкиМакс","МассаСтворкиМин","МатериалОперация","Материалы","МеждународноеСокращение","Менеджер","МестоРождения","МногострочныйРежим","МожноПоворачивать","Москитка","МоскиткаЦвет","Москитки","МощностиРЦ","Мощность","Набор","НаборСвойств","НаборФурнитуры","НаборыДополнительныхРеквизитовИСведений","Наименование","НаименованиеБанка","НаименованиеПолное","НаименованиеСокращенное","НалогообложениеНДС","Направление","НаПроем","НарядРЦ","НастройкиОткрывания","Наценка","НаценкаВнешн","Недействителен","НеполноеОткрывание","НеРаботаетВремяНачала","НеРаботаетВремяОкончания","Номенклатура","Номенклатура1","Номенклатура2","НоменклатураНабор","НоменклатурнаяГруппа","Номер","НомерSW","НомерВнутр","НомерКлиента","НомерКонтура","НомерОтдела","НомерСтроки","НомерСчета","НомерТелефона","НомерТелефонаБезКодов","ОбластиДоступаGoogle","Область","Объект","ОбъектДоступа","ОбъектыДоступа","Объем","ОбязательноеЗаполнение","ОграниченияСпецификации","ОкруглятьВБольшуюСторону","ОкруглятьКоличество","Описание","ОплатаОтПокупателяПлатежнойКартой","Организации","Организация","Ориентация","ОсновнаяВалюта","ОсновнаяСтатьяДвиженияДенежныхСредств","ОсновноаяКасса","ОсновноеКонтактноеЛицо","ОсновноеПредставлениеИмя","ОсновнойБанковскийСчет","ОсновнойДоговорКонтрагента","ОсновнойМенеджерПокупателя","ОсновнойПроект","ОснЦвет","ОсьПоворота","Отбор","Ответственный","ОтражатьВБухгалтерскомУчете","ОтражатьВНалоговомУчете","Отступы","Параметр","Параметры","ПараметрыВыбора","ПараметрыИзделия","ПараметрыОтбора","ПараметрыПрописиНаРусском","ПараметрыФурнитуры","ПарныйРаскрой","пзВариантыПереносаОпераций","пзВариантыСмещений","пзВариантыУкорочений","пзВизуализацияЭлементов","пзВставки","пзВыравниваниеТекста","пзКлючиПараметров","пзМаржинальныеКоэффициентыИСкидки","пзНазначенияЦветовыхГрупп","пзНаправлениеОткрывания","пзОграничениеПлана","пзОриентация","пзПараметрыПродукции","пзПростыеСложныеВсе","пзРайоныДоставки","пзСвязиПараметров","пзСоединения","пзСпособыРасчетаКоличества","пзСпособыРасчетаУгла","пзСпособыУстановкиСпецификации","пзСторонаСоединения","пзТипыВставок","пзТипыВставокСтеклопакета","пзТипыДеленияРаскладки","пзТипыОптимизацийРаскроя","пзТипыОткрывания","пзТипыРазмерныхЛиний","пзТипыСоединений","пзТипыЭлементов","пзФурнитура","пзЦвета","Планирование","ПлатежноеПоручениеВходящее","ПлатежноеПоручениеИсходящее","ПлатежныйКалендарь","Плотность","Площадь","ПлощадьМакс","ПлощадьМин","ПлощадьППМ","Поворачивать","ПоДоговоруВЦелом","Подразделение","ПодразделениеПроизводства","Подразделения","Подсказка","Подчиненый","ПоЗаказам","ПоКонтуру","Покупатель","Пол","ПолноеИмя","Положение","ПоложениеЭлемента","Получатель","ПолФизическихЛиц","Пользователи","ПометкаУдаления","ПорогОкругления","Порядок","ПорядокОкругления","Поставщик","ПоступлениеТоваровУслуг","ПоСчетам","ПоУмолчанию","Пояснение","Предоплата","ПредопределенныеЭлементы","Предопределенный","Представление","ПредставлениеИдентификатора","ПредставлениеОбъекта","ПредставлениеСписка","Префикс","Привязки","ПривязкиВставок","Принудительно","Приоритет","Припуск","ПриходныйКассовыйОрдер","Проведен","Продукция","Проект","Проекты","Происхождение","Пропорции","Процент","ПроцентАвтоматическихСкидок","ПроцентПредоплаты","ПроцентСкидкиНаценки","ПроцентСкидкиНаценкиВнутр","Прочее","Прямоугольный","ПутьSVG","РаботаетВремяНачала","РаботаетВремяОкончания","Работники","Работы","РабочиеЦентры","РабочийЦентр","Разделитель","Размер","Размер_B","РазмерМакс","РазмерМин","РазмерныеЛинии","РазмерФальца","РазмерФурнПаза","РазныеЦвета","Район","РасходныйКассовыйОрдер","Расценка","Расчет","РасчетныйСчет","РасчетыСКонтрагентами","РасширенныйРежим","РасшифровкаПлатежа","РеализацияТоваровУслуг","Регион","Реквизит","РеквизитДопУпорядочивания","Реквизиты","Родитель","РучкаНаСтороне","СвидетельствоДатаВыдачи","СвидетельствоКодОргана","СвидетельствоНаименованиеОргана","СвидетельствоСерияНомер","СВИФТБИК","Свойство","Связи","СвязиПараметровВыбора","СвязьПоТипу","Сделка","Себестоимость","Синоним","Система","СистемыПрофилей","СистемыФурнитуры","Скидка","СкидкаВнешн","СкидкиНаценки","Склад","Склады","СКомиссионером","СКомитентом","Скрыть","Сложный","Служебный","Смена","Смены","Смещение","Событие","СобытиеПланирования","Содержание","Соедин","СоединяемыеЭлементы","Соответствие","СоответствиеЦветов","СортировкаВЛистеКомплектации","Состояние","СостояниеТранспорта","СостоянияЗаданий","СостоянияЗаказовКлиентов","Сотрудник","Сотрудники","Спецификации","Спецификация","СпецификацияЗаполнений","Список","СПокупателем","СпособРасчетаКоличества","СпособРасчетаУгла","СпособУстановкиКурса","СпособыУстановкиКурсаВалюты","СПоставщиком","СрокДействия","Ссылка","СтавкаНДС","СтавкиНДС","СтандартнаяВысотаРучки","Старт","Стартован","СтатусМатериальныхЗатрат","СтатусыЗаказов","СтатусыМатериальныхЗатратНаПроизводство","СтатьиДвиженияДенежныхСредств","СтатьиЗатрат","СтатьяДвиженияДенежныхСредств","СтатьяЗатрат","Створка","СтворкиВРазныхПлоскостях","Стоимость","Сторона","Сторона1","Сторона2","СторонаСоединения","СторонаЭлемента","Страна","СтраныМира","СтраховойНомерПФР","стрНомер","Строка","СтрокаПодключения","СтруктурнаяЕдиница","стрЭлементы","Сумма","СуммаАвтоматическойСкидки","СуммаВзаиморасчетов","СуммаВключаетНДС","СуммаВнутр","СуммаДокумента","СуммаНДС","СуммаСНаценкой","СуммаУпр","Суффикс","СчетУчета","ТаблицаРегистров","ТабличнаяЧасть","ТабличныеЧасти","ТекстКорреспондента","ТекстНазначения","ТекстоваяСтрока","Телефон","Телефоны","ТелефоныБанка","Тип","ТипВставки","ТипВставкиСтеклопакета","ТипДеления","ТипДеленияРаскладки","ТипДенежныхСредств","ТипИсходногоДокумента","ТипНоменклатуры","ТиповойБлок","ТиповыеБлоки","ТипОптимизации","ТипОткрывания","ТипСоединения","ТипСчета","ТипЦен","ТипЦенВнутр","ТипЦенПрайс","ТипЦенСебестоимость","ТипыДенежныхСредств","ТипыКонтактнойИнформации","ТипыНалогообложенияНДС","ТипыНоменклатуры","ТипыСобытий","ТипыСтрокСоставаСпецификации","ТипыСтруктурныхЕдиниц","ТипыСчетов","ТипыЦенНоменклатуры","ТипЭлемента","Товары","Толщина","ТолщинаМакс","ТолщинаМин","ТолькоДляПрямыхПрофилей","ТолькоДляЦенообразования","ТочкаМаршрута","ТранспортныеСредства","УголКГоризонту","УголКГоризонтуМакс","УголКГоризонтуМин","УголМакс","УголМин","УголРеза1","УголРеза2","УдлинениеАрки","Узел1","Узел2","Укорочение","УкорочениеПоКонтуру","Управленческий","Условие","УсловныхИзделий","Услуги","УстанавливатьСпецификацию","УстановкаЦенНоменклатуры","УточнятьРайонГеокодером","УчитыватьНДС","Фаза","ФизическиеЛица","ФизическоеЛицо","Финиш","ФормироватьНомерПоНомеруВнутр","Формула","ФормулаВнешн","ФормулаВнутр","ФормулаПродажа","ФормулаРасчетаКурса","ФормулаУсловия","Формулы","Фурнитура","ФурнитураЦвет","ХарактерЗатрат","Характеристика","ХарактеристикаАксессуаров","ХарактеристикаНоменклатуры","ХарактеристикаПродукции","ХарактеристикиНоменклатуры","Цвет","Цвет1","Цвет2","ЦветRAL","Цвета","ЦветВРисовалке","ЦветИзнутри","ЦветоваяГруппа","ЦветоЦеновыеГруппы","ЦветСнаружи","Цена","ЦенаВключаетНДС","ЦенаВнутр","ЦеноваяГруппа","ЦеновыеГруппы","Центрировать","ЦеныНоменклатуры","Число","ЧислоДнейРезерваБезОплаты","Шаблон","Шаг","Ширина","ШиринаПилы","Широта","Шкала","Штуки","ШтульпБезимпСоед","Экземпляр","Элемент","Элемент1","Элемент2","Элементы","Эскиз","ЭтоАксессуар","ЭтоВодоотлив","ЭтоГруппа","ЭтоДополнительноеСведение","ЭтоНабор","ЭтоОсновнойЭлемент","ЭтоРаздвижка","ЭтоСоединение","ЭтоСтрокаЗаказа","ЭтоСтрокаНабора","ЭтоСтрокаОперации","ЭтоСтрокаОсновнойСпецификации","ЭтоСтрокаСочетанияНоменклатур","ЭтоТехоперация","ЭтоУслуга","ЮрЛицо","ЮрФизЛицо","Ячейка","Ячейки"],"syns_js":["arc_ccw","changed","arc_r","author","auto_align","address","bank_address","shipping_address","email_address","accessory","active","art1glass","art1vert","art2glass","art2vert","article","attributes","base_unit","bank","settlements_bank","banks","bank_accounts","partner_bank_accounts","organization_bank_accounts","bank_account","buisness_process","bank_bic","settlements_bank_bic","boolean","currency","settlements_currency","funds_currency","doc_currency","price_currency","currencies","attrs_option","transfer_option","offset_option","contraction_option","inset_attrs_options","impost_mount_options","input_by_string","mutual_settlements","mutual_contract_settlements","slave","leading_base","leading_task","leading_product","leading_formula","master","leading_manager","leading_elm","data_version","heft","kind","contract_kind","shown","cost_kind","nom_kind","transactions_kind","work_kind","work_center_kind","charges_discounts_kind","account_kind","motor_vehicle_kind","contract_kinds","costs_kinds","contact_information_kinds","charges_deductions_kinds","nom_kinds","transactions_kinds_buyers_order","transactions_kinds_purchase_order","transactions_kinds_stock_transfer","work_center_kinds","charges_discounts_kinds","motor_vehicle_kinds","visualization","owner","extra_values_owner","owners","internal_orders","change_time","begin_time","end_time","event_time","altogether","inset","inbound_outbound","choice_groups_elm","completed","arc_available","height","hmax","hmin","h_ruch","handle_height_max","handle_height_min","fix_ruch","depth","city","bank_city","settlements_bank_city","readiness","workers_schedules","worker_schedule","nom_groups","yes_no","date","shipping_date","change_date","start_date","expiration_date","birth_date","event_date","debit_credit","action","check_days_without_pay","activity_ceased","len","code_length","lmax","lmin","number_doc_len","aperture_len","week_days","contract","contracts","Документ.итРасчет","identification_document","longitude","server_domain_name","dop","extra_fields","properties","extra_properties","allow_open_cnn","allowable_debts_amount","allowable_debts_days","available","unit","qualifier_unit","storage_unit","nom_units","finished","completion","extra_fields_dependencies","caption","invoice","buyers_order","purchase_order","closed","inventories","glasses","mandatory","launch","value","fill_value","values","values_fields","address_fields","property_values","property_values_hierarchy","identifier","user_ib_uid","user_fresh_uid","meta_ids","hierarchical","group_hierarchy","product","changed_here","predefined_name","icounter","ind","individual_entrepreneur","inn","integration_links_cache","users_acl","obj_delivery_states","unload_type","caching_type","reduce_type","executors","executor","use_goods","first_cost_total","calendars","calendars_google","calendar","coffer","cashbox","cashboxes","order_categories","category","banks_qualifier","units","client_of_dealer","planning_keys","parameters_key","marginality","marginality_internal","marginality_min","id","alpha2","alpha3","imns_code","okpo","machine_tools_clr","quantity","side_count","note","constructions","cnstr","contact_information","contact_persons","contact_persons_partners","partner","partners","check_debts_amount","check_debts_days","end_mount","coordinate","coordinates","glass_coordinates","registers_correction","correspondent_account","bank_correspondent_account","settlements_bank_correspondent_account","coefficient","loss_factor","kpp","multiplicity","settlements_multiplicity","shtulp_fix_here","impost_fixation","shtulp_fixation","course","settlements_course","currency_courses","left_right","is_sandwich","margin","brand","weight","mmax","mmin","flap_weight_max","flap_weight_min","material_operation","materials","international_short","manager","birth_place","multiline_mode","can_rotate","mskt","clr_mskt","mosquito","work_centers_performance","performance","set","destination","furn_set","destinations","name","bank_name","name_full","name_short","vat","direction","on_aperture","work_centers_task","open_tunes","extra_charge","extra_charge_external","invalid","partial_opening","not_work_begin_time","not_work_end_time","nom","nom1","nom2","nom_set","nom_group","number_doc","number_cnt","number_internal","client_number","contour_number","number_division","row","account_number","phone_number","phone_without_codes","google_access_areas","area","obj","acl_obj","acl_objs","volume","mandatory_fields","specification_restrictions","rounding_in_a_big_way","rounding_quantity","definition","credit_card_order","organizations","organization","orientation","main_currency","main_cash_flow_article","main_cashbox","primary_contact","main_presentation_name","main_bank_account","main_contract","buyer_main_manager","main_project","default_clr","rotation_axis","selection","responsible","accounting_reflect","tax_accounting_reflect","offsets","param","params","choice_params","product_params","selection_params","parameters_russian_recipe","furn_params","double_cut","transfer_operations_options","offset_options","contraction_options","elm_visualization","inserts","text_aligns","parameters_keys","margin_coefficients","color_groups_destination","open_directions","plan_limit","orientations","production_params","simple_complex_all","delivery_areas","params_links","cnns","count_calculating_ways","angle_calculating_ways","specification_installation_methods","cnn_sides","inserts_types","inserts_glass_types","lay_split_types","cutting_optimization_types","open_types","sz_line_types","cnn_types","elm_types","furns","clrs","planning","debit_bank_order","credit_bank_order","calendar_payments","density","s","smax","smin","coloration_area","rotate","by_entire_contract","department","department_manufactory","divisions","tooltip","has_owners","by_orders","by_contour","is_buyer","sex","full_moniker","pos","positions","recipient","gender","users","_deleted","rounding_threshold","sorting","rounding_order","is_supplier","purchase","by_invoices","by_default","illustration","prepayment","predefined_elmnts","predefined","presentation","identifier_presentation","obj_presentation","list_presentation","prefix","bindings","insert_bind","forcibly","priority","overmeasure","debit_cash_order","posted","production","project","projects","origin","proportions","rate","discount_percent_automatic","prepayment_percent","discount_percent","discount_percent_internal","others","is_rectangular","svg_path","work_begin_time","work_end_time","workers","jobs","work_centers","work_center","delimiter","sz","sizeb","sz_max","sz_min","sz_lines","sizefaltz","sizefurn","varclr","delivery_area","credit_cash_order","pricing","calc_order","current_account","invoice_payments","extended_mode","payment_details","selling","region","field","sorting_field","fields","parent","handle_side","certificate_date_issue","certificate_authority_code","certificate_authority_name","certificate_series_number","swift","property","links","choice_links","choice_type","trans","first_cost","synonym","sys","sys_profile","sys_furn","discount","discount_external","charges_discounts","warehouse","stores","with_commission_agent","with_committent","hide","difficult","ancillary","work_shift","work_shifts","offset","event","planning_event","content","cnn","cnn_elmnts","conformity","clr_conformity","complete_list_sorting","state","obj_delivery_state","task_states","buyers_order_states","employee","staff","specifications","specification","glass_specification","list","with_buyer","count_calc_method","angle_calc_method","course_installation_method","course_installation_methods","with_supplier","validity","ref","vat_rate","vat_rates","handle_height_base","start","started","costs_material_feed","invoice_conditions","costs_material_feeds","cash_flow_articles","cost_items","cash_flow_article","cost_item","flap","var_layers","cost","side","sd1","sd2","cnn_side","elm_side","country","countries","pfr_number","number_str","string","connection_str","organizational_unit","elm_str","amount","discount_amount_automatic","amount_mutual","vat_included","amount_internal","doc_amount","vat_amount","amount_marged","amount_operation","suffix","account_accounting","registers_table","tabular_section","tabular_sections","correspondent_text","appointments_text","txt_row","phone","phone_numbers","bank_phone_numbers","type","insert_type","insert_glass_type","split_type","lay_split_type","cash_flow_type","original_doc_type","nom_type","base_block","base_blocks","cutting_optimization_type","open_type","cnn_type","account_type","price_type","price_type_internal","price_type_sale","price_type_first_cost","cash_flow_types","contact_information_types","vat_types","nom_types","event_types","specification_row_types","structural_unit_types","account_types","nom_prices_types","elm_type","goods","thickness","tmax","tmin","for_direct_profile_only","for_pricing_only","buisness_process_point","transport_means","angle_hor","ahmax","ahmin","amax","amin","alp1","alp2","arc_elongation","node1","node2","contraction","contraction_by_contour","managerial","condition","condition_products","services","set_specification","nom_prices_setup","specify_area_by_geocoder","vat_consider","phase","individuals","individual_person","finish","number_by_number_internal","formula","external_formula","internal_formula","sale_formula","course_calc_formula","condition_formula","formulas","furn","clr_furn","costs_character","characteristic","accessory_characteristic","nom_characteristic","product_characteristic","characteristics","clr","clr1","clr2","ral","colors","clr_str","clr_in","clr_group","color_price_groups","clr_out","price","vat_price_included","price_internal","price_group","price_groups","do_center","nom_prices","number","days_without_pay","template","step","width","saw_width","latitude","scale","is_pieces","shtulp_available","specimen","elm","elm1","elm2","elmnts","outline","is_accessory","is_drainage","is_folder","is_extra_property","is_set","is_main_elm","is_sliding","is_cnn","is_order_row","is_set_row","is_procedure_row","is_main_specification_row","is_nom_combinations_row","is_procedure","is_service","legal_person","individual_legal","cell","cells"]});

(function(){
const {EnumManager,CatManager,DocManager,LogManager,DataProcessorsManager,ChartOfCharacteristicManager,ChartOfAccountManager,InfoRegManager,AccumRegManager,BusinessProcessManager,TaskManager,CatObj, DocObj, TabularSectionRow, DataProcessorObj, RegisterRow, BusinessProcessObj, TaskObj} = $p.classes
const _define = Object.defineProperties

$p.enm.accumulation_record_type = new EnumManager('enm.accumulation_record_type')
$p.enm.inset_attrs_options = new EnumManager('enm.inset_attrs_options')
$p.enm.impost_mount_options = new EnumManager('enm.impost_mount_options')
$p.enm.mutual_contract_settlements = new EnumManager('enm.mutual_contract_settlements')
$p.enm.contract_kinds = new EnumManager('enm.contract_kinds')
$p.enm.obj_delivery_states = new EnumManager('enm.obj_delivery_states')
$p.enm.caching_type = new EnumManager('enm.caching_type')
$p.enm.order_categories = new EnumManager('enm.order_categories')
$p.enm.НазначенияЦветовыхГрупп = new EnumManager('enm.НазначенияЦветовыхГрупп')
$p.enm.transfer_operations_options = new EnumManager('enm.transfer_operations_options')
$p.enm.offset_options = new EnumManager('enm.offset_options')
$p.enm.contraction_options = new EnumManager('enm.contraction_options')
$p.enm.text_aligns = new EnumManager('enm.text_aligns')
$p.enm.open_directions = new EnumManager('enm.open_directions')
$p.enm.plan_limit = new EnumManager('enm.plan_limit')
$p.enm.orientations = new EnumManager('enm.orientations')
$p.enm.simple_complex_all = new EnumManager('enm.simple_complex_all')
$p.enm.count_calculating_ways = new EnumManager('enm.count_calculating_ways')
$p.enm.angle_calculating_ways = new EnumManager('enm.angle_calculating_ways')
$p.enm.specification_installation_methods = new EnumManager('enm.specification_installation_methods')
$p.enm.cnn_sides = new EnumManager('enm.cnn_sides')
$p.enm.inserts_types = new EnumManager('enm.inserts_types')
$p.enm.inserts_glass_types = new EnumManager('enm.inserts_glass_types')
$p.enm.lay_split_types = new EnumManager('enm.lay_split_types')
$p.enm.cutting_optimization_types = new EnumManager('enm.cutting_optimization_types')
$p.enm.open_types = new EnumManager('enm.open_types')
$p.enm.sz_line_types = new EnumManager('enm.sz_line_types')
$p.enm.cnn_types = new EnumManager('enm.cnn_types')
$p.enm.elm_types = new EnumManager('enm.elm_types')
$p.enm.positions = new EnumManager('enm.positions')
$p.enm.gender = new EnumManager('enm.gender')
$p.enm.buyers_order_states = new EnumManager('enm.buyers_order_states')
$p.enm.vat_rates = new EnumManager('enm.vat_rates')
$p.enm.contact_information_types = new EnumManager('enm.contact_information_types')
$p.enm.nom_types = new EnumManager('enm.nom_types')
$p.enm.individual_legal = new EnumManager('enm.individual_legal')

/**
* ### План видов характеристик ПредопределенныеЭлементы
* Хранит значения настроек и параметров подсистем
* @class CchPredefined_elmnts
* @extends CatObj
* @constructor 
*/
$p.CchPredefined_elmnts = class CchPredefined_elmnts extends CatObj{}
_define($p.CchPredefined_elmnts.prototype, {value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
synonym: {get: function(){return this._getter('synonym')}, set: function(v){this._setter('synonym',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
$p.CchPredefined_elmntsElmntsRow = class CchPredefined_elmntsElmntsRow extends TabularSectionRow{}
_define($p.CchPredefined_elmntsElmntsRow.prototype, {value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true}});
_define($p.CchPredefined_elmnts.prototype, { 'elmnts': {get: function(){return this._getter_ts('elmnts')}, set: function(v){this._setter_ts('elmnts',v)}, enumerable: true, configurable: true}})
$p.cch.predefined_elmnts = new ChartOfCharacteristicManager('cch.predefined_elmnts')

/**
* ### План видов характеристик ДополнительныеРеквизитыИСведения
* Дополнительные реквизиты и сведения
* @class CchProperties
* @extends CatObj
* @constructor 
*/
$p.CchProperties = class CchProperties extends CatObj{}
_define($p.CchProperties.prototype, {shown: {get: function(){return this._getter('shown')}, set: function(v){this._setter('shown',v)}, enumerable: true, configurable: true},
extra_values_owner: {get: function(){return this._getter('extra_values_owner')}, set: function(v){this._setter('extra_values_owner',v)}, enumerable: true, configurable: true},
available: {get: function(){return this._getter('available')}, set: function(v){this._setter('available',v)}, enumerable: true, configurable: true},
caption: {get: function(){return this._getter('caption')}, set: function(v){this._setter('caption',v)}, enumerable: true, configurable: true},
mandatory: {get: function(){return this._getter('mandatory')}, set: function(v){this._setter('mandatory',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
destination: {get: function(){return this._getter('destination')}, set: function(v){this._setter('destination',v)}, enumerable: true, configurable: true},
tooltip: {get: function(){return this._getter('tooltip')}, set: function(v){this._setter('tooltip',v)}, enumerable: true, configurable: true},
is_extra_property: {get: function(){return this._getter('is_extra_property')}, set: function(v){this._setter('is_extra_property',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
$p.CchPropertiesExtra_fields_dependenciesRow = class CchPropertiesExtra_fields_dependenciesRow extends TabularSectionRow{}
_define($p.CchPropertiesExtra_fields_dependenciesRow.prototype, {ЗависимоеСвойство: {get: function(){return this._getter('ЗависимоеСвойство')}, set: function(v){this._setter('ЗависимоеСвойство',v)}, enumerable: true, configurable: true},
field: {get: function(){return this._getter('field')}, set: function(v){this._setter('field',v)}, enumerable: true, configurable: true},
condition: {get: function(){return this._getter('condition')}, set: function(v){this._setter('condition',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CchProperties.prototype, { 'extra_fields_dependencies': {get: function(){return this._getter_ts('extra_fields_dependencies')}, set: function(v){this._setter_ts('extra_fields_dependencies',v)}, enumerable: true, configurable: true}})
$p.cch.properties = new ChartOfCharacteristicManager('cch.properties')

/**
* ### Справочник пзСвязиПараметров
* Подчиненные параметры
* @class CatParams_links
* @extends CatObj
* @constructor 
*/
$p.CatParams_links = class CatParams_links extends CatObj{}
_define($p.CatParams_links.prototype, {master: {get: function(){return this._getter('master')}, set: function(v){this._setter('master',v)}, enumerable: true, configurable: true},
slave: {get: function(){return this._getter('slave')}, set: function(v){this._setter('slave',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatParams_linksValuesRow = class CatParams_linksValuesRow extends TabularSectionRow{}
_define($p.CatParams_linksValuesRow.prototype, {value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true}});
_define($p.CatParams_links.prototype, { 'values': {get: function(){return this._getter_ts('values')}, set: function(v){this._setter_ts('values',v)}, enumerable: true, configurable: true}})
$p.cat.params_links = new CatManager('cat.params_links')

/**
* ### Справочник БанковскиеСчетаКонтрагентов
* Банковские счета сторонних контрагентов и физических лиц.
* @class CatPartner_bank_accounts
* @extends CatObj
* @constructor 
*/
$p.CatPartner_bank_accounts = class CatPartner_bank_accounts extends CatObj{}
_define($p.CatPartner_bank_accounts.prototype, {account_number: {get: function(){return this._getter('account_number')}, set: function(v){this._setter('account_number',v)}, enumerable: true, configurable: true},
bank: {get: function(){return this._getter('bank')}, set: function(v){this._setter('bank',v)}, enumerable: true, configurable: true},
settlements_bank: {get: function(){return this._getter('settlements_bank')}, set: function(v){this._setter('settlements_bank',v)}, enumerable: true, configurable: true},
correspondent_text: {get: function(){return this._getter('correspondent_text')}, set: function(v){this._setter('correspondent_text',v)}, enumerable: true, configurable: true},
appointments_text: {get: function(){return this._getter('appointments_text')}, set: function(v){this._setter('appointments_text',v)}, enumerable: true, configurable: true},
funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
bank_bic: {get: function(){return this._getter('bank_bic')}, set: function(v){this._setter('bank_bic',v)}, enumerable: true, configurable: true},
bank_name: {get: function(){return this._getter('bank_name')}, set: function(v){this._setter('bank_name',v)}, enumerable: true, configurable: true},
bank_correspondent_account: {get: function(){return this._getter('bank_correspondent_account')}, set: function(v){this._setter('bank_correspondent_account',v)}, enumerable: true, configurable: true},
bank_city: {get: function(){return this._getter('bank_city')}, set: function(v){this._setter('bank_city',v)}, enumerable: true, configurable: true},
bank_address: {get: function(){return this._getter('bank_address')}, set: function(v){this._setter('bank_address',v)}, enumerable: true, configurable: true},
bank_phone_numbers: {get: function(){return this._getter('bank_phone_numbers')}, set: function(v){this._setter('bank_phone_numbers',v)}, enumerable: true, configurable: true},
settlements_bank_bic: {get: function(){return this._getter('settlements_bank_bic')}, set: function(v){this._setter('settlements_bank_bic',v)}, enumerable: true, configurable: true},
settlements_bank_correspondent_account: {get: function(){return this._getter('settlements_bank_correspondent_account')}, set: function(v){this._setter('settlements_bank_correspondent_account',v)}, enumerable: true, configurable: true},
settlements_bank_city: {get: function(){return this._getter('settlements_bank_city')}, set: function(v){this._setter('settlements_bank_city',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.partner_bank_accounts = new CatManager('cat.partner_bank_accounts')

/**
* ### Справочник БанковскиеСчетаОрганизаций
* Банковские счета собственных организаций. 
* @class CatOrganization_bank_accounts
* @extends CatObj
* @constructor 
*/
$p.CatOrganization_bank_accounts = class CatOrganization_bank_accounts extends CatObj{}
_define($p.CatOrganization_bank_accounts.prototype, {bank: {get: function(){return this._getter('bank')}, set: function(v){this._setter('bank',v)}, enumerable: true, configurable: true},
bank_bic: {get: function(){return this._getter('bank_bic')}, set: function(v){this._setter('bank_bic',v)}, enumerable: true, configurable: true},
funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
account_number: {get: function(){return this._getter('account_number')}, set: function(v){this._setter('account_number',v)}, enumerable: true, configurable: true},
settlements_bank: {get: function(){return this._getter('settlements_bank')}, set: function(v){this._setter('settlements_bank',v)}, enumerable: true, configurable: true},
settlements_bank_bic: {get: function(){return this._getter('settlements_bank_bic')}, set: function(v){this._setter('settlements_bank_bic',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.organization_bank_accounts = new CatManager('cat.organization_bank_accounts')

/**
* ### Справочник ВидыРабочихЦентров
* Виды рабочих центров
* @class CatWork_center_kinds
* @extends CatObj
* @constructor 
*/
$p.CatWork_center_kinds = class CatWork_center_kinds extends CatObj{}
_define($p.CatWork_center_kinds.prototype, {predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.work_center_kinds = new CatManager('cat.work_center_kinds')

/**
* ### Справочник ЗначенияСвойствОбъектовИерархия
* Дополнительные значения (иерархия)
* @class CatProperty_values_hierarchy
* @extends CatObj
* @constructor 
*/
$p.CatProperty_values_hierarchy = class CatProperty_values_hierarchy extends CatObj{}
_define($p.CatProperty_values_hierarchy.prototype, {heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
ПолноеНаименование: {get: function(){return this._getter('ПолноеНаименование')}, set: function(v){this._setter('ПолноеНаименование',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.property_values_hierarchy = new CatManager('cat.property_values_hierarchy')

/**
* ### Справочник КлассификаторБанковРФ
* Классификатор банков РФ
* @class CatBanks_qualifier
* @extends CatObj
* @constructor 
*/
$p.CatBanks_qualifier = class CatBanks_qualifier extends CatObj{}
_define($p.CatBanks_qualifier.prototype, {correspondent_account: {get: function(){return this._getter('correspondent_account')}, set: function(v){this._setter('correspondent_account',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
address: {get: function(){return this._getter('address')}, set: function(v){this._setter('address',v)}, enumerable: true, configurable: true},
phone_numbers: {get: function(){return this._getter('phone_numbers')}, set: function(v){this._setter('phone_numbers',v)}, enumerable: true, configurable: true},
activity_ceased: {get: function(){return this._getter('activity_ceased')}, set: function(v){this._setter('activity_ceased',v)}, enumerable: true, configurable: true},
swift: {get: function(){return this._getter('swift')}, set: function(v){this._setter('swift',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.banks_qualifier = new CatManager('cat.banks_qualifier')

/**
* ### Справочник НаборыДополнительныхРеквизитовИСведений
* Наборы дополнительных реквизитов и сведений
* @class CatDestinations
* @extends CatObj
* @constructor 
*/
$p.CatDestinations = class CatDestinations extends CatObj{}
_define($p.CatDestinations.prototype, {КоличествоРеквизитов: {get: function(){return this._getter('КоличествоРеквизитов')}, set: function(v){this._setter('КоличествоРеквизитов',v)}, enumerable: true, configurable: true},
КоличествоСведений: {get: function(){return this._getter('КоличествоСведений')}, set: function(v){this._setter('КоличествоСведений',v)}, enumerable: true, configurable: true},
Используется: {get: function(){return this._getter('Используется')}, set: function(v){this._setter('Используется',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatDestinationsExtra_fieldsRow = class CatDestinationsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatDestinationsExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
_deleted: {get: function(){return this._getter('_deleted')}, set: function(v){this._setter('_deleted',v)}, enumerable: true, configurable: true}});
_define($p.CatDestinations.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.CatDestinationsExtra_propertiesRow = class CatDestinationsExtra_propertiesRow extends TabularSectionRow{}
_define($p.CatDestinationsExtra_propertiesRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
_deleted: {get: function(){return this._getter('_deleted')}, set: function(v){this._setter('_deleted',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
_deleted: {get: function(){return this._getter('_deleted')}, set: function(v){this._setter('_deleted',v)}, enumerable: true, configurable: true}});
_define($p.CatDestinations.prototype, { 'extra_properties': {get: function(){return this._getter_ts('extra_properties')}, set: function(v){this._setter_ts('extra_properties',v)}, enumerable: true, configurable: true}})
$p.cat.destinations = new CatManager('cat.destinations')

/**
* ### Справочник РабочиеЦентры
* Рабочие центры
* @class CatWork_centers
* @extends CatObj
* @constructor 
*/
$p.CatWork_centers = class CatWork_centers extends CatObj{}
_define($p.CatWork_centers.prototype, {work_center_kind: {get: function(){return this._getter('work_center_kind')}, set: function(v){this._setter('work_center_kind',v)}, enumerable: true, configurable: true},
КоэффициентВремениРаботы: {get: function(){return this._getter('КоэффициентВремениРаботы')}, set: function(v){this._setter('КоэффициентВремениРаботы',v)}, enumerable: true, configurable: true},
МаксимальнаяЗагрузка: {get: function(){return this._getter('МаксимальнаяЗагрузка')}, set: function(v){this._setter('МаксимальнаяЗагрузка',v)}, enumerable: true, configurable: true},
calendar: {get: function(){return this._getter('calendar')}, set: function(v){this._setter('calendar',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.work_centers = new CatManager('cat.work_centers')

/**
* ### Справочник СтраныМира
* Страны мира
* @class CatCountries
* @extends CatObj
* @constructor 
*/
$p.CatCountries = class CatCountries extends CatObj{}
_define($p.CatCountries.prototype, {name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
alpha2: {get: function(){return this._getter('alpha2')}, set: function(v){this._setter('alpha2',v)}, enumerable: true, configurable: true},
alpha3: {get: function(){return this._getter('alpha3')}, set: function(v){this._setter('alpha3',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.countries = new CatManager('cat.countries')

/**
* ### Справочник Формулы
* Формулы пользователя, для выполнения при расчете спецификаций в справочниках Вставки, Соединения, Фурнитура и регистре Корректировки спецификации
* @class CatFormulas
* @extends CatObj
* @constructor 
*/
$p.CatFormulas = class CatFormulas extends CatObj{}
_define($p.CatFormulas.prototype, {formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
leading_formula: {get: function(){return this._getter('leading_formula')}, set: function(v){this._setter('leading_formula',v)}, enumerable: true, configurable: true},
condition_formula: {get: function(){return this._getter('condition_formula')}, set: function(v){this._setter('condition_formula',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
template: {get: function(){return this._getter('template')}, set: function(v){this._setter('template',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatFormulasParamsRow = class CatFormulasParamsRow extends TabularSectionRow{}
_define($p.CatFormulasParamsRow.prototype, {param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatFormulas.prototype, { 'params': {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true}})
$p.cat.formulas = new CatManager('cat.formulas')

/**
* ### Справочник пзВизуализацияЭлементов
* Строки svg для рисования петель, ручек и графических примитивов
* @class CatElm_visualization
* @extends CatObj
* @constructor 
*/
$p.CatElm_visualization = class CatElm_visualization extends CatObj{}
_define($p.CatElm_visualization.prototype, {svg_path: {get: function(){return this._getter('svg_path')}, set: function(v){this._setter('svg_path',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
attributes: {get: function(){return this._getter('attributes')}, set: function(v){this._setter('attributes',v)}, enumerable: true, configurable: true},
rotate: {get: function(){return this._getter('rotate')}, set: function(v){this._setter('rotate',v)}, enumerable: true, configurable: true},
offset: {get: function(){return this._getter('offset')}, set: function(v){this._setter('offset',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
elm_side: {get: function(){return this._getter('elm_side')}, set: function(v){this._setter('elm_side',v)}, enumerable: true, configurable: true},
cx: {get: function(){return this._getter('cx')}, set: function(v){this._setter('cx',v)}, enumerable: true, configurable: true},
cy: {get: function(){return this._getter('cy')}, set: function(v){this._setter('cy',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.elm_visualization = new CatManager('cat.elm_visualization')

/**
* ### Справочник Валюты
* Валюты, используемые при расчетах
* @class CatCurrencies
* @extends CatObj
* @constructor 
*/
$p.CatCurrencies = class CatCurrencies extends CatObj{}
_define($p.CatCurrencies.prototype, {name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
extra_charge: {get: function(){return this._getter('extra_charge')}, set: function(v){this._setter('extra_charge',v)}, enumerable: true, configurable: true},
main_currency: {get: function(){return this._getter('main_currency')}, set: function(v){this._setter('main_currency',v)}, enumerable: true, configurable: true},
parameters_russian_recipe: {get: function(){return this._getter('parameters_russian_recipe')}, set: function(v){this._setter('parameters_russian_recipe',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.currencies = new CatManager('cat.currencies')

/**
* ### Справочник ВидыКонтактнойИнформации
* Виды контактной информации
* @class CatContact_information_kinds
* @extends CatObj
* @constructor 
*/
$p.CatContact_information_kinds = class CatContact_information_kinds extends CatObj{}
_define($p.CatContact_information_kinds.prototype, {ВидПоляДругое: {get: function(){return this._getter('ВидПоляДругое')}, set: function(v){this._setter('ВидПоляДругое',v)}, enumerable: true, configurable: true},
Используется: {get: function(){return this._getter('Используется')}, set: function(v){this._setter('Используется',v)}, enumerable: true, configurable: true},
mandatory_fields: {get: function(){return this._getter('mandatory_fields')}, set: function(v){this._setter('mandatory_fields',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.contact_information_kinds = new CatManager('cat.contact_information_kinds')

/**
* ### Справочник ВидыНоменклатуры
* Виды номенклатуры
* @class CatNom_kinds
* @extends CatObj
* @constructor 
*/
$p.CatNom_kinds = class CatNom_kinds extends CatObj{}
_define($p.CatNom_kinds.prototype, {nom_type: {get: function(){return this._getter('nom_type')}, set: function(v){this._setter('nom_type',v)}, enumerable: true, configurable: true},
НаборСвойствНоменклатура: {get: function(){return this._getter('НаборСвойствНоменклатура')}, set: function(v){this._setter('НаборСвойствНоменклатура',v)}, enumerable: true, configurable: true},
НаборСвойствХарактеристика: {get: function(){return this._getter('НаборСвойствХарактеристика')}, set: function(v){this._setter('НаборСвойствХарактеристика',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.nom_kinds = new CatManager('cat.nom_kinds')

/**
* ### Справочник ДоговорыКонтрагентов
* Перечень договоров, заключенных с контрагентами
* @class CatContracts
* @extends CatObj
* @constructor 
*/
$p.CatContracts = class CatContracts extends CatObj{}
_define($p.CatContracts.prototype, {settlements_currency: {get: function(){return this._getter('settlements_currency')}, set: function(v){this._setter('settlements_currency',v)}, enumerable: true, configurable: true},
mutual_settlements: {get: function(){return this._getter('mutual_settlements')}, set: function(v){this._setter('mutual_settlements',v)}, enumerable: true, configurable: true},
contract_kind: {get: function(){return this._getter('contract_kind')}, set: function(v){this._setter('contract_kind',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
check_days_without_pay: {get: function(){return this._getter('check_days_without_pay')}, set: function(v){this._setter('check_days_without_pay',v)}, enumerable: true, configurable: true},
allowable_debts_amount: {get: function(){return this._getter('allowable_debts_amount')}, set: function(v){this._setter('allowable_debts_amount',v)}, enumerable: true, configurable: true},
allowable_debts_days: {get: function(){return this._getter('allowable_debts_days')}, set: function(v){this._setter('allowable_debts_days',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
check_debts_amount: {get: function(){return this._getter('check_debts_amount')}, set: function(v){this._setter('check_debts_amount',v)}, enumerable: true, configurable: true},
check_debts_days: {get: function(){return this._getter('check_debts_days')}, set: function(v){this._setter('check_debts_days',v)}, enumerable: true, configurable: true},
number_doc: {get: function(){return this._getter('number_doc')}, set: function(v){this._setter('number_doc',v)}, enumerable: true, configurable: true},
organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
main_cash_flow_article: {get: function(){return this._getter('main_cash_flow_article')}, set: function(v){this._setter('main_cash_flow_article',v)}, enumerable: true, configurable: true},
main_project: {get: function(){return this._getter('main_project')}, set: function(v){this._setter('main_project',v)}, enumerable: true, configurable: true},
accounting_reflect: {get: function(){return this._getter('accounting_reflect')}, set: function(v){this._setter('accounting_reflect',v)}, enumerable: true, configurable: true},
tax_accounting_reflect: {get: function(){return this._getter('tax_accounting_reflect')}, set: function(v){this._setter('tax_accounting_reflect',v)}, enumerable: true, configurable: true},
prepayment_percent: {get: function(){return this._getter('prepayment_percent')}, set: function(v){this._setter('prepayment_percent',v)}, enumerable: true, configurable: true},
validity: {get: function(){return this._getter('validity')}, set: function(v){this._setter('validity',v)}, enumerable: true, configurable: true},
vat_included: {get: function(){return this._getter('vat_included')}, set: function(v){this._setter('vat_included',v)}, enumerable: true, configurable: true},
price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
vat_consider: {get: function(){return this._getter('vat_consider')}, set: function(v){this._setter('vat_consider',v)}, enumerable: true, configurable: true},
days_without_pay: {get: function(){return this._getter('days_without_pay')}, set: function(v){this._setter('days_without_pay',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.contracts = new CatManager('cat.contracts')

/**
* ### Справочник ЕдиницыИзмерения
* Перечень единиц измерения номенклатуры и номенклатурных групп
* @class CatNom_units
* @extends CatObj
* @constructor 
*/
$p.CatNom_units = class CatNom_units extends CatObj{}
_define($p.CatNom_units.prototype, {qualifier_unit: {get: function(){return this._getter('qualifier_unit')}, set: function(v){this._setter('qualifier_unit',v)}, enumerable: true, configurable: true},
heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
volume: {get: function(){return this._getter('volume')}, set: function(v){this._setter('volume',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
rounding_threshold: {get: function(){return this._getter('rounding_threshold')}, set: function(v){this._setter('rounding_threshold',v)}, enumerable: true, configurable: true},
ПредупреждатьОНецелыхМестах: {get: function(){return this._getter('ПредупреждатьОНецелыхМестах')}, set: function(v){this._setter('ПредупреждатьОНецелыхМестах',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.nom_units = new CatManager('cat.nom_units')

/**
* ### Справочник ЗначенияСвойствОбъектов
* Дополнительные значения
* @class CatProperty_values
* @extends CatObj
* @constructor 
*/
$p.CatProperty_values = class CatProperty_values extends CatObj{}
_define($p.CatProperty_values.prototype, {heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
ПолноеНаименование: {get: function(){return this._getter('ПолноеНаименование')}, set: function(v){this._setter('ПолноеНаименование',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.property_values = new CatManager('cat.property_values')

/**
* ### Справочник ИдентификаторыОбъектовМетаданных
* Идентификаторы объектов метаданных для использования в базе данных.
* @class CatMeta_ids
* @extends CatObj
* @constructor 
*/
$p.CatMeta_ids = class CatMeta_ids extends CatObj{}
_define($p.CatMeta_ids.prototype, {full_moniker: {get: function(){return this._getter('full_moniker')}, set: function(v){this._setter('full_moniker',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.meta_ids = new CatManager('cat.meta_ids')

/**
* ### Справочник Кассы
* Список мест фактического хранения и движения наличных денежных средств предприятия. Кассы разделены по организациям и валютам денежных средств. 
* @class CatCashboxes
* @extends CatObj
* @constructor 
*/
$p.CatCashboxes = class CatCashboxes extends CatObj{}
_define($p.CatCashboxes.prototype, {funds_currency: {get: function(){return this._getter('funds_currency')}, set: function(v){this._setter('funds_currency',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
current_account: {get: function(){return this._getter('current_account')}, set: function(v){this._setter('current_account',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.cat.cashboxes = new CatManager('cat.cashboxes')

/**
* ### Справочник КлассификаторЕдиницИзмерения
* Классификатор единиц измерения
* @class CatUnits
* @extends CatObj
* @constructor 
*/
$p.CatUnits = class CatUnits extends CatObj{}
_define($p.CatUnits.prototype, {name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
international_short: {get: function(){return this._getter('international_short')}, set: function(v){this._setter('international_short',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.units = new CatManager('cat.units')

/**
* ### Справочник Контрагенты
* Список юридических или физических лиц клиентов (поставщиков, покупателей).
* @class CatPartners
* @extends CatObj
* @constructor 
*/
$p.CatPartners = class CatPartners extends CatObj{}
_define($p.CatPartners.prototype, {name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
main_bank_account: {get: function(){return this._getter('main_bank_account')}, set: function(v){this._setter('main_bank_account',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
kpp: {get: function(){return this._getter('kpp')}, set: function(v){this._setter('kpp',v)}, enumerable: true, configurable: true},
okpo: {get: function(){return this._getter('okpo')}, set: function(v){this._setter('okpo',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
individual_legal: {get: function(){return this._getter('individual_legal')}, set: function(v){this._setter('individual_legal',v)}, enumerable: true, configurable: true},
main_contract: {get: function(){return this._getter('main_contract')}, set: function(v){this._setter('main_contract',v)}, enumerable: true, configurable: true},
identification_document: {get: function(){return this._getter('identification_document')}, set: function(v){this._setter('identification_document',v)}, enumerable: true, configurable: true},
buyer_main_manager: {get: function(){return this._getter('buyer_main_manager')}, set: function(v){this._setter('buyer_main_manager',v)}, enumerable: true, configurable: true},
is_buyer: {get: function(){return this._getter('is_buyer')}, set: function(v){this._setter('is_buyer',v)}, enumerable: true, configurable: true},
is_supplier: {get: function(){return this._getter('is_supplier')}, set: function(v){this._setter('is_supplier',v)}, enumerable: true, configurable: true},
primary_contact: {get: function(){return this._getter('primary_contact')}, set: function(v){this._setter('primary_contact',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatPartnersContact_informationRow = class CatPartnersContact_informationRow extends TabularSectionRow{}
_define($p.CatPartnersContact_informationRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true}});
_define($p.CatPartners.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.CatPartnersExtra_fieldsRow = class CatPartnersExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatPartnersExtra_fieldsRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatPartners.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.partners = new CatManager('cat.partners')

/**
* ### Справочник Номенклатура
* Перечень товаров, продукции, материалов, полуфабрикатов, тары, услуг
* @class CatNom
* @extends CatObj
* @constructor 
*/
$p.CatNom = class CatNom extends CatObj{}
_define($p.CatNom.prototype, {article: {get: function(){return this._getter('article')}, set: function(v){this._setter('article',v)}, enumerable: true, configurable: true},
name_full: {get: function(){return this._getter('name_full')}, set: function(v){this._setter('name_full',v)}, enumerable: true, configurable: true},
base_unit: {get: function(){return this._getter('base_unit')}, set: function(v){this._setter('base_unit',v)}, enumerable: true, configurable: true},
storage_unit: {get: function(){return this._getter('storage_unit')}, set: function(v){this._setter('storage_unit',v)}, enumerable: true, configurable: true},
nom_kind: {get: function(){return this._getter('nom_kind')}, set: function(v){this._setter('nom_kind',v)}, enumerable: true, configurable: true},
nom_group: {get: function(){return this._getter('nom_group')}, set: function(v){this._setter('nom_group',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
sizefurn: {get: function(){return this._getter('sizefurn')}, set: function(v){this._setter('sizefurn',v)}, enumerable: true, configurable: true},
sizefaltz: {get: function(){return this._getter('sizefaltz')}, set: function(v){this._setter('sizefaltz',v)}, enumerable: true, configurable: true},
density: {get: function(){return this._getter('density')}, set: function(v){this._setter('density',v)}, enumerable: true, configurable: true},
volume: {get: function(){return this._getter('volume')}, set: function(v){this._setter('volume',v)}, enumerable: true, configurable: true},
arc_elongation: {get: function(){return this._getter('arc_elongation')}, set: function(v){this._setter('arc_elongation',v)}, enumerable: true, configurable: true},
loss_factor: {get: function(){return this._getter('loss_factor')}, set: function(v){this._setter('loss_factor',v)}, enumerable: true, configurable: true},
rounding_quantity: {get: function(){return this._getter('rounding_quantity')}, set: function(v){this._setter('rounding_quantity',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
cutting_optimization_type: {get: function(){return this._getter('cutting_optimization_type')}, set: function(v){this._setter('cutting_optimization_type',v)}, enumerable: true, configurable: true},
saw_width: {get: function(){return this._getter('saw_width')}, set: function(v){this._setter('saw_width',v)}, enumerable: true, configurable: true},
double_cut: {get: function(){return this._getter('double_cut')}, set: function(v){this._setter('double_cut',v)}, enumerable: true, configurable: true},
overmeasure: {get: function(){return this._getter('overmeasure')}, set: function(v){this._setter('overmeasure',v)}, enumerable: true, configurable: true},
coloration_area: {get: function(){return this._getter('coloration_area')}, set: function(v){this._setter('coloration_area',v)}, enumerable: true, configurable: true},
pricing: {get: function(){return this._getter('pricing')}, set: function(v){this._setter('pricing',v)}, enumerable: true, configurable: true},
visualization: {get: function(){return this._getter('visualization')}, set: function(v){this._setter('visualization',v)}, enumerable: true, configurable: true},
complete_list_sorting: {get: function(){return this._getter('complete_list_sorting')}, set: function(v){this._setter('complete_list_sorting',v)}, enumerable: true, configurable: true},
is_accessory: {get: function(){return this._getter('is_accessory')}, set: function(v){this._setter('is_accessory',v)}, enumerable: true, configurable: true},
is_procedure: {get: function(){return this._getter('is_procedure')}, set: function(v){this._setter('is_procedure',v)}, enumerable: true, configurable: true},
is_service: {get: function(){return this._getter('is_service')}, set: function(v){this._setter('is_service',v)}, enumerable: true, configurable: true},
is_pieces: {get: function(){return this._getter('is_pieces')}, set: function(v){this._setter('is_pieces',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatNomExtra_fieldsRow = class CatNomExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatNomExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatNom.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.nom = new CatManager('cat.nom')

/**
* ### Справочник Организации
* Организации
* @class CatOrganizations
* @extends CatObj
* @constructor 
*/
$p.CatOrganizations = class CatOrganizations extends CatObj{}
_define($p.CatOrganizations.prototype, {prefix: {get: function(){return this._getter('prefix')}, set: function(v){this._setter('prefix',v)}, enumerable: true, configurable: true},
individual_legal: {get: function(){return this._getter('individual_legal')}, set: function(v){this._setter('individual_legal',v)}, enumerable: true, configurable: true},
individual_entrepreneur: {get: function(){return this._getter('individual_entrepreneur')}, set: function(v){this._setter('individual_entrepreneur',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
kpp: {get: function(){return this._getter('kpp')}, set: function(v){this._setter('kpp',v)}, enumerable: true, configurable: true},
main_bank_account: {get: function(){return this._getter('main_bank_account')}, set: function(v){this._setter('main_bank_account',v)}, enumerable: true, configurable: true},
main_cashbox: {get: function(){return this._getter('main_cashbox')}, set: function(v){this._setter('main_cashbox',v)}, enumerable: true, configurable: true},
certificate_series_number: {get: function(){return this._getter('certificate_series_number')}, set: function(v){this._setter('certificate_series_number',v)}, enumerable: true, configurable: true},
certificate_date_issue: {get: function(){return this._getter('certificate_date_issue')}, set: function(v){this._setter('certificate_date_issue',v)}, enumerable: true, configurable: true},
certificate_authority_name: {get: function(){return this._getter('certificate_authority_name')}, set: function(v){this._setter('certificate_authority_name',v)}, enumerable: true, configurable: true},
certificate_authority_code: {get: function(){return this._getter('certificate_authority_code')}, set: function(v){this._setter('certificate_authority_code',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatOrganizationsContact_informationRow = class CatOrganizationsContact_informationRow extends TabularSectionRow{}
_define($p.CatOrganizationsContact_informationRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true},
ДействуетС: {get: function(){return this._getter('ДействуетС')}, set: function(v){this._setter('ДействуетС',v)}, enumerable: true, configurable: true}});
_define($p.CatOrganizations.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.CatOrganizationsExtra_fieldsRow = class CatOrganizationsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatOrganizationsExtra_fieldsRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true},
ДействуетС: {get: function(){return this._getter('ДействуетС')}, set: function(v){this._setter('ДействуетС',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatOrganizations.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.organizations = new CatManager('cat.organizations')

/**
* ### Справочник пзВставки
* Армирование, пленки, вставки - дополнение спецификации, которое зависит от одного элемента
* @class CatInserts
* @extends CatObj
* @constructor 
*/
$p.CatInserts = class CatInserts extends CatObj{}
_define($p.CatInserts.prototype, {insert_type: {get: function(){return this._getter('insert_type')}, set: function(v){this._setter('insert_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
priority: {get: function(){return this._getter('priority')}, set: function(v){this._setter('priority',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
hmin: {get: function(){return this._getter('hmin')}, set: function(v){this._setter('hmin',v)}, enumerable: true, configurable: true},
hmax: {get: function(){return this._getter('hmax')}, set: function(v){this._setter('hmax',v)}, enumerable: true, configurable: true},
smin: {get: function(){return this._getter('smin')}, set: function(v){this._setter('smin',v)}, enumerable: true, configurable: true},
smax: {get: function(){return this._getter('smax')}, set: function(v){this._setter('smax',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
mmin: {get: function(){return this._getter('mmin')}, set: function(v){this._setter('mmin',v)}, enumerable: true, configurable: true},
mmax: {get: function(){return this._getter('mmax')}, set: function(v){this._setter('mmax',v)}, enumerable: true, configurable: true},
insert_glass_type: {get: function(){return this._getter('insert_glass_type')}, set: function(v){this._setter('insert_glass_type',v)}, enumerable: true, configurable: true},
impost_fixation: {get: function(){return this._getter('impost_fixation')}, set: function(v){this._setter('impost_fixation',v)}, enumerable: true, configurable: true},
shtulp_fixation: {get: function(){return this._getter('shtulp_fixation')}, set: function(v){this._setter('shtulp_fixation',v)}, enumerable: true, configurable: true},
can_rotate: {get: function(){return this._getter('can_rotate')}, set: function(v){this._setter('can_rotate',v)}, enumerable: true, configurable: true},
sizeb: {get: function(){return this._getter('sizeb')}, set: function(v){this._setter('sizeb',v)}, enumerable: true, configurable: true},
clr_group: {get: function(){return this._getter('clr_group')}, set: function(v){this._setter('clr_group',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatInsertsSpecificationRow = class CatInsertsSpecificationRow extends TabularSectionRow{}
_define($p.CatInsertsSpecificationRow.prototype, {elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
count_calc_method: {get: function(){return this._getter('count_calc_method')}, set: function(v){this._setter('count_calc_method',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
smin: {get: function(){return this._getter('smin')}, set: function(v){this._setter('smin',v)}, enumerable: true, configurable: true},
smax: {get: function(){return this._getter('smax')}, set: function(v){this._setter('smax',v)}, enumerable: true, configurable: true},
step: {get: function(){return this._getter('step')}, set: function(v){this._setter('step',v)}, enumerable: true, configurable: true},
УголШага: {get: function(){return this._getter('УголШага')}, set: function(v){this._setter('УголШага',v)}, enumerable: true, configurable: true},
offsets: {get: function(){return this._getter('offsets')}, set: function(v){this._setter('offsets',v)}, enumerable: true, configurable: true},
do_center: {get: function(){return this._getter('do_center')}, set: function(v){this._setter('do_center',v)}, enumerable: true, configurable: true},
attrs_option: {get: function(){return this._getter('attrs_option')}, set: function(v){this._setter('attrs_option',v)}, enumerable: true, configurable: true},
end_mount: {get: function(){return this._getter('end_mount')}, set: function(v){this._setter('end_mount',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
is_main_elm: {get: function(){return this._getter('is_main_elm')}, set: function(v){this._setter('is_main_elm',v)}, enumerable: true, configurable: true}});
_define($p.CatInserts.prototype, { 'specification': {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true}})
$p.CatInsertsSelection_paramsRow = class CatInsertsSelection_paramsRow extends TabularSectionRow{}
_define($p.CatInsertsSelection_paramsRow.prototype, {elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
count_calc_method: {get: function(){return this._getter('count_calc_method')}, set: function(v){this._setter('count_calc_method',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
smin: {get: function(){return this._getter('smin')}, set: function(v){this._setter('smin',v)}, enumerable: true, configurable: true},
smax: {get: function(){return this._getter('smax')}, set: function(v){this._setter('smax',v)}, enumerable: true, configurable: true},
step: {get: function(){return this._getter('step')}, set: function(v){this._setter('step',v)}, enumerable: true, configurable: true},
УголШага: {get: function(){return this._getter('УголШага')}, set: function(v){this._setter('УголШага',v)}, enumerable: true, configurable: true},
offsets: {get: function(){return this._getter('offsets')}, set: function(v){this._setter('offsets',v)}, enumerable: true, configurable: true},
do_center: {get: function(){return this._getter('do_center')}, set: function(v){this._setter('do_center',v)}, enumerable: true, configurable: true},
attrs_option: {get: function(){return this._getter('attrs_option')}, set: function(v){this._setter('attrs_option',v)}, enumerable: true, configurable: true},
end_mount: {get: function(){return this._getter('end_mount')}, set: function(v){this._setter('end_mount',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
is_main_elm: {get: function(){return this._getter('is_main_elm')}, set: function(v){this._setter('is_main_elm',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatInserts.prototype, { 'selection_params': {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true}})
$p.cat.inserts = new CatManager('cat.inserts')

/**
* ### Справочник пзКлючиПараметров
* Списки пар {Параметр:Значение} для фильтрации в подсистемах корректировки спецификации и ценообразования

* @class CatParameters_keys
* @extends CatObj
* @constructor 
*/
$p.CatParameters_keys = class CatParameters_keys extends CatObj{}
_define($p.CatParameters_keys.prototype, {КоличествоПараметров: {get: function(){return this._getter('КоличествоПараметров')}, set: function(v){this._setter('КоличествоПараметров',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatParameters_keysParamsRow = class CatParameters_keysParamsRow extends TabularSectionRow{}
_define($p.CatParameters_keysParamsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatParameters_keys.prototype, { 'params': {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true}})
$p.cat.parameters_keys = new CatManager('cat.parameters_keys')

/**
* ### Справочник пзПараметрыПродукции
* Настройки системы профилей и фурнитуры
* @class CatProduction_params
* @extends CatObj
* @constructor 
*/
$p.CatProduction_params = class CatProduction_params extends CatObj{}
_define($p.CatProduction_params.prototype, {default_clr: {get: function(){return this._getter('default_clr')}, set: function(v){this._setter('default_clr',v)}, enumerable: true, configurable: true},
allow_open_cnn: {get: function(){return this._getter('allow_open_cnn')}, set: function(v){this._setter('allow_open_cnn',v)}, enumerable: true, configurable: true},
clr_group: {get: function(){return this._getter('clr_group')}, set: function(v){this._setter('clr_group',v)}, enumerable: true, configurable: true},
is_drainage: {get: function(){return this._getter('is_drainage')}, set: function(v){this._setter('is_drainage',v)}, enumerable: true, configurable: true},
tmin: {get: function(){return this._getter('tmin')}, set: function(v){this._setter('tmin',v)}, enumerable: true, configurable: true},
tmax: {get: function(){return this._getter('tmax')}, set: function(v){this._setter('tmax',v)}, enumerable: true, configurable: true},
lay_split_type: {get: function(){return this._getter('lay_split_type')}, set: function(v){this._setter('lay_split_type',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatProduction_paramsElmntsRow = class CatProduction_paramsElmntsRow extends TabularSectionRow{}
_define($p.CatProduction_paramsElmntsRow.prototype, {by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true}});
_define($p.CatProduction_params.prototype, { 'elmnts': {get: function(){return this._getter_ts('elmnts')}, set: function(v){this._setter_ts('elmnts',v)}, enumerable: true, configurable: true}})
$p.CatProduction_paramsProductionRow = class CatProduction_paramsProductionRow extends TabularSectionRow{}
_define($p.CatProduction_paramsProductionRow.prototype, {by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatProduction_params.prototype, { 'production': {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true}})
$p.CatProduction_paramsProduct_paramsRow = class CatProduction_paramsProduct_paramsRow extends TabularSectionRow{}
_define($p.CatProduction_paramsProduct_paramsRow.prototype, {by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true}});
_define($p.CatProduction_params.prototype, { 'product_params': {get: function(){return this._getter_ts('product_params')}, set: function(v){this._setter_ts('product_params',v)}, enumerable: true, configurable: true}})
$p.CatProduction_paramsFurn_paramsRow = class CatProduction_paramsFurn_paramsRow extends TabularSectionRow{}
_define($p.CatProduction_paramsFurn_paramsRow.prototype, {by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true}});
_define($p.CatProduction_params.prototype, { 'furn_params': {get: function(){return this._getter_ts('furn_params')}, set: function(v){this._setter_ts('furn_params',v)}, enumerable: true, configurable: true}})
$p.CatProduction_paramsBase_blocksRow = class CatProduction_paramsBase_blocksRow extends TabularSectionRow{}
_define($p.CatProduction_paramsBase_blocksRow.prototype, {by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
forcibly: {get: function(){return this._getter('forcibly')}, set: function(v){this._setter('forcibly',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true}});
_define($p.CatProduction_params.prototype, { 'base_blocks': {get: function(){return this._getter_ts('base_blocks')}, set: function(v){this._setter_ts('base_blocks',v)}, enumerable: true, configurable: true}})
$p.cat.production_params = new CatManager('cat.production_params')

/**
* ### Справочник ИнтеграцияПраваПользователей
* Права внешних пользователей
* @class CatUsers_acl
* @extends CatObj
* @constructor 
*/
$p.CatUsers_acl = class CatUsers_acl extends CatObj{}
_define($p.CatUsers_acl.prototype, {prefix: {get: function(){return this._getter('prefix')}, set: function(v){this._setter('prefix',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.CatUsers_aclAcl_objsRow = class CatUsers_aclAcl_objsRow extends TabularSectionRow{}
_define($p.CatUsers_aclAcl_objsRow.prototype, {acl_obj: {get: function(){return this._getter('acl_obj')}, set: function(v){this._setter('acl_obj',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers_acl.prototype, { 'acl_objs': {get: function(){return this._getter_ts('acl_objs')}, set: function(v){this._setter_ts('acl_objs',v)}, enumerable: true, configurable: true}})
$p.cat.users_acl = new CatManager('cat.users_acl')

/**
* ### Справочник пзРайоныДоставки
* Районы доставки
* @class CatDelivery_areas
* @extends CatObj
* @constructor 
*/
$p.CatDelivery_areas = class CatDelivery_areas extends CatObj{}
_define($p.CatDelivery_areas.prototype, {country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
latitude: {get: function(){return this._getter('latitude')}, set: function(v){this._setter('latitude',v)}, enumerable: true, configurable: true},
longitude: {get: function(){return this._getter('longitude')}, set: function(v){this._setter('longitude',v)}, enumerable: true, configurable: true},
ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
delivery_area: {get: function(){return this._getter('delivery_area')}, set: function(v){this._setter('delivery_area',v)}, enumerable: true, configurable: true},
specify_area_by_geocoder: {get: function(){return this._getter('specify_area_by_geocoder')}, set: function(v){this._setter('specify_area_by_geocoder',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.delivery_areas = new CatManager('cat.delivery_areas')

/**
* ### Справочник пзСоединения
* Спецификации соединений элементов
* @class CatCnns
* @extends CatObj
* @constructor 
*/
$p.CatCnns = class CatCnns extends CatObj{}
_define($p.CatCnns.prototype, {priority: {get: function(){return this._getter('priority')}, set: function(v){this._setter('priority',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
sd1: {get: function(){return this._getter('sd1')}, set: function(v){this._setter('sd1',v)}, enumerable: true, configurable: true},
sd2: {get: function(){return this._getter('sd2')}, set: function(v){this._setter('sd2',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
cnn_type: {get: function(){return this._getter('cnn_type')}, set: function(v){this._setter('cnn_type',v)}, enumerable: true, configurable: true},
ahmin: {get: function(){return this._getter('ahmin')}, set: function(v){this._setter('ahmin',v)}, enumerable: true, configurable: true},
ahmax: {get: function(){return this._getter('ahmax')}, set: function(v){this._setter('ahmax',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
tmin: {get: function(){return this._getter('tmin')}, set: function(v){this._setter('tmin',v)}, enumerable: true, configurable: true},
tmax: {get: function(){return this._getter('tmax')}, set: function(v){this._setter('tmax',v)}, enumerable: true, configurable: true},
var_layers: {get: function(){return this._getter('var_layers')}, set: function(v){this._setter('var_layers',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
art1vert: {get: function(){return this._getter('art1vert')}, set: function(v){this._setter('art1vert',v)}, enumerable: true, configurable: true},
art1glass: {get: function(){return this._getter('art1glass')}, set: function(v){this._setter('art1glass',v)}, enumerable: true, configurable: true},
art2glass: {get: function(){return this._getter('art2glass')}, set: function(v){this._setter('art2glass',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatCnnsSpecificationRow = class CatCnnsSpecificationRow extends TabularSectionRow{}
_define($p.CatCnnsSpecificationRow.prototype, {elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sz_min: {get: function(){return this._getter('sz_min')}, set: function(v){this._setter('sz_min',v)}, enumerable: true, configurable: true},
sz_max: {get: function(){return this._getter('sz_max')}, set: function(v){this._setter('sz_max',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
set_specification: {get: function(){return this._getter('set_specification')}, set: function(v){this._setter('set_specification',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
by_contour: {get: function(){return this._getter('by_contour')}, set: function(v){this._setter('by_contour',v)}, enumerable: true, configurable: true},
contraction_by_contour: {get: function(){return this._getter('contraction_by_contour')}, set: function(v){this._setter('contraction_by_contour',v)}, enumerable: true, configurable: true},
on_aperture: {get: function(){return this._getter('on_aperture')}, set: function(v){this._setter('on_aperture',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
contour_number: {get: function(){return this._getter('contour_number')}, set: function(v){this._setter('contour_number',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true}});
_define($p.CatCnns.prototype, { 'specification': {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true}})
$p.CatCnnsCnn_elmntsRow = class CatCnnsCnn_elmntsRow extends TabularSectionRow{}
_define($p.CatCnnsCnn_elmntsRow.prototype, {elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sz_min: {get: function(){return this._getter('sz_min')}, set: function(v){this._setter('sz_min',v)}, enumerable: true, configurable: true},
sz_max: {get: function(){return this._getter('sz_max')}, set: function(v){this._setter('sz_max',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
set_specification: {get: function(){return this._getter('set_specification')}, set: function(v){this._setter('set_specification',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
by_contour: {get: function(){return this._getter('by_contour')}, set: function(v){this._setter('by_contour',v)}, enumerable: true, configurable: true},
contraction_by_contour: {get: function(){return this._getter('contraction_by_contour')}, set: function(v){this._setter('contraction_by_contour',v)}, enumerable: true, configurable: true},
on_aperture: {get: function(){return this._getter('on_aperture')}, set: function(v){this._setter('on_aperture',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
contour_number: {get: function(){return this._getter('contour_number')}, set: function(v){this._setter('contour_number',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
nom1: {get: function(){return this._getter('nom1')}, set: function(v){this._setter('nom1',v)}, enumerable: true, configurable: true},
clr1: {get: function(){return this._getter('clr1')}, set: function(v){this._setter('clr1',v)}, enumerable: true, configurable: true},
nom2: {get: function(){return this._getter('nom2')}, set: function(v){this._setter('nom2',v)}, enumerable: true, configurable: true},
clr2: {get: function(){return this._getter('clr2')}, set: function(v){this._setter('clr2',v)}, enumerable: true, configurable: true},
varclr: {get: function(){return this._getter('varclr')}, set: function(v){this._setter('varclr',v)}, enumerable: true, configurable: true},
is_nom_combinations_row: {get: function(){return this._getter('is_nom_combinations_row')}, set: function(v){this._setter('is_nom_combinations_row',v)}, enumerable: true, configurable: true}});
_define($p.CatCnns.prototype, { 'cnn_elmnts': {get: function(){return this._getter_ts('cnn_elmnts')}, set: function(v){this._setter_ts('cnn_elmnts',v)}, enumerable: true, configurable: true}})
$p.CatCnnsSelection_paramsRow = class CatCnnsSelection_paramsRow extends TabularSectionRow{}
_define($p.CatCnnsSelection_paramsRow.prototype, {elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
sz: {get: function(){return this._getter('sz')}, set: function(v){this._setter('sz',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sz_min: {get: function(){return this._getter('sz_min')}, set: function(v){this._setter('sz_min',v)}, enumerable: true, configurable: true},
sz_max: {get: function(){return this._getter('sz_max')}, set: function(v){this._setter('sz_max',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
set_specification: {get: function(){return this._getter('set_specification')}, set: function(v){this._setter('set_specification',v)}, enumerable: true, configurable: true},
for_direct_profile_only: {get: function(){return this._getter('for_direct_profile_only')}, set: function(v){this._setter('for_direct_profile_only',v)}, enumerable: true, configurable: true},
by_contour: {get: function(){return this._getter('by_contour')}, set: function(v){this._setter('by_contour',v)}, enumerable: true, configurable: true},
contraction_by_contour: {get: function(){return this._getter('contraction_by_contour')}, set: function(v){this._setter('contraction_by_contour',v)}, enumerable: true, configurable: true},
on_aperture: {get: function(){return this._getter('on_aperture')}, set: function(v){this._setter('on_aperture',v)}, enumerable: true, configurable: true},
angle_calc_method: {get: function(){return this._getter('angle_calc_method')}, set: function(v){this._setter('angle_calc_method',v)}, enumerable: true, configurable: true},
contour_number: {get: function(){return this._getter('contour_number')}, set: function(v){this._setter('contour_number',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
nom1: {get: function(){return this._getter('nom1')}, set: function(v){this._setter('nom1',v)}, enumerable: true, configurable: true},
clr1: {get: function(){return this._getter('clr1')}, set: function(v){this._setter('clr1',v)}, enumerable: true, configurable: true},
nom2: {get: function(){return this._getter('nom2')}, set: function(v){this._setter('nom2',v)}, enumerable: true, configurable: true},
clr2: {get: function(){return this._getter('clr2')}, set: function(v){this._setter('clr2',v)}, enumerable: true, configurable: true},
varclr: {get: function(){return this._getter('varclr')}, set: function(v){this._setter('varclr',v)}, enumerable: true, configurable: true},
is_nom_combinations_row: {get: function(){return this._getter('is_nom_combinations_row')}, set: function(v){this._setter('is_nom_combinations_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatCnns.prototype, { 'selection_params': {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true}})
$p.cat.cnns = new CatManager('cat.cnns')

/**
* ### Справочник пзФурнитура
* Описывает ограничения и правила формирования спецификаций фурнитуры
* @class CatFurns
* @extends CatObj
* @constructor 
*/
$p.CatFurns = class CatFurns extends CatObj{}
_define($p.CatFurns.prototype, {flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
left_right: {get: function(){return this._getter('left_right')}, set: function(v){this._setter('left_right',v)}, enumerable: true, configurable: true},
is_set: {get: function(){return this._getter('is_set')}, set: function(v){this._setter('is_set',v)}, enumerable: true, configurable: true},
is_sliding: {get: function(){return this._getter('is_sliding')}, set: function(v){this._setter('is_sliding',v)}, enumerable: true, configurable: true},
furn_set: {get: function(){return this._getter('furn_set')}, set: function(v){this._setter('furn_set',v)}, enumerable: true, configurable: true},
side_count: {get: function(){return this._getter('side_count')}, set: function(v){this._setter('side_count',v)}, enumerable: true, configurable: true},
handle_side: {get: function(){return this._getter('handle_side')}, set: function(v){this._setter('handle_side',v)}, enumerable: true, configurable: true},
open_type: {get: function(){return this._getter('open_type')}, set: function(v){this._setter('open_type',v)}, enumerable: true, configurable: true},
name_short: {get: function(){return this._getter('name_short')}, set: function(v){this._setter('name_short',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatFurnsOpen_tunesRow = class CatFurnsOpen_tunesRow extends TabularSectionRow{}
_define($p.CatFurnsOpen_tunesRow.prototype, {side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true}});
_define($p.CatFurns.prototype, { 'open_tunes': {get: function(){return this._getter_ts('open_tunes')}, set: function(v){this._setter_ts('open_tunes',v)}, enumerable: true, configurable: true}})
$p.CatFurnsSpecificationRow = class CatFurnsSpecificationRow extends TabularSectionRow{}
_define($p.CatFurnsSpecificationRow.prototype, {side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom_set: {get: function(){return this._getter('nom_set')}, set: function(v){this._setter('nom_set',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true}});
_define($p.CatFurns.prototype, { 'specification': {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true}})
$p.CatFurnsSelection_paramsRow = class CatFurnsSelection_paramsRow extends TabularSectionRow{}
_define($p.CatFurnsSelection_paramsRow.prototype, {side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom_set: {get: function(){return this._getter('nom_set')}, set: function(v){this._setter('nom_set',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CatFurns.prototype, { 'selection_params': {get: function(){return this._getter_ts('selection_params')}, set: function(v){this._setter_ts('selection_params',v)}, enumerable: true, configurable: true}})
$p.CatFurnsSpecification_restrictionsRow = class CatFurnsSpecification_restrictionsRow extends TabularSectionRow{}
_define($p.CatFurnsSpecification_restrictionsRow.prototype, {side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom_set: {get: function(){return this._getter('nom_set')}, set: function(v){this._setter('nom_set',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true}});
_define($p.CatFurns.prototype, { 'specification_restrictions': {get: function(){return this._getter_ts('specification_restrictions')}, set: function(v){this._setter_ts('specification_restrictions',v)}, enumerable: true, configurable: true}})
$p.CatFurnsColorsRow = class CatFurnsColorsRow extends TabularSectionRow{}
_define($p.CatFurnsColorsRow.prototype, {side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
arc_available: {get: function(){return this._getter('arc_available')}, set: function(v){this._setter('arc_available',v)}, enumerable: true, configurable: true},
shtulp_available: {get: function(){return this._getter('shtulp_available')}, set: function(v){this._setter('shtulp_available',v)}, enumerable: true, configurable: true},
shtulp_fix_here: {get: function(){return this._getter('shtulp_fix_here')}, set: function(v){this._setter('shtulp_fix_here',v)}, enumerable: true, configurable: true},
rotation_axis: {get: function(){return this._getter('rotation_axis')}, set: function(v){this._setter('rotation_axis',v)}, enumerable: true, configurable: true},
partial_opening: {get: function(){return this._getter('partial_opening')}, set: function(v){this._setter('partial_opening',v)}, enumerable: true, configurable: true},
outline: {get: function(){return this._getter('outline')}, set: function(v){this._setter('outline',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom_set: {get: function(){return this._getter('nom_set')}, set: function(v){this._setter('nom_set',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
lmin: {get: function(){return this._getter('lmin')}, set: function(v){this._setter('lmin',v)}, enumerable: true, configurable: true},
lmax: {get: function(){return this._getter('lmax')}, set: function(v){this._setter('lmax',v)}, enumerable: true, configurable: true},
amin: {get: function(){return this._getter('amin')}, set: function(v){this._setter('amin',v)}, enumerable: true, configurable: true},
amax: {get: function(){return this._getter('amax')}, set: function(v){this._setter('amax',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
_define($p.CatFurns.prototype, { 'colors': {get: function(){return this._getter_ts('colors')}, set: function(v){this._setter_ts('colors',v)}, enumerable: true, configurable: true}})
$p.cat.furns = new CatManager('cat.furns')

/**
* ### Справочник пзЦвета
* Цвета
* @class CatClrs
* @extends CatObj
* @constructor 
*/
$p.CatClrs = class CatClrs extends CatObj{}
_define($p.CatClrs.prototype, {ral: {get: function(){return this._getter('ral')}, set: function(v){this._setter('ral',v)}, enumerable: true, configurable: true},
machine_tools_clr: {get: function(){return this._getter('machine_tools_clr')}, set: function(v){this._setter('machine_tools_clr',v)}, enumerable: true, configurable: true},
clr_str: {get: function(){return this._getter('clr_str')}, set: function(v){this._setter('clr_str',v)}, enumerable: true, configurable: true},
clr_out: {get: function(){return this._getter('clr_out')}, set: function(v){this._setter('clr_out',v)}, enumerable: true, configurable: true},
clr_in: {get: function(){return this._getter('clr_in')}, set: function(v){this._setter('clr_in',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.clrs = new CatManager('cat.clrs')

/**
* ### Справочник ЦветоЦеновыеГруппы
* Цвето-ценовые группы
* @class CatColor_price_groups
* @extends CatObj
* @constructor 
*/
$p.CatColor_price_groups = class CatColor_price_groups extends CatObj{}
_define($p.CatColor_price_groups.prototype, {НазначениеЦветовойГруппы: {get: function(){return this._getter('НазначениеЦветовойГруппы')}, set: function(v){this._setter('НазначениеЦветовойГруппы',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatColor_price_groupsPrice_groupsRow = class CatColor_price_groupsPrice_groupsRow extends TabularSectionRow{}
_define($p.CatColor_price_groupsPrice_groupsRow.prototype, {price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true}});
_define($p.CatColor_price_groups.prototype, { 'price_groups': {get: function(){return this._getter_ts('price_groups')}, set: function(v){this._setter_ts('price_groups',v)}, enumerable: true, configurable: true}})
$p.CatColor_price_groupsClr_conformityRow = class CatColor_price_groupsClr_conformityRow extends TabularSectionRow{}
_define($p.CatColor_price_groupsClr_conformityRow.prototype, {price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true},
clr1: {get: function(){return this._getter('clr1')}, set: function(v){this._setter('clr1',v)}, enumerable: true, configurable: true},
clr2: {get: function(){return this._getter('clr2')}, set: function(v){this._setter('clr2',v)}, enumerable: true, configurable: true}});
_define($p.CatColor_price_groups.prototype, { 'clr_conformity': {get: function(){return this._getter_ts('clr_conformity')}, set: function(v){this._setter_ts('clr_conformity',v)}, enumerable: true, configurable: true}})
$p.cat.color_price_groups = new CatManager('cat.color_price_groups')

/**
* ### Справочник Подразделения
* Перечень подразделений предприятия
* @class CatDivisions
* @extends CatObj
* @constructor 
*/
$p.CatDivisions = class CatDivisions extends CatObj{}
_define($p.CatDivisions.prototype, {main_project: {get: function(){return this._getter('main_project')}, set: function(v){this._setter('main_project',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatDivisionsExtra_fieldsRow = class CatDivisionsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatDivisionsExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatDivisions.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.divisions = new CatManager('cat.divisions')

/**
* ### Справочник Пользователи
* Пользователи
* @class CatUsers
* @extends CatObj
* @constructor 
*/
$p.CatUsers = class CatUsers extends CatObj{}
_define($p.CatUsers.prototype, {invalid: {get: function(){return this._getter('invalid')}, set: function(v){this._setter('invalid',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
individual_person: {get: function(){return this._getter('individual_person')}, set: function(v){this._setter('individual_person',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
ancillary: {get: function(){return this._getter('ancillary')}, set: function(v){this._setter('ancillary',v)}, enumerable: true, configurable: true},
user_ib_uid: {get: function(){return this._getter('user_ib_uid')}, set: function(v){this._setter('user_ib_uid',v)}, enumerable: true, configurable: true},
user_fresh_uid: {get: function(){return this._getter('user_fresh_uid')}, set: function(v){this._setter('user_fresh_uid',v)}, enumerable: true, configurable: true},
id: {get: function(){return this._getter('id')}, set: function(v){this._setter('id',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatUsersExtra_fieldsRow = class CatUsersExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatUsersExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.CatUsersContact_informationRow = class CatUsersContact_informationRow extends TabularSectionRow{}
_define($p.CatUsersContact_informationRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.cat.users = new CatManager('cat.users')

/**
* ### Справочник Проекты
* Проекты
* @class CatProjects
* @extends CatObj
* @constructor 
*/
$p.CatProjects = class CatProjects extends CatObj{}
_define($p.CatProjects.prototype, {start: {get: function(){return this._getter('start')}, set: function(v){this._setter('start',v)}, enumerable: true, configurable: true},
finish: {get: function(){return this._getter('finish')}, set: function(v){this._setter('finish',v)}, enumerable: true, configurable: true},
launch: {get: function(){return this._getter('launch')}, set: function(v){this._setter('launch',v)}, enumerable: true, configurable: true},
readiness: {get: function(){return this._getter('readiness')}, set: function(v){this._setter('readiness',v)}, enumerable: true, configurable: true},
finished: {get: function(){return this._getter('finished')}, set: function(v){this._setter('finished',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatProjectsExtra_fieldsRow = class CatProjectsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatProjectsExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatProjects.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.projects = new CatManager('cat.projects')

/**
* ### Справочник Склады
* Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад
* @class CatStores
* @extends CatObj
* @constructor 
*/
$p.CatStores = class CatStores extends CatObj{}
_define($p.CatStores.prototype, {note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatStoresExtra_fieldsRow = class CatStoresExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatStoresExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatStores.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.stores = new CatManager('cat.stores')

/**
* ### Справочник СтатьиДвиженияДенежныхСредств
* Перечень статей движения денежных средств (ДДС), используемых в предприятии для проведения анализа поступлений и расходов в разрезе статей движения денежных средств. 
* @class CatCash_flow_articles
* @extends CatObj
* @constructor 
*/
$p.CatCash_flow_articles = class CatCash_flow_articles extends CatObj{}
_define($p.CatCash_flow_articles.prototype, {definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
sorting_field: {get: function(){return this._getter('sorting_field')}, set: function(v){this._setter('sorting_field',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.cash_flow_articles = new CatManager('cat.cash_flow_articles')

/**
* ### Справочник ТипыЦенНоменклатуры
* Перечень типов отпускных цен предприятия
* @class CatNom_prices_types
* @extends CatObj
* @constructor 
*/
$p.CatNom_prices_types = class CatNom_prices_types extends CatObj{}
_define($p.CatNom_prices_types.prototype, {price_currency: {get: function(){return this._getter('price_currency')}, set: function(v){this._setter('price_currency',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
vat_price_included: {get: function(){return this._getter('vat_price_included')}, set: function(v){this._setter('vat_price_included',v)}, enumerable: true, configurable: true},
rounding_order: {get: function(){return this._getter('rounding_order')}, set: function(v){this._setter('rounding_order',v)}, enumerable: true, configurable: true},
rounding_in_a_big_way: {get: function(){return this._getter('rounding_in_a_big_way')}, set: function(v){this._setter('rounding_in_a_big_way',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.nom_prices_types = new CatManager('cat.nom_prices_types')

/**
* ### Справочник ФизическиеЛица
* Физические лица
* @class CatIndividuals
* @extends CatObj
* @constructor 
*/
$p.CatIndividuals = class CatIndividuals extends CatObj{}
_define($p.CatIndividuals.prototype, {birth_date: {get: function(){return this._getter('birth_date')}, set: function(v){this._setter('birth_date',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
imns_code: {get: function(){return this._getter('imns_code')}, set: function(v){this._setter('imns_code',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
pfr_number: {get: function(){return this._getter('pfr_number')}, set: function(v){this._setter('pfr_number',v)}, enumerable: true, configurable: true},
sex: {get: function(){return this._getter('sex')}, set: function(v){this._setter('sex',v)}, enumerable: true, configurable: true},
birth_place: {get: function(){return this._getter('birth_place')}, set: function(v){this._setter('birth_place',v)}, enumerable: true, configurable: true},
ОсновноеИзображение: {get: function(){return this._getter('ОсновноеИзображение')}, set: function(v){this._setter('ОсновноеИзображение',v)}, enumerable: true, configurable: true},
Фамилия: {get: function(){return this._getter('Фамилия')}, set: function(v){this._setter('Фамилия',v)}, enumerable: true, configurable: true},
Имя: {get: function(){return this._getter('Имя')}, set: function(v){this._setter('Имя',v)}, enumerable: true, configurable: true},
Отчество: {get: function(){return this._getter('Отчество')}, set: function(v){this._setter('Отчество',v)}, enumerable: true, configurable: true},
ФамилияРП: {get: function(){return this._getter('ФамилияРП')}, set: function(v){this._setter('ФамилияРП',v)}, enumerable: true, configurable: true},
ИмяРП: {get: function(){return this._getter('ИмяРП')}, set: function(v){this._setter('ИмяРП',v)}, enumerable: true, configurable: true},
ОтчествоРП: {get: function(){return this._getter('ОтчествоРП')}, set: function(v){this._setter('ОтчествоРП',v)}, enumerable: true, configurable: true},
ОснованиеРП: {get: function(){return this._getter('ОснованиеРП')}, set: function(v){this._setter('ОснованиеРП',v)}, enumerable: true, configurable: true},
ДолжностьРП: {get: function(){return this._getter('ДолжностьРП')}, set: function(v){this._setter('ДолжностьРП',v)}, enumerable: true, configurable: true},
Должность: {get: function(){return this._getter('Должность')}, set: function(v){this._setter('Должность',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatIndividualsContact_informationRow = class CatIndividualsContact_informationRow extends TabularSectionRow{}
_define($p.CatIndividualsContact_informationRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
_define($p.CatIndividuals.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.cat.individuals = new CatManager('cat.individuals')

/**
* ### Справочник ХарактеристикиНоменклатуры
* Дополнительные характеристики элементов номенклатуры: цвет, размер и т.п.
* @class CatCharacteristics
* @extends CatObj
* @constructor 
*/
$p.CatCharacteristics = class CatCharacteristics extends CatObj{}
_define($p.CatCharacteristics.prototype, {x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
weight: {get: function(){return this._getter('weight')}, set: function(v){this._setter('weight',v)}, enumerable: true, configurable: true},
condition_products: {get: function(){return this._getter('condition_products')}, set: function(v){this._setter('condition_products',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
product: {get: function(){return this._getter('product')}, set: function(v){this._setter('product',v)}, enumerable: true, configurable: true},
leading_product: {get: function(){return this._getter('leading_product')}, set: function(v){this._setter('leading_product',v)}, enumerable: true, configurable: true},
leading_elm: {get: function(){return this._getter('leading_elm')}, set: function(v){this._setter('leading_elm',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
sys: {get: function(){return this._getter('sys')}, set: function(v){this._setter('sys',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.CatCharacteristicsConstructionsRow = class CatCharacteristicsConstructionsRow extends TabularSectionRow{}
_define($p.CatCharacteristicsConstructionsRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'constructions': {get: function(){return this._getter_ts('constructions')}, set: function(v){this._setter_ts('constructions',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsCoordinatesRow = class CatCharacteristicsCoordinatesRow extends TabularSectionRow{}
_define($p.CatCharacteristicsCoordinatesRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'coordinates': {get: function(){return this._getter_ts('coordinates')}, set: function(v){this._setter_ts('coordinates',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsCnn_elmntsRow = class CatCharacteristicsCnn_elmntsRow extends TabularSectionRow{}
_define($p.CatCharacteristicsCnn_elmntsRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'cnn_elmnts': {get: function(){return this._getter_ts('cnn_elmnts')}, set: function(v){this._setter_ts('cnn_elmnts',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsParamsRow = class CatCharacteristicsParamsRow extends TabularSectionRow{}
_define($p.CatCharacteristicsParamsRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'params': {get: function(){return this._getter_ts('params')}, set: function(v){this._setter_ts('params',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsGlass_specificationRow = class CatCharacteristicsGlass_specificationRow extends TabularSectionRow{}
_define($p.CatCharacteristicsGlass_specificationRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'glass_specification': {get: function(){return this._getter_ts('glass_specification')}, set: function(v){this._setter_ts('glass_specification',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsExtra_fieldsRow = class CatCharacteristicsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatCharacteristicsExtra_fieldsRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsGlassesRow = class CatCharacteristicsGlassesRow extends TabularSectionRow{}
_define($p.CatCharacteristicsGlassesRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
is_sandwich: {get: function(){return this._getter('is_sandwich')}, set: function(v){this._setter('is_sandwich',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
coffer: {get: function(){return this._getter('coffer')}, set: function(v){this._setter('coffer',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'glasses': {get: function(){return this._getter_ts('glasses')}, set: function(v){this._setter_ts('glasses',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsMosquitoRow = class CatCharacteristicsMosquitoRow extends TabularSectionRow{}
_define($p.CatCharacteristicsMosquitoRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
is_sandwich: {get: function(){return this._getter('is_sandwich')}, set: function(v){this._setter('is_sandwich',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
coffer: {get: function(){return this._getter('coffer')}, set: function(v){this._setter('coffer',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'mosquito': {get: function(){return this._getter_ts('mosquito')}, set: function(v){this._setter_ts('mosquito',v)}, enumerable: true, configurable: true}})
$p.CatCharacteristicsSpecificationRow = class CatCharacteristicsSpecificationRow extends TabularSectionRow{}
_define($p.CatCharacteristicsSpecificationRow.prototype, {cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true},
z: {get: function(){return this._getter('z')}, set: function(v){this._setter('z',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true},
furn: {get: function(){return this._getter('furn')}, set: function(v){this._setter('furn',v)}, enumerable: true, configurable: true},
clr_furn: {get: function(){return this._getter('clr_furn')}, set: function(v){this._setter('clr_furn',v)}, enumerable: true, configurable: true},
direction: {get: function(){return this._getter('direction')}, set: function(v){this._setter('direction',v)}, enumerable: true, configurable: true},
mskt: {get: function(){return this._getter('mskt')}, set: function(v){this._setter('mskt',v)}, enumerable: true, configurable: true},
clr_mskt: {get: function(){return this._getter('clr_mskt')}, set: function(v){this._setter('clr_mskt',v)}, enumerable: true, configurable: true},
h_ruch: {get: function(){return this._getter('h_ruch')}, set: function(v){this._setter('h_ruch',v)}, enumerable: true, configurable: true},
fix_ruch: {get: function(){return this._getter('fix_ruch')}, set: function(v){this._setter('fix_ruch',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
path_data: {get: function(){return this._getter('path_data')}, set: function(v){this._setter('path_data',v)}, enumerable: true, configurable: true},
x1: {get: function(){return this._getter('x1')}, set: function(v){this._setter('x1',v)}, enumerable: true, configurable: true},
y1: {get: function(){return this._getter('y1')}, set: function(v){this._setter('y1',v)}, enumerable: true, configurable: true},
x2: {get: function(){return this._getter('x2')}, set: function(v){this._setter('x2',v)}, enumerable: true, configurable: true},
y2: {get: function(){return this._getter('y2')}, set: function(v){this._setter('y2',v)}, enumerable: true, configurable: true},
r: {get: function(){return this._getter('r')}, set: function(v){this._setter('r',v)}, enumerable: true, configurable: true},
arc_ccw: {get: function(){return this._getter('arc_ccw')}, set: function(v){this._setter('arc_ccw',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
angle_hor: {get: function(){return this._getter('angle_hor')}, set: function(v){this._setter('angle_hor',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
pos: {get: function(){return this._getter('pos')}, set: function(v){this._setter('pos',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
elm1: {get: function(){return this._getter('elm1')}, set: function(v){this._setter('elm1',v)}, enumerable: true, configurable: true},
node1: {get: function(){return this._getter('node1')}, set: function(v){this._setter('node1',v)}, enumerable: true, configurable: true},
elm2: {get: function(){return this._getter('elm2')}, set: function(v){this._setter('elm2',v)}, enumerable: true, configurable: true},
node2: {get: function(){return this._getter('node2')}, set: function(v){this._setter('node2',v)}, enumerable: true, configurable: true},
cnn: {get: function(){return this._getter('cnn')}, set: function(v){this._setter('cnn',v)}, enumerable: true, configurable: true},
aperture_len: {get: function(){return this._getter('aperture_len')}, set: function(v){this._setter('aperture_len',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
gno: {get: function(){return this._getter('gno')}, set: function(v){this._setter('gno',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
is_rectangular: {get: function(){return this._getter('is_rectangular')}, set: function(v){this._setter('is_rectangular',v)}, enumerable: true, configurable: true},
is_sandwich: {get: function(){return this._getter('is_sandwich')}, set: function(v){this._setter('is_sandwich',v)}, enumerable: true, configurable: true},
thickness: {get: function(){return this._getter('thickness')}, set: function(v){this._setter('thickness',v)}, enumerable: true, configurable: true},
coffer: {get: function(){return this._getter('coffer')}, set: function(v){this._setter('coffer',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
alp1: {get: function(){return this._getter('alp1')}, set: function(v){this._setter('alp1',v)}, enumerable: true, configurable: true},
alp2: {get: function(){return this._getter('alp2')}, set: function(v){this._setter('alp2',v)}, enumerable: true, configurable: true},
totqty: {get: function(){return this._getter('totqty')}, set: function(v){this._setter('totqty',v)}, enumerable: true, configurable: true},
totqty1: {get: function(){return this._getter('totqty1')}, set: function(v){this._setter('totqty1',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
amount_marged: {get: function(){return this._getter('amount_marged')}, set: function(v){this._setter('amount_marged',v)}, enumerable: true, configurable: true},
origin: {get: function(){return this._getter('origin')}, set: function(v){this._setter('origin',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true}});
_define($p.CatCharacteristics.prototype, { 'specification': {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true}})
$p.cat.characteristics = new CatManager('cat.characteristics')

/**
* ### Справочник ЦеновыеГруппы
* Ценовые группы
* @class CatPrice_groups
* @extends CatObj
* @constructor 
*/
$p.CatPrice_groups = class CatPrice_groups extends CatObj{}
_define($p.CatPrice_groups.prototype, {definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.price_groups = new CatManager('cat.price_groups')

/**
* ### Справочник ГруппыФинансовогоУчетаНоменклатуры
* Перечень номенклатурных групп для учета затрат и укрупненного планирования продаж, закупок и производства
* @class CatNom_groups
* @extends CatObj
* @constructor 
*/
$p.CatNom_groups = class CatNom_groups extends CatObj{}
_define($p.CatNom_groups.prototype, {vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.nom_groups = new CatManager('cat.nom_groups')

/**
* ### Справочник ПривязкиВставок
* Замена регистра "Корректировка спецификации"
* @class CatInsert_bind
* @extends CatObj
* @constructor 
*/
$p.CatInsert_bind = class CatInsert_bind extends CatObj{}
_define($p.CatInsert_bind.prototype, {inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatInsert_bindProductionRow = class CatInsert_bindProductionRow extends TabularSectionRow{}
_define($p.CatInsert_bindProductionRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true}});
_define($p.CatInsert_bind.prototype, { 'production': {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true}})
$p.cat.insert_bind = new CatManager('cat.insert_bind')

/**
* ### Справочник КлючиПланирования
* Смена + Подразделение + Участок
* @class CatPlanning_keys
* @extends CatObj
* @constructor 
*/
$p.CatPlanning_keys = class CatPlanning_keys extends CatObj{}
_define($p.CatPlanning_keys.prototype, {work_shift: {get: function(){return this._getter('work_shift')}, set: function(v){this._setter('work_shift',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
work_center_kind: {get: function(){return this._getter('work_center_kind')}, set: function(v){this._setter('work_center_kind',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.planning_keys = new CatManager('cat.planning_keys')

/**
* ### Документ КорректировкаРегистров
* Корректировка регистров
* @class DocRegisters_correction
* @extends DocObj
* @constructor 
*/
$p.DocRegisters_correction = class DocRegisters_correction extends DocObj{}
_define($p.DocRegisters_correction.prototype, {original_doc_type: {get: function(){return this._getter('original_doc_type')}, set: function(v){this._setter('original_doc_type',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocRegisters_correctionRegisters_tableRow = class DocRegisters_correctionRegisters_tableRow extends TabularSectionRow{}
_define($p.DocRegisters_correctionRegisters_tableRow.prototype, {Имя: {get: function(){return this._getter('Имя')}, set: function(v){this._setter('Имя',v)}, enumerable: true, configurable: true}});
_define($p.DocRegisters_correction.prototype, { 'registers_table': {get: function(){return this._getter_ts('registers_table')}, set: function(v){this._setter_ts('registers_table',v)}, enumerable: true, configurable: true}})
$p.doc.registers_correction = new DocManager('doc.registers_correction')

/**
* ### Документ ПоступлениеТоваровУслуг
* Документы отражают поступление товаров и услуг
* @class DocPurchase
* @extends DocObj
* @constructor 
*/
$p.DocPurchase = class DocPurchase extends DocObj{}
_define($p.DocPurchase.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocPurchaseGoodsRow = class DocPurchaseGoodsRow extends TabularSectionRow{}
_define($p.DocPurchaseGoodsRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
_define($p.DocPurchase.prototype, { 'goods': {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true}})
$p.DocPurchaseServicesRow = class DocPurchaseServicesRow extends TabularSectionRow{}
_define($p.DocPurchaseServicesRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
content: {get: function(){return this._getter('content')}, set: function(v){this._setter('content',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
nom_group: {get: function(){return this._getter('nom_group')}, set: function(v){this._setter('nom_group',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cost_item: {get: function(){return this._getter('cost_item')}, set: function(v){this._setter('cost_item',v)}, enumerable: true, configurable: true},
project: {get: function(){return this._getter('project')}, set: function(v){this._setter('project',v)}, enumerable: true, configurable: true},
buyers_order: {get: function(){return this._getter('buyers_order')}, set: function(v){this._setter('buyers_order',v)}, enumerable: true, configurable: true}});
_define($p.DocPurchase.prototype, { 'services': {get: function(){return this._getter_ts('services')}, set: function(v){this._setter_ts('services',v)}, enumerable: true, configurable: true}})
$p.doc.purchase = new DocManager('doc.purchase')

/**
* ### Документ НарядРЦ
* Задание рабочему центру
* @class DocWork_centers_task
* @extends DocObj
* @constructor 
*/
$p.DocWork_centers_task = class DocWork_centers_task extends DocObj{}
_define($p.DocWork_centers_task.prototype, {work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
recipient: {get: function(){return this._getter('recipient')}, set: function(v){this._setter('recipient',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocWork_centers_taskPlanningRow = class DocWork_centers_taskPlanningRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskPlanningRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'planning': {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true}})
$p.DocWork_centers_taskПотребностьRow = class DocWork_centers_taskПотребностьRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskПотребностьRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'Потребность': {get: function(){return this._getter_ts('Потребность')}, set: function(v){this._setter_ts('Потребность',v)}, enumerable: true, configurable: true}})
$p.DocWork_centers_taskПотребностьИтогRow = class DocWork_centers_taskПотребностьИтогRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskПотребностьИтогRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
Потребность: {get: function(){return this._getter('Потребность')}, set: function(v){this._setter('Потребность',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'ПотребностьИтог': {get: function(){return this._getter_ts('ПотребностьИтог')}, set: function(v){this._setter_ts('ПотребностьИтог',v)}, enumerable: true, configurable: true}})
$p.DocWork_centers_taskОбрезьВходRow = class DocWork_centers_taskОбрезьВходRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskОбрезьВходRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
Потребность: {get: function(){return this._getter('Потребность')}, set: function(v){this._setter('Потребность',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
ПорядокПечати: {get: function(){return this._getter('ПорядокПечати')}, set: function(v){this._setter('ПорядокПечати',v)}, enumerable: true, configurable: true},
Использовано: {get: function(){return this._getter('Использовано')}, set: function(v){this._setter('Использовано',v)}, enumerable: true, configurable: true},
Остаток: {get: function(){return this._getter('Остаток')}, set: function(v){this._setter('Остаток',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true},
ЯчейкаНов: {get: function(){return this._getter('ЯчейкаНов')}, set: function(v){this._setter('ЯчейкаНов',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'ОбрезьВход': {get: function(){return this._getter_ts('ОбрезьВход')}, set: function(v){this._setter_ts('ОбрезьВход',v)}, enumerable: true, configurable: true}})
$p.DocWork_centers_taskОбрезьВыходRow = class DocWork_centers_taskОбрезьВыходRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskОбрезьВыходRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
Потребность: {get: function(){return this._getter('Потребность')}, set: function(v){this._setter('Потребность',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
ПорядокПечати: {get: function(){return this._getter('ПорядокПечати')}, set: function(v){this._setter('ПорядокПечати',v)}, enumerable: true, configurable: true},
Использовано: {get: function(){return this._getter('Использовано')}, set: function(v){this._setter('Использовано',v)}, enumerable: true, configurable: true},
Остаток: {get: function(){return this._getter('Остаток')}, set: function(v){this._setter('Остаток',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true},
ЯчейкаНов: {get: function(){return this._getter('ЯчейкаНов')}, set: function(v){this._setter('ЯчейкаНов',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
КоординатаX: {get: function(){return this._getter('КоординатаX')}, set: function(v){this._setter('КоординатаX',v)}, enumerable: true, configurable: true},
КоординатаY: {get: function(){return this._getter('КоординатаY')}, set: function(v){this._setter('КоординатаY',v)}, enumerable: true, configurable: true},
ЯчейкаНов: {get: function(){return this._getter('ЯчейкаНов')}, set: function(v){this._setter('ЯчейкаНов',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'ОбрезьВыход': {get: function(){return this._getter_ts('ОбрезьВыход')}, set: function(v){this._setter_ts('ОбрезьВыход',v)}, enumerable: true, configurable: true}})
$p.DocWork_centers_taskРаскройRow = class DocWork_centers_taskРаскройRow extends TabularSectionRow{}
_define($p.DocWork_centers_taskРаскройRow.prototype, {obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
НоменклатураСП: {get: function(){return this._getter('НоменклатураСП')}, set: function(v){this._setter('НоменклатураСП',v)}, enumerable: true, configurable: true},
ХарактеристикаСП: {get: function(){return this._getter('ХарактеристикаСП')}, set: function(v){this._setter('ХарактеристикаСП',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
ОстатокПотребности: {get: function(){return this._getter('ОстатокПотребности')}, set: function(v){this._setter('ОстатокПотребности',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
Закрыть: {get: function(){return this._getter('Закрыть')}, set: function(v){this._setter('Закрыть',v)}, enumerable: true, configurable: true},
ИзОбрези: {get: function(){return this._getter('ИзОбрези')}, set: function(v){this._setter('ИзОбрези',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
Потребность: {get: function(){return this._getter('Потребность')}, set: function(v){this._setter('Потребность',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
ПорядокПечати: {get: function(){return this._getter('ПорядокПечати')}, set: function(v){this._setter('ПорядокПечати',v)}, enumerable: true, configurable: true},
Использовано: {get: function(){return this._getter('Использовано')}, set: function(v){this._setter('Использовано',v)}, enumerable: true, configurable: true},
Остаток: {get: function(){return this._getter('Остаток')}, set: function(v){this._setter('Остаток',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true},
ЯчейкаНов: {get: function(){return this._getter('ЯчейкаНов')}, set: function(v){this._setter('ЯчейкаНов',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
КоординатаX: {get: function(){return this._getter('КоординатаX')}, set: function(v){this._setter('КоординатаX',v)}, enumerable: true, configurable: true},
КоординатаY: {get: function(){return this._getter('КоординатаY')}, set: function(v){this._setter('КоординатаY',v)}, enumerable: true, configurable: true},
ЯчейкаНов: {get: function(){return this._getter('ЯчейкаНов')}, set: function(v){this._setter('ЯчейкаНов',v)}, enumerable: true, configurable: true},
production: {get: function(){return this._getter('production')}, set: function(v){this._setter('production',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
cnstr: {get: function(){return this._getter('cnstr')}, set: function(v){this._setter('cnstr',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
Хлыст: {get: function(){return this._getter('Хлыст')}, set: function(v){this._setter('Хлыст',v)}, enumerable: true, configurable: true},
НомерПары: {get: function(){return this._getter('НомерПары')}, set: function(v){this._setter('НомерПары',v)}, enumerable: true, configurable: true},
orientation: {get: function(){return this._getter('orientation')}, set: function(v){this._setter('orientation',v)}, enumerable: true, configurable: true},
elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
Угол1: {get: function(){return this._getter('Угол1')}, set: function(v){this._setter('Угол1',v)}, enumerable: true, configurable: true},
Угол2: {get: function(){return this._getter('Угол2')}, set: function(v){this._setter('Угол2',v)}, enumerable: true, configurable: true},
cell: {get: function(){return this._getter('cell')}, set: function(v){this._setter('cell',v)}, enumerable: true, configurable: true},
Партия: {get: function(){return this._getter('Партия')}, set: function(v){this._setter('Партия',v)}, enumerable: true, configurable: true},
КоординатаX: {get: function(){return this._getter('КоординатаX')}, set: function(v){this._setter('КоординатаX',v)}, enumerable: true, configurable: true},
КоординатаY: {get: function(){return this._getter('КоординатаY')}, set: function(v){this._setter('КоординатаY',v)}, enumerable: true, configurable: true},
Поворот: {get: function(){return this._getter('Поворот')}, set: function(v){this._setter('Поворот',v)}, enumerable: true, configurable: true},
ЭтоНестандарт: {get: function(){return this._getter('ЭтоНестандарт')}, set: function(v){this._setter('ЭтоНестандарт',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_task.prototype, { 'Раскрой': {get: function(){return this._getter_ts('Раскрой')}, set: function(v){this._setter_ts('Раскрой',v)}, enumerable: true, configurable: true}})
$p.doc.work_centers_task = new DocManager('doc.work_centers_task')

/**
* ### Документ Расчет
* Аналог заказа покупателя типовых конфигураций.
Содержит инструменты для формирования спецификаций и подготовки данных производства и диспетчеризации
* @class DocCalc_order
* @extends DocObj
* @constructor 
*/
$p.DocCalc_order = class DocCalc_order extends DocObj{}
_define($p.DocCalc_order.prototype, {number_internal: {get: function(){return this._getter('number_internal')}, set: function(v){this._setter('number_internal',v)}, enumerable: true, configurable: true},
project: {get: function(){return this._getter('project')}, set: function(v){this._setter('project',v)}, enumerable: true, configurable: true},
organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
client_of_dealer: {get: function(){return this._getter('client_of_dealer')}, set: function(v){this._setter('client_of_dealer',v)}, enumerable: true, configurable: true},
contract: {get: function(){return this._getter('contract')}, set: function(v){this._setter('contract',v)}, enumerable: true, configurable: true},
bank_account: {get: function(){return this._getter('bank_account')}, set: function(v){this._setter('bank_account',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
manager: {get: function(){return this._getter('manager')}, set: function(v){this._setter('manager',v)}, enumerable: true, configurable: true},
leading_manager: {get: function(){return this._getter('leading_manager')}, set: function(v){this._setter('leading_manager',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
amount_operation: {get: function(){return this._getter('amount_operation')}, set: function(v){this._setter('amount_operation',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
accessory_characteristic: {get: function(){return this._getter('accessory_characteristic')}, set: function(v){this._setter('accessory_characteristic',v)}, enumerable: true, configurable: true},
sys_profile: {get: function(){return this._getter('sys_profile')}, set: function(v){this._setter('sys_profile',v)}, enumerable: true, configurable: true},
sys_furn: {get: function(){return this._getter('sys_furn')}, set: function(v){this._setter('sys_furn',v)}, enumerable: true, configurable: true},
phone: {get: function(){return this._getter('phone')}, set: function(v){this._setter('phone',v)}, enumerable: true, configurable: true},
delivery_area: {get: function(){return this._getter('delivery_area')}, set: function(v){this._setter('delivery_area',v)}, enumerable: true, configurable: true},
shipping_address: {get: function(){return this._getter('shipping_address')}, set: function(v){this._setter('shipping_address',v)}, enumerable: true, configurable: true},
coordinates: {get: function(){return this._getter('coordinates')}, set: function(v){this._setter('coordinates',v)}, enumerable: true, configurable: true},
address_fields: {get: function(){return this._getter('address_fields')}, set: function(v){this._setter('address_fields',v)}, enumerable: true, configurable: true},
difficult: {get: function(){return this._getter('difficult')}, set: function(v){this._setter('difficult',v)}, enumerable: true, configurable: true},
vat_consider: {get: function(){return this._getter('vat_consider')}, set: function(v){this._setter('vat_consider',v)}, enumerable: true, configurable: true},
vat_included: {get: function(){return this._getter('vat_included')}, set: function(v){this._setter('vat_included',v)}, enumerable: true, configurable: true},
settlements_course: {get: function(){return this._getter('settlements_course')}, set: function(v){this._setter('settlements_course',v)}, enumerable: true, configurable: true},
settlements_multiplicity: {get: function(){return this._getter('settlements_multiplicity')}, set: function(v){this._setter('settlements_multiplicity',v)}, enumerable: true, configurable: true},
obj_delivery_state: {get: function(){return this._getter('obj_delivery_state')}, set: function(v){this._setter('obj_delivery_state',v)}, enumerable: true, configurable: true},
category: {get: function(){return this._getter('category')}, set: function(v){this._setter('category',v)}, enumerable: true, configurable: true}});
$p.DocCalc_orderProductionRow = class DocCalc_orderProductionRow extends TabularSectionRow{}
_define($p.DocCalc_orderProductionRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
margin: {get: function(){return this._getter('margin')}, set: function(v){this._setter('margin',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true}});
_define($p.DocCalc_order.prototype, { 'production': {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true}})
$p.DocCalc_orderExtra_fieldsRow = class DocCalc_orderExtra_fieldsRow extends TabularSectionRow{}
_define($p.DocCalc_orderExtra_fieldsRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
margin: {get: function(){return this._getter('margin')}, set: function(v){this._setter('margin',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.DocCalc_order.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.DocCalc_orderContact_informationRow = class DocCalc_orderContact_informationRow extends TabularSectionRow{}
_define($p.DocCalc_orderContact_informationRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
margin: {get: function(){return this._getter('margin')}, set: function(v){this._setter('margin',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true}});
_define($p.DocCalc_order.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.DocCalc_orderPlanningRow = class DocCalc_orderPlanningRow extends TabularSectionRow{}
_define($p.DocCalc_orderPlanningRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
width: {get: function(){return this._getter('width')}, set: function(v){this._setter('width',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
margin: {get: function(){return this._getter('margin')}, set: function(v){this._setter('margin',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
changed: {get: function(){return this._getter('changed')}, set: function(v){this._setter('changed',v)}, enumerable: true, configurable: true},
property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
_define($p.DocCalc_order.prototype, { 'planning': {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true}})
$p.doc.calc_order = new DocManager('doc.calc_order')

/**
* ### Документ ОплатаОтПокупателяПлатежнойКартой
* Оплата от покупателя платежной картой
* @class DocCredit_card_order
* @extends DocObj
* @constructor 
*/
$p.DocCredit_card_order = class DocCredit_card_order extends DocObj{}
_define($p.DocCredit_card_order.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocCredit_card_orderPayment_detailsRow = class DocCredit_card_orderPayment_detailsRow extends TabularSectionRow{}
_define($p.DocCredit_card_orderPayment_detailsRow.prototype, {cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
_define($p.DocCredit_card_order.prototype, { 'payment_details': {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true}})
$p.doc.credit_card_order = new DocManager('doc.credit_card_order')

/**
* ### Документ МощностиРЦ
* Мощности рабочих центров
* @class DocWork_centers_performance
* @extends DocObj
* @constructor 
*/
$p.DocWork_centers_performance = class DocWork_centers_performance extends DocObj{}
_define($p.DocWork_centers_performance.prototype, {start_date: {get: function(){return this._getter('start_date')}, set: function(v){this._setter('start_date',v)}, enumerable: true, configurable: true},
expiration_date: {get: function(){return this._getter('expiration_date')}, set: function(v){this._setter('expiration_date',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocWork_centers_performancePlanningRow = class DocWork_centers_performancePlanningRow extends TabularSectionRow{}
_define($p.DocWork_centers_performancePlanningRow.prototype, {date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true}});
_define($p.DocWork_centers_performance.prototype, { 'planning': {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true}})
$p.doc.work_centers_performance = new DocManager('doc.work_centers_performance')

/**
* ### Документ ПлатежноеПоручениеВходящее
* Платежное поручение входящее
* @class DocDebit_bank_order
* @extends DocObj
* @constructor 
*/
$p.DocDebit_bank_order = class DocDebit_bank_order extends DocObj{}
_define($p.DocDebit_bank_order.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocDebit_bank_orderPayment_detailsRow = class DocDebit_bank_orderPayment_detailsRow extends TabularSectionRow{}
_define($p.DocDebit_bank_orderPayment_detailsRow.prototype, {cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
_define($p.DocDebit_bank_order.prototype, { 'payment_details': {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true}})
$p.doc.debit_bank_order = new DocManager('doc.debit_bank_order')

/**
* ### Документ ПлатежноеПоручениеИсходящее
* Платежное поручение исходящее
* @class DocCredit_bank_order
* @extends DocObj
* @constructor 
*/
$p.DocCredit_bank_order = class DocCredit_bank_order extends DocObj{}
_define($p.DocCredit_bank_order.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocCredit_bank_orderPayment_detailsRow = class DocCredit_bank_orderPayment_detailsRow extends TabularSectionRow{}
_define($p.DocCredit_bank_orderPayment_detailsRow.prototype, {cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
_define($p.DocCredit_bank_order.prototype, { 'payment_details': {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true}})
$p.doc.credit_bank_order = new DocManager('doc.credit_bank_order')

/**
* ### Документ ПриходныйКассовыйОрдер
* Приходный кассовый ордер
* @class DocDebit_cash_order
* @extends DocObj
* @constructor 
*/
$p.DocDebit_cash_order = class DocDebit_cash_order extends DocObj{}
_define($p.DocDebit_cash_order.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cashbox: {get: function(){return this._getter('cashbox')}, set: function(v){this._setter('cashbox',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocDebit_cash_orderPayment_detailsRow = class DocDebit_cash_orderPayment_detailsRow extends TabularSectionRow{}
_define($p.DocDebit_cash_orderPayment_detailsRow.prototype, {cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
_define($p.DocDebit_cash_order.prototype, { 'payment_details': {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true}})
$p.doc.debit_cash_order = new DocManager('doc.debit_cash_order')

/**
* ### Документ РасходныйКассовыйОрдер
* Расходный кассовый ордер
* @class DocCredit_cash_order
* @extends DocObj
* @constructor 
*/
$p.DocCredit_cash_order = class DocCredit_cash_order extends DocObj{}
_define($p.DocCredit_cash_order.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
cashbox: {get: function(){return this._getter('cashbox')}, set: function(v){this._setter('cashbox',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocCredit_cash_orderPayment_detailsRow = class DocCredit_cash_orderPayment_detailsRow extends TabularSectionRow{}
_define($p.DocCredit_cash_orderPayment_detailsRow.prototype, {cash_flow_article: {get: function(){return this._getter('cash_flow_article')}, set: function(v){this._setter('cash_flow_article',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true}});
_define($p.DocCredit_cash_order.prototype, { 'payment_details': {get: function(){return this._getter_ts('payment_details')}, set: function(v){this._setter_ts('payment_details',v)}, enumerable: true, configurable: true}})
$p.doc.credit_cash_order = new DocManager('doc.credit_cash_order')

/**
* ### Документ РеализацияТоваровУслуг
* Документы отражают факт реализации (отгрузки) товаров
* @class DocSelling
* @extends DocObj
* @constructor 
*/
$p.DocSelling = class DocSelling extends DocObj{}
_define($p.DocSelling.prototype, {organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
warehouse: {get: function(){return this._getter('warehouse')}, set: function(v){this._setter('warehouse',v)}, enumerable: true, configurable: true},
doc_amount: {get: function(){return this._getter('doc_amount')}, set: function(v){this._setter('doc_amount',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocSellingGoodsRow = class DocSellingGoodsRow extends TabularSectionRow{}
_define($p.DocSellingGoodsRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
_define($p.DocSelling.prototype, { 'goods': {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true}})
$p.DocSellingServicesRow = class DocSellingServicesRow extends TabularSectionRow{}
_define($p.DocSellingServicesRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
unit: {get: function(){return this._getter('unit')}, set: function(v){this._setter('unit',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
content: {get: function(){return this._getter('content')}, set: function(v){this._setter('content',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
vat_rate: {get: function(){return this._getter('vat_rate')}, set: function(v){this._setter('vat_rate',v)}, enumerable: true, configurable: true},
vat_amount: {get: function(){return this._getter('vat_amount')}, set: function(v){this._setter('vat_amount',v)}, enumerable: true, configurable: true},
trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true}});
_define($p.DocSelling.prototype, { 'services': {get: function(){return this._getter_ts('services')}, set: function(v){this._setter_ts('services',v)}, enumerable: true, configurable: true}})
$p.doc.selling = new DocManager('doc.selling')

/**
* ### Документ УстановкаЦенНоменклатуры
* Установка цен номенклатуры
* @class DocNom_prices_setup
* @extends DocObj
* @constructor 
*/
$p.DocNom_prices_setup = class DocNom_prices_setup extends DocObj{}
_define($p.DocNom_prices_setup.prototype, {price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true},
responsible: {get: function(){return this._getter('responsible')}, set: function(v){this._setter('responsible',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocNom_prices_setupGoodsRow = class DocNom_prices_setupGoodsRow extends TabularSectionRow{}
_define($p.DocNom_prices_setupGoodsRow.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true}});
_define($p.DocNom_prices_setup.prototype, { 'goods': {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true}})
$p.doc.nom_prices_setup = new DocManager('doc.nom_prices_setup')

/**
* ### Документ СобытиеПланирования
* Событие планирования
* @class DocPlanning_event
* @extends DocObj
* @constructor 
*/
$p.DocPlanning_event = class DocPlanning_event extends DocObj{}
_define($p.DocPlanning_event.prototype, {phase: {get: function(){return this._getter('phase')}, set: function(v){this._setter('phase',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
recipient: {get: function(){return this._getter('recipient')}, set: function(v){this._setter('recipient',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocPlanning_eventExecutorsRow = class DocPlanning_eventExecutorsRow extends TabularSectionRow{}
_define($p.DocPlanning_eventExecutorsRow.prototype, {executor: {get: function(){return this._getter('executor')}, set: function(v){this._setter('executor',v)}, enumerable: true, configurable: true}});
_define($p.DocPlanning_event.prototype, { 'executors': {get: function(){return this._getter_ts('executors')}, set: function(v){this._setter_ts('executors',v)}, enumerable: true, configurable: true}})
$p.DocPlanning_eventPlanningRow = class DocPlanning_eventPlanningRow extends TabularSectionRow{}
_define($p.DocPlanning_eventPlanningRow.prototype, {executor: {get: function(){return this._getter('executor')}, set: function(v){this._setter('executor',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
event_time: {get: function(){return this._getter('event_time')}, set: function(v){this._setter('event_time',v)}, enumerable: true, configurable: true}});
_define($p.DocPlanning_event.prototype, { 'planning': {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true}})
$p.doc.planning_event = new DocManager('doc.planning_event')

/**
* ### Регистр сведений СостоянияЗаказовКлиентов
* Состояния заказов клиентов
* @class IregBuyers_order_states
* @extends RegisterRow
* @constructor 
*/
$p.IregBuyers_order_states = class IregBuyers_order_states extends RegisterRow{}
_define($p.IregBuyers_order_states.prototype, {invoice: {get: function(){return this._getter('invoice')}, set: function(v){this._setter('invoice',v)}, enumerable: true, configurable: true},
state: {get: function(){return this._getter('state')}, set: function(v){this._setter('state',v)}, enumerable: true, configurable: true},
event_date: {get: function(){return this._getter('event_date')}, set: function(v){this._setter('event_date',v)}, enumerable: true, configurable: true},
СуммаОплаты: {get: function(){return this._getter('СуммаОплаты')}, set: function(v){this._setter('СуммаОплаты',v)}, enumerable: true, configurable: true},
ПроцентОплаты: {get: function(){return this._getter('ПроцентОплаты')}, set: function(v){this._setter('ПроцентОплаты',v)}, enumerable: true, configurable: true},
СуммаОтгрузки: {get: function(){return this._getter('СуммаОтгрузки')}, set: function(v){this._setter('СуммаОтгрузки',v)}, enumerable: true, configurable: true},
ПроцентОтгрузки: {get: function(){return this._getter('ПроцентОтгрузки')}, set: function(v){this._setter('ПроцентОтгрузки',v)}, enumerable: true, configurable: true},
СуммаДолга: {get: function(){return this._getter('СуммаДолга')}, set: function(v){this._setter('СуммаДолга',v)}, enumerable: true, configurable: true},
ПроцентДолга: {get: function(){return this._getter('ПроцентДолга')}, set: function(v){this._setter('ПроцентДолга',v)}, enumerable: true, configurable: true},
ЕстьРасхожденияОрдерНакладная: {get: function(){return this._getter('ЕстьРасхожденияОрдерНакладная')}, set: function(v){this._setter('ЕстьРасхожденияОрдерНакладная',v)}, enumerable: true, configurable: true}});
$p.ireg.buyers_order_states = new InfoRegManager('ireg.buyers_order_states')

/**
* ### Регистр сведений $log
* Журнал событий
* @class Ireg$log
* @extends RegisterRow
* @constructor 
*/
$p.Ireg$log = class Ireg$log extends RegisterRow{}
_define($p.Ireg$log.prototype, {date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
sequence: {get: function(){return this._getter('sequence')}, set: function(v){this._setter('sequence',v)}, enumerable: true, configurable: true},
class: {get: function(){return this._getter('class')}, set: function(v){this._setter('class',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true}});
$p.ireg.$log = new LogManager('ireg.$log')

/**
* ### Регистр сведений пзМаржинальныеКоэффициентыИСкидки
* Маржинальные коэффициенты
* @class IregMargin_coefficients
* @extends RegisterRow
* @constructor 
*/
$p.IregMargin_coefficients = class IregMargin_coefficients extends RegisterRow{}
_define($p.IregMargin_coefficients.prototype, {price_group: {get: function(){return this._getter('price_group')}, set: function(v){this._setter('price_group',v)}, enumerable: true, configurable: true},
parameters_key: {get: function(){return this._getter('parameters_key')}, set: function(v){this._setter('parameters_key',v)}, enumerable: true, configurable: true},
condition_formula: {get: function(){return this._getter('condition_formula')}, set: function(v){this._setter('condition_formula',v)}, enumerable: true, configurable: true},
marginality: {get: function(){return this._getter('marginality')}, set: function(v){this._setter('marginality',v)}, enumerable: true, configurable: true},
marginality_min: {get: function(){return this._getter('marginality_min')}, set: function(v){this._setter('marginality_min',v)}, enumerable: true, configurable: true},
marginality_internal: {get: function(){return this._getter('marginality_internal')}, set: function(v){this._setter('marginality_internal',v)}, enumerable: true, configurable: true},
price_type_first_cost: {get: function(){return this._getter('price_type_first_cost')}, set: function(v){this._setter('price_type_first_cost',v)}, enumerable: true, configurable: true},
price_type_sale: {get: function(){return this._getter('price_type_sale')}, set: function(v){this._setter('price_type_sale',v)}, enumerable: true, configurable: true},
price_type_internal: {get: function(){return this._getter('price_type_internal')}, set: function(v){this._setter('price_type_internal',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
sale_formula: {get: function(){return this._getter('sale_formula')}, set: function(v){this._setter('sale_formula',v)}, enumerable: true, configurable: true},
internal_formula: {get: function(){return this._getter('internal_formula')}, set: function(v){this._setter('internal_formula',v)}, enumerable: true, configurable: true},
external_formula: {get: function(){return this._getter('external_formula')}, set: function(v){this._setter('external_formula',v)}, enumerable: true, configurable: true},
extra_charge_external: {get: function(){return this._getter('extra_charge_external')}, set: function(v){this._setter('extra_charge_external',v)}, enumerable: true, configurable: true},
discount_external: {get: function(){return this._getter('discount_external')}, set: function(v){this._setter('discount_external',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.ireg.margin_coefficients = new InfoRegManager('ireg.margin_coefficients')

/**
* ### Регистр сведений КурсыВалют
* Курсы валют
* @class IregCurrency_courses
* @extends RegisterRow
* @constructor 
*/
$p.IregCurrency_courses = class IregCurrency_courses extends RegisterRow{}
_define($p.IregCurrency_courses.prototype, {currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true},
period: {get: function(){return this._getter('period')}, set: function(v){this._setter('period',v)}, enumerable: true, configurable: true},
course: {get: function(){return this._getter('course')}, set: function(v){this._setter('course',v)}, enumerable: true, configurable: true},
multiplicity: {get: function(){return this._getter('multiplicity')}, set: function(v){this._setter('multiplicity',v)}, enumerable: true, configurable: true}});
$p.ireg.currency_courses = new InfoRegManager('ireg.currency_courses')

/**
* ### Регистр накопления Планирование
* Планирование
* @class AregPlanning
* @extends RegisterRow
* @constructor 
*/
$p.AregPlanning = class AregPlanning extends RegisterRow{}
_define($p.AregPlanning.prototype, {phase: {get: function(){return this._getter('phase')}, set: function(v){this._setter('phase',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
period: {get: function(){return this._getter('period')}, set: function(v){this._setter('period',v)}, enumerable: true, configurable: true},
recorder: {get: function(){return this._getter('recorder')}, set: function(v){this._setter('recorder',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
cost: {get: function(){return this._getter('cost')}, set: function(v){this._setter('cost',v)}, enumerable: true, configurable: true}});
$p.areg.planning = new AccumRegManager('areg.planning')

/**
* ### Регистр накопления РасчетыСКонтрагентами
* Расчеты с контрагентами
* @class AregInvoice_payments
* @extends RegisterRow
* @constructor 
*/
$p.AregInvoice_payments = class AregInvoice_payments extends RegisterRow{}
_define($p.AregInvoice_payments.prototype, {trans: {get: function(){return this._getter('trans')}, set: function(v){this._setter('trans',v)}, enumerable: true, configurable: true},
partner: {get: function(){return this._getter('partner')}, set: function(v){this._setter('partner',v)}, enumerable: true, configurable: true},
organization: {get: function(){return this._getter('organization')}, set: function(v){this._setter('organization',v)}, enumerable: true, configurable: true},
period: {get: function(){return this._getter('period')}, set: function(v){this._setter('period',v)}, enumerable: true, configurable: true},
recorder: {get: function(){return this._getter('recorder')}, set: function(v){this._setter('recorder',v)}, enumerable: true, configurable: true},
amount_mutual: {get: function(){return this._getter('amount_mutual')}, set: function(v){this._setter('amount_mutual',v)}, enumerable: true, configurable: true},
amount_operation: {get: function(){return this._getter('amount_operation')}, set: function(v){this._setter('amount_operation',v)}, enumerable: true, configurable: true}});
$p.areg.invoice_payments = new AccumRegManager('areg.invoice_payments')

/**
* ### Обработка builder_price
* Метаданные карточки цен номенклатуры
* @class DpBuilder_price
* @extends DataProcessorObj
* @constructor 
*/
$p.DpBuilder_price = class DpBuilder_price extends DataProcessorObj{}
_define($p.DpBuilder_price.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true}});
$p.DpBuilder_priceGoodsRow = class DpBuilder_priceGoodsRow extends TabularSectionRow{}
_define($p.DpBuilder_priceGoodsRow.prototype, {price_type: {get: function(){return this._getter('price_type')}, set: function(v){this._setter('price_type',v)}, enumerable: true, configurable: true},
date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
nom_characteristic: {get: function(){return this._getter('nom_characteristic')}, set: function(v){this._setter('nom_characteristic',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
currency: {get: function(){return this._getter('currency')}, set: function(v){this._setter('currency',v)}, enumerable: true, configurable: true}});
_define($p.DpBuilder_price.prototype, { 'goods': {get: function(){return this._getter_ts('goods')}, set: function(v){this._setter_ts('goods',v)}, enumerable: true, configurable: true}})
$p.dp.builder_price = new DataProcessorsManager('dp.builder_price')

/**
* ### Обработка ЗаказПокупателя
* УПзП: Заказ покупателя
* @class DpBuyers_order
* @extends DataProcessorObj
* @constructor 
*/
$p.DpBuyers_order = class DpBuyers_order extends DataProcessorObj{}
_define($p.DpBuyers_order.prototype, {nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
sys: {get: function(){return this._getter('sys')}, set: function(v){this._setter('sys',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
discount_percent_internal: {get: function(){return this._getter('discount_percent_internal')}, set: function(v){this._setter('discount_percent_internal',v)}, enumerable: true, configurable: true},
discount: {get: function(){return this._getter('discount')}, set: function(v){this._setter('discount',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
shipping_date: {get: function(){return this._getter('shipping_date')}, set: function(v){this._setter('shipping_date',v)}, enumerable: true, configurable: true},
client_number: {get: function(){return this._getter('client_number')}, set: function(v){this._setter('client_number',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
shipping_address: {get: function(){return this._getter('shipping_address')}, set: function(v){this._setter('shipping_address',v)}, enumerable: true, configurable: true},
phone: {get: function(){return this._getter('phone')}, set: function(v){this._setter('phone',v)}, enumerable: true, configurable: true},
price_internal: {get: function(){return this._getter('price_internal')}, set: function(v){this._setter('price_internal',v)}, enumerable: true, configurable: true},
amount_internal: {get: function(){return this._getter('amount_internal')}, set: function(v){this._setter('amount_internal',v)}, enumerable: true, configurable: true},
base_block: {get: function(){return this._getter('base_block')}, set: function(v){this._setter('base_block',v)}, enumerable: true, configurable: true}});
$p.DpBuyers_orderProduct_paramsRow = class DpBuyers_orderProduct_paramsRow extends TabularSectionRow{}
_define($p.DpBuyers_orderProduct_paramsRow.prototype, {ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true}});
_define($p.DpBuyers_order.prototype, { 'product_params': {get: function(){return this._getter_ts('product_params')}, set: function(v){this._setter_ts('product_params',v)}, enumerable: true, configurable: true}})
$p.DpBuyers_orderProductionRow = class DpBuyers_orderProductionRow extends TabularSectionRow{}
_define($p.DpBuyers_orderProductionRow.prototype, {ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true}});
_define($p.DpBuyers_order.prototype, { 'production': {get: function(){return this._getter_ts('production')}, set: function(v){this._setter_ts('production',v)}, enumerable: true, configurable: true}})
$p.DpBuyers_orderGlass_specificationRow = class DpBuyers_orderGlass_specificationRow extends TabularSectionRow{}
_define($p.DpBuyers_orderGlass_specificationRow.prototype, {ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true}});
_define($p.DpBuyers_order.prototype, { 'glass_specification': {get: function(){return this._getter_ts('glass_specification')}, set: function(v){this._setter_ts('glass_specification',v)}, enumerable: true, configurable: true}})
$p.DpBuyers_orderSpecificationRow = class DpBuyers_orderSpecificationRow extends TabularSectionRow{}
_define($p.DpBuyers_orderSpecificationRow.prototype, {ind: {get: function(){return this._getter('ind')}, set: function(v){this._setter('ind',v)}, enumerable: true, configurable: true},
param: {get: function(){return this._getter('param')}, set: function(v){this._setter('param',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
hide: {get: function(){return this._getter('hide')}, set: function(v){this._setter('hide',v)}, enumerable: true, configurable: true},
nom: {get: function(){return this._getter('nom')}, set: function(v){this._setter('nom',v)}, enumerable: true, configurable: true},
characteristic: {get: function(){return this._getter('characteristic')}, set: function(v){this._setter('characteristic',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
len: {get: function(){return this._getter('len')}, set: function(v){this._setter('len',v)}, enumerable: true, configurable: true},
height: {get: function(){return this._getter('height')}, set: function(v){this._setter('height',v)}, enumerable: true, configurable: true},
depth: {get: function(){return this._getter('depth')}, set: function(v){this._setter('depth',v)}, enumerable: true, configurable: true},
s: {get: function(){return this._getter('s')}, set: function(v){this._setter('s',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
first_cost: {get: function(){return this._getter('first_cost')}, set: function(v){this._setter('first_cost',v)}, enumerable: true, configurable: true},
price: {get: function(){return this._getter('price')}, set: function(v){this._setter('price',v)}, enumerable: true, configurable: true},
discount_percent: {get: function(){return this._getter('discount_percent')}, set: function(v){this._setter('discount_percent',v)}, enumerable: true, configurable: true},
amount: {get: function(){return this._getter('amount')}, set: function(v){this._setter('amount',v)}, enumerable: true, configurable: true},
ordn: {get: function(){return this._getter('ordn')}, set: function(v){this._setter('ordn',v)}, enumerable: true, configurable: true},
qty: {get: function(){return this._getter('qty')}, set: function(v){this._setter('qty',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
dop: {get: function(){return this._getter('dop')}, set: function(v){this._setter('dop',v)}, enumerable: true, configurable: true},
nom_set: {get: function(){return this._getter('nom_set')}, set: function(v){this._setter('nom_set',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
quantity: {get: function(){return this._getter('quantity')}, set: function(v){this._setter('quantity',v)}, enumerable: true, configurable: true},
handle_height_base: {get: function(){return this._getter('handle_height_base')}, set: function(v){this._setter('handle_height_base',v)}, enumerable: true, configurable: true},
handle_height_min: {get: function(){return this._getter('handle_height_min')}, set: function(v){this._setter('handle_height_min',v)}, enumerable: true, configurable: true},
handle_height_max: {get: function(){return this._getter('handle_height_max')}, set: function(v){this._setter('handle_height_max',v)}, enumerable: true, configurable: true},
contraction: {get: function(){return this._getter('contraction')}, set: function(v){this._setter('contraction',v)}, enumerable: true, configurable: true},
contraction_option: {get: function(){return this._getter('contraction_option')}, set: function(v){this._setter('contraction_option',v)}, enumerable: true, configurable: true},
coefficient: {get: function(){return this._getter('coefficient')}, set: function(v){this._setter('coefficient',v)}, enumerable: true, configurable: true},
flap_weight_min: {get: function(){return this._getter('flap_weight_min')}, set: function(v){this._setter('flap_weight_min',v)}, enumerable: true, configurable: true},
flap_weight_max: {get: function(){return this._getter('flap_weight_max')}, set: function(v){this._setter('flap_weight_max',v)}, enumerable: true, configurable: true},
side: {get: function(){return this._getter('side')}, set: function(v){this._setter('side',v)}, enumerable: true, configurable: true},
cnn_side: {get: function(){return this._getter('cnn_side')}, set: function(v){this._setter('cnn_side',v)}, enumerable: true, configurable: true},
offset_option: {get: function(){return this._getter('offset_option')}, set: function(v){this._setter('offset_option',v)}, enumerable: true, configurable: true},
formula: {get: function(){return this._getter('formula')}, set: function(v){this._setter('formula',v)}, enumerable: true, configurable: true},
transfer_option: {get: function(){return this._getter('transfer_option')}, set: function(v){this._setter('transfer_option',v)}, enumerable: true, configurable: true},
is_main_specification_row: {get: function(){return this._getter('is_main_specification_row')}, set: function(v){this._setter('is_main_specification_row',v)}, enumerable: true, configurable: true},
is_set_row: {get: function(){return this._getter('is_set_row')}, set: function(v){this._setter('is_set_row',v)}, enumerable: true, configurable: true},
is_procedure_row: {get: function(){return this._getter('is_procedure_row')}, set: function(v){this._setter('is_procedure_row',v)}, enumerable: true, configurable: true},
is_order_row: {get: function(){return this._getter('is_order_row')}, set: function(v){this._setter('is_order_row',v)}, enumerable: true, configurable: true},
origin: {get: function(){return this._getter('origin')}, set: function(v){this._setter('origin',v)}, enumerable: true, configurable: true}});
_define($p.DpBuyers_order.prototype, { 'specification': {get: function(){return this._getter_ts('specification')}, set: function(v){this._setter_ts('specification',v)}, enumerable: true, configurable: true}})
$p.dp.buyers_order = new DataProcessorsManager('dp.buyers_order')

/**
* ### Обработка builder_lay_impost
* Импосты и раскладки
* @class DpBuilder_lay_impost
* @extends DataProcessorObj
* @constructor 
*/
$p.DpBuilder_lay_impost = class DpBuilder_lay_impost extends DataProcessorObj{}
_define($p.DpBuilder_lay_impost.prototype, {elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
split: {get: function(){return this._getter('split')}, set: function(v){this._setter('split',v)}, enumerable: true, configurable: true},
elm_by_y: {get: function(){return this._getter('elm_by_y')}, set: function(v){this._setter('elm_by_y',v)}, enumerable: true, configurable: true},
step_by_y: {get: function(){return this._getter('step_by_y')}, set: function(v){this._setter('step_by_y',v)}, enumerable: true, configurable: true},
align_by_y: {get: function(){return this._getter('align_by_y')}, set: function(v){this._setter('align_by_y',v)}, enumerable: true, configurable: true},
inset_by_y: {get: function(){return this._getter('inset_by_y')}, set: function(v){this._setter('inset_by_y',v)}, enumerable: true, configurable: true},
elm_by_x: {get: function(){return this._getter('elm_by_x')}, set: function(v){this._setter('elm_by_x',v)}, enumerable: true, configurable: true},
step_by_x: {get: function(){return this._getter('step_by_x')}, set: function(v){this._setter('step_by_x',v)}, enumerable: true, configurable: true},
align_by_x: {get: function(){return this._getter('align_by_x')}, set: function(v){this._setter('align_by_x',v)}, enumerable: true, configurable: true},
inset_by_x: {get: function(){return this._getter('inset_by_x')}, set: function(v){this._setter('inset_by_x',v)}, enumerable: true, configurable: true},
w: {get: function(){return this._getter('w')}, set: function(v){this._setter('w',v)}, enumerable: true, configurable: true},
h: {get: function(){return this._getter('h')}, set: function(v){this._setter('h',v)}, enumerable: true, configurable: true}});
$p.dp.builder_lay_impost = new DataProcessorsManager('dp.builder_lay_impost')

/**
* ### Обработка builder_pen
* Метаданные инструмента pen (рисование профилей) графического построителя
* @class DpBuilder_pen
* @extends DataProcessorObj
* @constructor 
*/
$p.DpBuilder_pen = class DpBuilder_pen extends DataProcessorObj{}
_define($p.DpBuilder_pen.prototype, {elm_type: {get: function(){return this._getter('elm_type')}, set: function(v){this._setter('elm_type',v)}, enumerable: true, configurable: true},
inset: {get: function(){return this._getter('inset')}, set: function(v){this._setter('inset',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
bind_generatrix: {get: function(){return this._getter('bind_generatrix')}, set: function(v){this._setter('bind_generatrix',v)}, enumerable: true, configurable: true},
bind_node: {get: function(){return this._getter('bind_node')}, set: function(v){this._setter('bind_node',v)}, enumerable: true, configurable: true}});
$p.dp.builder_pen = new DataProcessorsManager('dp.builder_pen')

/**
* ### Обработка builder_text
* Метаданные инструмента text графического построителя
* @class DpBuilder_text
* @extends DataProcessorObj
* @constructor 
*/
$p.DpBuilder_text = class DpBuilder_text extends DataProcessorObj{}
_define($p.DpBuilder_text.prototype, {text: {get: function(){return this._getter('text')}, set: function(v){this._setter('text',v)}, enumerable: true, configurable: true},
font_family: {get: function(){return this._getter('font_family')}, set: function(v){this._setter('font_family',v)}, enumerable: true, configurable: true},
bold: {get: function(){return this._getter('bold')}, set: function(v){this._setter('bold',v)}, enumerable: true, configurable: true},
font_size: {get: function(){return this._getter('font_size')}, set: function(v){this._setter('font_size',v)}, enumerable: true, configurable: true},
angle: {get: function(){return this._getter('angle')}, set: function(v){this._setter('angle',v)}, enumerable: true, configurable: true},
align: {get: function(){return this._getter('align')}, set: function(v){this._setter('align',v)}, enumerable: true, configurable: true},
clr: {get: function(){return this._getter('clr')}, set: function(v){this._setter('clr',v)}, enumerable: true, configurable: true},
x: {get: function(){return this._getter('x')}, set: function(v){this._setter('x',v)}, enumerable: true, configurable: true},
y: {get: function(){return this._getter('y')}, set: function(v){this._setter('y',v)}, enumerable: true, configurable: true}});
$p.dp.builder_text = new DataProcessorsManager('dp.builder_text')
})()

}